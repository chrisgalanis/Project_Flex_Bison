Terminals unused in grammar

    SINGLE_MARK


State 53 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 109 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | class_identifier program

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    4 class_body: ε
    5           | functions class_body
    6           | class_members class_body
    7           | class_identifier class_body

    8 class_members: variable_initialization SEMICOLON
    9              | variable_assignment SEMICOLON
   10              | member_access SEMICOLON

   11 variable_type: INT
   12              | DOUBLE
   13              | CHAR
   14              | BOOLEAN
   15              | STRING

   16 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

   17 member_access: VAR_NAME DOT VAR_NAME

   18 variable_assignment: VAR_NAME EQUAL_SIGN expression

   19 expression: expression PLUS term
   20           | expression MINUS term
   21           | BRACKET_LEFT expression BRACKET_RIGHT
   22           | term

   23 term: term MULTIPLY id
   24     | term DIVIDE id
   25     | BRACKET_LEFT term BRACKET_RIGHT
   26     | id

   27 id: variable_value
   28   | VAR_NAME
   29   | BRACKET_LEFT id BRACKET_RIGHT

   30 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   31          | function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

   32 function_visibility: PRIVATE
   33                    | PUBLIC

   34 arguments: ε
   35          | parameters

   36 parameters: variable_type VAR_NAME arguments_end

   37 arguments_end: ε
   38              | COMMA parameters

   39 inside_void_function: inside_brackets
   40                     | inside_brackets RETURN SEMICOLON

   41 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON
   42                | inside_brackets RETURN variable_value SEMICOLON

   43 inside_brackets: ε
   44                | loops_n_condition inside_brackets
   45                | variable_assignment SEMICOLON

   46 loops_n_condition: for_statement
   47                  | switch
   48                  | do_while
   49                  | if
   50                  | variable_initialization SEMICOLON
   51                  | variable_assignment SEMICOLON
   52                  | class_instance SEMICOLON
   53                  | member_access SEMICOLON

   54 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

   55 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step

   56 for_variable: ε
   57             | variable_type VAR_NAME EQUAL_SIGN variable_value

   58 for_comparison: ε
   59               | VAR_NAME CONDITION_SYMBOL comparison_value for_bool_operator

   60 comparison_value: INT_VALUE
   61                 | DOUBLE_VALUE
   62                 | CHAR_VALUE
   63                 | BOOLEAN_VALUE
   64                 | VAR_NAME

   65 for_bool_operator: ε
   66                  | BOOL_SYMBOL for_comparison

   67 for_step: ε
   68         | VAR_NAME step

   69 step: INCREAMENT_DECREAMENT
   70     | LOOP_STEP step_value

   71 step_value: INT_VALUE
   72           | DOUBLE_VALUE

   73 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

   74 do_condition: operand CONDITION_SYMBOL operand do_bool_operator
   75             | BOOLEAN_VALUE
   76             | VAR_NAME

   77 do_bool_operator: ε
   78                 | BOOL_SYMBOL do_condition

   79 operand: VAR_NAME
   80        | INT_VALUE
   81        | DOUBLE_VALUE
   82        | CHAR_VALUE
   83        | BOOLEAN_VALUE

   84 variable_initialization: variable_type VAR_NAME

   85 variable_value: INT_VALUE
   86               | CHAR_VALUE
   87               | DOUBLE_VALUE
   88               | BOOLEAN_VALUE
   89               | STRING_VALUE

   90 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

   91 case: CASE switch_value COLON switch_content case
   92     | ε

   93 switch_value: INT_VALUE
   94             | CHAR_VALUE

   95 switch_content: ε
   96               | BREAK SEMICOLON

   97 default: DEFAULT COLON switch_content
   98        | ε

   99 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

  100 else_if: ε
  101        | ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if
  102        | else

  103 else: ELSE CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

  104 if_condition: operand CONDITION_SYMBOL operand if_bool_operator
  105             | BOOLEAN_VALUE
  106             | VAR_NAME

  107 if_bool_operator: ε
  108                 | BOOL_SYMBOL if_condition


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CURLY_BRACKET_LEFT (258) 3 30 31 54 73 90 99 101 103
    CURLY_BRACKET_RIGHT (259) 3 30 31 54 73 90 99 101 103
    BRACKET_LEFT (260) 16 21 25 29 30 31 54 73 90 99 101
    BRACKET_RIGHT (261) 16 21 25 29 30 31 54 73 90 99 101
    EQUAL_SIGN (262) 16 18 57
    SEMICOLON (263) 8 9 10 40 41 42 45 50 51 52 53 55 73 96
    SINGLE_MARK (264)
    COLON (265) 91 97
    COMMA (266) 38
    DOT (267) 17
    PLUS (268) 19
    MINUS (269) 20
    MULTIPLY (270) 23
    DIVIDE (271) 24
    PUBLIC (272) 3 33
    PRIVATE (273) 32
    CLASS (274) 3
    CLASS_NAME (275) 3 16
    NEW (276) 16
    IF (277) 99 101
    ELSE (278) 101 103
    FOR (279) 54
    DO (280) 73
    WHILE (281) 73
    CONDITION_SYMBOL (282) 59 74 104
    BOOL_SYMBOL (283) 66 78 108
    INCREAMENT_DECREAMENT (284) 69
    LOOP_STEP (285) 70
    SWITCH (286) 90
    CASE (287) 91
    DEFAULT (288) 97
    BREAK (289) 96
    RETURN (290) 40 41 42
    VAR_NAME (291) 16 17 18 28 30 31 36 41 57 59 64 68 76 79 84 90 106
    VOID (292) 30
    INT (293) 11
    CHAR (294) 13
    DOUBLE (295) 12
    BOOLEAN (296) 14
    STRING (297) 15
    INT_VALUE (298) 60 71 80 85 93
    CHAR_VALUE (299) 62 82 86 94
    DOUBLE_VALUE (300) 61 72 81 87
    BOOLEAN_VALUE (301) 63 75 83 88 105
    STRING_VALUE (302) 89


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1 2
        on right: 0 2
    class_identifier (50)
        on left: 3
        on right: 2 7
    class_body (51)
        on left: 4 5 6 7
        on right: 3 5 6 7
    class_members (52)
        on left: 8 9 10
        on right: 6
    variable_type (53)
        on left: 11 12 13 14 15
        on right: 31 36 57 84
    class_instance (54)
        on left: 16
        on right: 52
    member_access (55)
        on left: 17
        on right: 10 53
    variable_assignment (56)
        on left: 18
        on right: 9 45 51
    expression (57)
        on left: 19 20 21 22
        on right: 18 19 20 21
    term (58)
        on left: 23 24 25 26
        on right: 19 20 22 23 24 25
    id (59)
        on left: 27 28 29
        on right: 23 24 26 29
    functions (60)
        on left: 30 31
        on right: 5
    function_visibility (61)
        on left: 32 33
        on right: 30 31
    arguments (62)
        on left: 34 35
        on right: 30 31
    parameters (63)
        on left: 36
        on right: 35 38
    arguments_end (64)
        on left: 37 38
        on right: 36
    inside_void_function (65)
        on left: 39 40
        on right: 30
    inside_function (66)
        on left: 41 42
        on right: 31
    inside_brackets (67)
        on left: 43 44 45
        on right: 39 40 41 42 44 54 73 99 101 103
    loops_n_condition (68)
        on left: 46 47 48 49 50 51 52 53
        on right: 44
    for_statement (69)
        on left: 54
        on right: 46
    for_condition (70)
        on left: 55
        on right: 54
    for_variable (71)
        on left: 56 57
        on right: 55
    for_comparison (72)
        on left: 58 59
        on right: 55 66
    comparison_value (73)
        on left: 60 61 62 63 64
        on right: 59
    for_bool_operator (74)
        on left: 65 66
        on right: 59
    for_step (75)
        on left: 67 68
        on right: 55
    step (76)
        on left: 69 70
        on right: 68
    step_value (77)
        on left: 71 72
        on right: 70
    do_while (78)
        on left: 73
        on right: 48
    do_condition (79)
        on left: 74 75 76
        on right: 73 78
    do_bool_operator (80)
        on left: 77 78
        on right: 74
    operand (81)
        on left: 79 80 81 82 83
        on right: 74 104
    variable_initialization (82)
        on left: 84
        on right: 8 50
    variable_value (83)
        on left: 85 86 87 88 89
        on right: 27 42 57
    switch (84)
        on left: 90
        on right: 47
    case (85)
        on left: 91 92
        on right: 90 91
    switch_value (86)
        on left: 93 94
        on right: 91
    switch_content (87)
        on left: 95 96
        on right: 91 97
    default (88)
        on left: 97 98
        on right: 90
    if (89)
        on left: 99
        on right: 49
    else_if (90)
        on left: 100 101 102
        on right: 99 101
    else (91)
        on left: 103
        on right: 102
    if_condition (92)
        on left: 104 105 106
        on right: 99 101 108
    if_bool_operator (93)
        on left: 107 108
        on right: 104


State 0

    0 $accept: • program $end

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program           go to state 2
    class_identifier  go to state 3


State 1

    3 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    2 program: class_identifier • program

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program           go to state 6
    class_identifier  go to state 3


State 4

    3 class_identifier: PUBLIC CLASS • CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 7


State 5

    0 $accept: program $end •

    $default  accept


State 6

    2 program: class_identifier program •

    $default  reduce using rule 2 (program)


State 7

    3 class_identifier: PUBLIC CLASS CLASS_NAME • CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 8


State 8

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT • class_body CURLY_BRACKET_RIGHT

    PUBLIC    shift, and go to state 9
    PRIVATE   shift, and go to state 10
    VAR_NAME  shift, and go to state 11
    INT       shift, and go to state 12
    CHAR      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    STRING    shift, and go to state 16

    $default  reduce using rule 4 (class_body)

    class_identifier         go to state 17
    class_body               go to state 18
    class_members            go to state 19
    variable_type            go to state 20
    member_access            go to state 21
    variable_assignment      go to state 22
    functions                go to state 23
    function_visibility      go to state 24
    variable_initialization  go to state 25


State 9

    3 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT
   33 function_visibility: PUBLIC •

    CLASS  shift, and go to state 4

    $default  reduce using rule 33 (function_visibility)


State 10

   32 function_visibility: PRIVATE •

    $default  reduce using rule 32 (function_visibility)


State 11

   17 member_access: VAR_NAME • DOT VAR_NAME
   18 variable_assignment: VAR_NAME • EQUAL_SIGN expression

    EQUAL_SIGN  shift, and go to state 26
    DOT         shift, and go to state 27


State 12

   11 variable_type: INT •

    $default  reduce using rule 11 (variable_type)


State 13

   13 variable_type: CHAR •

    $default  reduce using rule 13 (variable_type)


State 14

   12 variable_type: DOUBLE •

    $default  reduce using rule 12 (variable_type)


State 15

   14 variable_type: BOOLEAN •

    $default  reduce using rule 14 (variable_type)


State 16

   15 variable_type: STRING •

    $default  reduce using rule 15 (variable_type)


State 17

    7 class_body: class_identifier • class_body

    PUBLIC    shift, and go to state 9
    PRIVATE   shift, and go to state 10
    VAR_NAME  shift, and go to state 11
    INT       shift, and go to state 12
    CHAR      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    STRING    shift, and go to state 16

    $default  reduce using rule 4 (class_body)

    class_identifier         go to state 17
    class_body               go to state 28
    class_members            go to state 19
    variable_type            go to state 20
    member_access            go to state 21
    variable_assignment      go to state 22
    functions                go to state 23
    function_visibility      go to state 24
    variable_initialization  go to state 25


State 18

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 29


State 19

    6 class_body: class_members • class_body

    PUBLIC    shift, and go to state 9
    PRIVATE   shift, and go to state 10
    VAR_NAME  shift, and go to state 11
    INT       shift, and go to state 12
    CHAR      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    STRING    shift, and go to state 16

    $default  reduce using rule 4 (class_body)

    class_identifier         go to state 17
    class_body               go to state 30
    class_members            go to state 19
    variable_type            go to state 20
    member_access            go to state 21
    variable_assignment      go to state 22
    functions                go to state 23
    function_visibility      go to state 24
    variable_initialization  go to state 25


State 20

   84 variable_initialization: variable_type • VAR_NAME

    VAR_NAME  shift, and go to state 31


State 21

   10 class_members: member_access • SEMICOLON

    SEMICOLON  shift, and go to state 32


State 22

    9 class_members: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 33


State 23

    5 class_body: functions • class_body

    PUBLIC    shift, and go to state 9
    PRIVATE   shift, and go to state 10
    VAR_NAME  shift, and go to state 11
    INT       shift, and go to state 12
    CHAR      shift, and go to state 13
    DOUBLE    shift, and go to state 14
    BOOLEAN   shift, and go to state 15
    STRING    shift, and go to state 16

    $default  reduce using rule 4 (class_body)

    class_identifier         go to state 17
    class_body               go to state 34
    class_members            go to state 19
    variable_type            go to state 20
    member_access            go to state 21
    variable_assignment      go to state 22
    functions                go to state 23
    function_visibility      go to state 24
    variable_initialization  go to state 25


State 24

   30 functions: function_visibility • VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   31          | function_visibility • variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VOID     shift, and go to state 35
    INT      shift, and go to state 12
    CHAR     shift, and go to state 13
    DOUBLE   shift, and go to state 14
    BOOLEAN  shift, and go to state 15
    STRING   shift, and go to state 16

    variable_type  go to state 36


State 25

    8 class_members: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 37


State 26

   18 variable_assignment: VAR_NAME EQUAL_SIGN • expression

    BRACKET_LEFT   shift, and go to state 38
    VAR_NAME       shift, and go to state 39
    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    expression      go to state 45
    term            go to state 46
    id              go to state 47
    variable_value  go to state 48


State 27

   17 member_access: VAR_NAME DOT • VAR_NAME

    VAR_NAME  shift, and go to state 49


State 28

    7 class_body: class_identifier class_body •

    $default  reduce using rule 7 (class_body)


State 29

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT •

    $default  reduce using rule 3 (class_identifier)


State 30

    6 class_body: class_members class_body •

    $default  reduce using rule 6 (class_body)


State 31

   84 variable_initialization: variable_type VAR_NAME •

    $default  reduce using rule 84 (variable_initialization)


State 32

   10 class_members: member_access SEMICOLON •

    $default  reduce using rule 10 (class_members)


State 33

    9 class_members: variable_assignment SEMICOLON •

    $default  reduce using rule 9 (class_members)


State 34

    5 class_body: functions class_body •

    $default  reduce using rule 5 (class_body)


State 35

   30 functions: function_visibility VOID • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 50


State 36

   31 functions: function_visibility variable_type • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 51


State 37

    8 class_members: variable_initialization SEMICOLON •

    $default  reduce using rule 8 (class_members)


State 38

   21 expression: BRACKET_LEFT • expression BRACKET_RIGHT
   25 term: BRACKET_LEFT • term BRACKET_RIGHT
   29 id: BRACKET_LEFT • id BRACKET_RIGHT

    BRACKET_LEFT   shift, and go to state 38
    VAR_NAME       shift, and go to state 39
    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    expression      go to state 52
    term            go to state 53
    id              go to state 54
    variable_value  go to state 48


State 39

   28 id: VAR_NAME •

    $default  reduce using rule 28 (id)


State 40

   85 variable_value: INT_VALUE •

    $default  reduce using rule 85 (variable_value)


State 41

   86 variable_value: CHAR_VALUE •

    $default  reduce using rule 86 (variable_value)


State 42

   87 variable_value: DOUBLE_VALUE •

    $default  reduce using rule 87 (variable_value)


State 43

   88 variable_value: BOOLEAN_VALUE •

    $default  reduce using rule 88 (variable_value)


State 44

   89 variable_value: STRING_VALUE •

    $default  reduce using rule 89 (variable_value)


State 45

   18 variable_assignment: VAR_NAME EQUAL_SIGN expression •
   19 expression: expression • PLUS term
   20           | expression • MINUS term

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56

    $default  reduce using rule 18 (variable_assignment)


State 46

   22 expression: term •
   23 term: term • MULTIPLY id
   24     | term • DIVIDE id

    MULTIPLY  shift, and go to state 57
    DIVIDE    shift, and go to state 58

    $default  reduce using rule 22 (expression)


State 47

   26 term: id •

    $default  reduce using rule 26 (term)


State 48

   27 id: variable_value •

    $default  reduce using rule 27 (id)


State 49

   17 member_access: VAR_NAME DOT VAR_NAME •

    $default  reduce using rule 17 (member_access)


State 50

   30 functions: function_visibility VOID VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 59


State 51

   31 functions: function_visibility variable_type VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 60


State 52

   19 expression: expression • PLUS term
   20           | expression • MINUS term
   21           | BRACKET_LEFT expression • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 61
    PLUS           shift, and go to state 55
    MINUS          shift, and go to state 56


State 53

   22 expression: term •
   23 term: term • MULTIPLY id
   24     | term • DIVIDE id
   25     | BRACKET_LEFT term • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 62
    MULTIPLY       shift, and go to state 57
    DIVIDE         shift, and go to state 58

    BRACKET_RIGHT  [reduce using rule 22 (expression)]
    $default       reduce using rule 22 (expression)


State 54

   26 term: id •
   29 id: BRACKET_LEFT id • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 63

    BRACKET_RIGHT  [reduce using rule 26 (term)]
    $default       reduce using rule 26 (term)


State 55

   19 expression: expression PLUS • term

    BRACKET_LEFT   shift, and go to state 64
    VAR_NAME       shift, and go to state 39
    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    term            go to state 65
    id              go to state 47
    variable_value  go to state 48


State 56

   20 expression: expression MINUS • term

    BRACKET_LEFT   shift, and go to state 64
    VAR_NAME       shift, and go to state 39
    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    term            go to state 66
    id              go to state 47
    variable_value  go to state 48


State 57

   23 term: term MULTIPLY • id

    BRACKET_LEFT   shift, and go to state 67
    VAR_NAME       shift, and go to state 39
    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    id              go to state 68
    variable_value  go to state 48


State 58

   24 term: term DIVIDE • id

    BRACKET_LEFT   shift, and go to state 67
    VAR_NAME       shift, and go to state 39
    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    id              go to state 69
    variable_value  go to state 48


State 59

   30 functions: function_visibility VOID VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 12
    CHAR     shift, and go to state 13
    DOUBLE   shift, and go to state 14
    BOOLEAN  shift, and go to state 15
    STRING   shift, and go to state 16

    $default  reduce using rule 34 (arguments)

    variable_type  go to state 70
    arguments      go to state 71
    parameters     go to state 72


State 60

   31 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 12
    CHAR     shift, and go to state 13
    DOUBLE   shift, and go to state 14
    BOOLEAN  shift, and go to state 15
    STRING   shift, and go to state 16

    $default  reduce using rule 34 (arguments)

    variable_type  go to state 70
    arguments      go to state 73
    parameters     go to state 72


State 61

   21 expression: BRACKET_LEFT expression BRACKET_RIGHT •

    $default  reduce using rule 21 (expression)


State 62

   25 term: BRACKET_LEFT term BRACKET_RIGHT •

    $default  reduce using rule 25 (term)


State 63

   29 id: BRACKET_LEFT id BRACKET_RIGHT •

    $default  reduce using rule 29 (id)


State 64

   25 term: BRACKET_LEFT • term BRACKET_RIGHT
   29 id: BRACKET_LEFT • id BRACKET_RIGHT

    BRACKET_LEFT   shift, and go to state 64
    VAR_NAME       shift, and go to state 39
    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    term            go to state 74
    id              go to state 54
    variable_value  go to state 48


State 65

   19 expression: expression PLUS term •
   23 term: term • MULTIPLY id
   24     | term • DIVIDE id

    MULTIPLY  shift, and go to state 57
    DIVIDE    shift, and go to state 58

    $default  reduce using rule 19 (expression)


State 66

   20 expression: expression MINUS term •
   23 term: term • MULTIPLY id
   24     | term • DIVIDE id

    MULTIPLY  shift, and go to state 57
    DIVIDE    shift, and go to state 58

    $default  reduce using rule 20 (expression)


State 67

   29 id: BRACKET_LEFT • id BRACKET_RIGHT

    BRACKET_LEFT   shift, and go to state 67
    VAR_NAME       shift, and go to state 39
    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    id              go to state 75
    variable_value  go to state 48


State 68

   23 term: term MULTIPLY id •

    $default  reduce using rule 23 (term)


State 69

   24 term: term DIVIDE id •

    $default  reduce using rule 24 (term)


State 70

   36 parameters: variable_type • VAR_NAME arguments_end

    VAR_NAME  shift, and go to state 76


State 71

   30 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 77


State 72

   35 arguments: parameters •

    $default  reduce using rule 35 (arguments)


State 73

   31 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 78


State 74

   23 term: term • MULTIPLY id
   24     | term • DIVIDE id
   25     | BRACKET_LEFT term • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 62
    MULTIPLY       shift, and go to state 57
    DIVIDE         shift, and go to state 58


State 75

   29 id: BRACKET_LEFT id • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 63


State 76

   36 parameters: variable_type VAR_NAME • arguments_end

    COMMA  shift, and go to state 79

    $default  reduce using rule 37 (arguments_end)

    arguments_end  go to state 80


State 77

   30 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 81


State 78

   31 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 82


State 79

   38 arguments_end: COMMA • parameters

    INT      shift, and go to state 12
    CHAR     shift, and go to state 13
    DOUBLE   shift, and go to state 14
    BOOLEAN  shift, and go to state 15
    STRING   shift, and go to state 16

    variable_type  go to state 70
    parameters     go to state 83


State 80

   36 parameters: variable_type VAR_NAME arguments_end •

    $default  reduce using rule 36 (parameters)


State 81

   30 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_void_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 84
    IF          shift, and go to state 85
    FOR         shift, and go to state 86
    DO          shift, and go to state 87
    SWITCH      shift, and go to state 88
    VAR_NAME    shift, and go to state 11
    INT         shift, and go to state 12
    CHAR        shift, and go to state 13
    DOUBLE      shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    STRING      shift, and go to state 16

    $default  reduce using rule 43 (inside_brackets)

    variable_type            go to state 20
    class_instance           go to state 89
    member_access            go to state 90
    variable_assignment      go to state 91
    inside_void_function     go to state 92
    inside_brackets          go to state 93
    loops_n_condition        go to state 94
    for_statement            go to state 95
    do_while                 go to state 96
    variable_initialization  go to state 97
    switch                   go to state 98
    if                       go to state 99


State 82

   31 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 84
    IF          shift, and go to state 85
    FOR         shift, and go to state 86
    DO          shift, and go to state 87
    SWITCH      shift, and go to state 88
    VAR_NAME    shift, and go to state 11
    INT         shift, and go to state 12
    CHAR        shift, and go to state 13
    DOUBLE      shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    STRING      shift, and go to state 16

    $default  reduce using rule 43 (inside_brackets)

    variable_type            go to state 20
    class_instance           go to state 89
    member_access            go to state 90
    variable_assignment      go to state 91
    inside_function          go to state 100
    inside_brackets          go to state 101
    loops_n_condition        go to state 94
    for_statement            go to state 95
    do_while                 go to state 96
    variable_initialization  go to state 97
    switch                   go to state 98
    if                       go to state 99


State 83

   38 arguments_end: COMMA parameters •

    $default  reduce using rule 38 (arguments_end)


State 84

   16 class_instance: CLASS_NAME • VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    VAR_NAME  shift, and go to state 102


State 85

   99 if: IF • BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT  shift, and go to state 103


State 86

   54 for_statement: FOR • BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 104


State 87

   73 do_while: DO • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_LEFT  shift, and go to state 105


State 88

   90 switch: SWITCH • BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 106


State 89

   52 loops_n_condition: class_instance • SEMICOLON

    SEMICOLON  shift, and go to state 107


State 90

   53 loops_n_condition: member_access • SEMICOLON

    SEMICOLON  shift, and go to state 108


State 91

   45 inside_brackets: variable_assignment • SEMICOLON
   51 loops_n_condition: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 109


State 92

   30 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 110


State 93

   39 inside_void_function: inside_brackets •
   40                     | inside_brackets • RETURN SEMICOLON

    RETURN  shift, and go to state 111

    $default  reduce using rule 39 (inside_void_function)


State 94

   44 inside_brackets: loops_n_condition • inside_brackets

    CLASS_NAME  shift, and go to state 84
    IF          shift, and go to state 85
    FOR         shift, and go to state 86
    DO          shift, and go to state 87
    SWITCH      shift, and go to state 88
    VAR_NAME    shift, and go to state 11
    INT         shift, and go to state 12
    CHAR        shift, and go to state 13
    DOUBLE      shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    STRING      shift, and go to state 16

    $default  reduce using rule 43 (inside_brackets)

    variable_type            go to state 20
    class_instance           go to state 89
    member_access            go to state 90
    variable_assignment      go to state 91
    inside_brackets          go to state 112
    loops_n_condition        go to state 94
    for_statement            go to state 95
    do_while                 go to state 96
    variable_initialization  go to state 97
    switch                   go to state 98
    if                       go to state 99


State 95

   46 loops_n_condition: for_statement •

    $default  reduce using rule 46 (loops_n_condition)


State 96

   48 loops_n_condition: do_while •

    $default  reduce using rule 48 (loops_n_condition)


State 97

   50 loops_n_condition: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 113


State 98

   47 loops_n_condition: switch •

    $default  reduce using rule 47 (loops_n_condition)


State 99

   49 loops_n_condition: if •

    $default  reduce using rule 49 (loops_n_condition)


State 100

   31 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 114


State 101

   41 inside_function: inside_brackets • RETURN VAR_NAME SEMICOLON
   42                | inside_brackets • RETURN variable_value SEMICOLON

    RETURN  shift, and go to state 115


State 102

   16 class_instance: CLASS_NAME VAR_NAME • EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    EQUAL_SIGN  shift, and go to state 116


State 103

   99 if: IF BRACKET_LEFT • if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    VAR_NAME       shift, and go to state 117
    INT_VALUE      shift, and go to state 118
    CHAR_VALUE     shift, and go to state 119
    DOUBLE_VALUE   shift, and go to state 120
    BOOLEAN_VALUE  shift, and go to state 121

    operand       go to state 122
    if_condition  go to state 123


State 104

   54 for_statement: FOR BRACKET_LEFT • for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    INT      shift, and go to state 12
    CHAR     shift, and go to state 13
    DOUBLE   shift, and go to state 14
    BOOLEAN  shift, and go to state 15
    STRING   shift, and go to state 16

    $default  reduce using rule 56 (for_variable)

    variable_type  go to state 124
    for_condition  go to state 125
    for_variable   go to state 126


State 105

   73 do_while: DO CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CLASS_NAME  shift, and go to state 84
    IF          shift, and go to state 85
    FOR         shift, and go to state 86
    DO          shift, and go to state 87
    SWITCH      shift, and go to state 88
    VAR_NAME    shift, and go to state 11
    INT         shift, and go to state 12
    CHAR        shift, and go to state 13
    DOUBLE      shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    STRING      shift, and go to state 16

    $default  reduce using rule 43 (inside_brackets)

    variable_type            go to state 20
    class_instance           go to state 89
    member_access            go to state 90
    variable_assignment      go to state 91
    inside_brackets          go to state 127
    loops_n_condition        go to state 94
    for_statement            go to state 95
    do_while                 go to state 96
    variable_initialization  go to state 97
    switch                   go to state 98
    if                       go to state 99


State 106

   90 switch: SWITCH BRACKET_LEFT • VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 128


State 107

   52 loops_n_condition: class_instance SEMICOLON •

    $default  reduce using rule 52 (loops_n_condition)


State 108

   53 loops_n_condition: member_access SEMICOLON •

    $default  reduce using rule 53 (loops_n_condition)


State 109

   45 inside_brackets: variable_assignment SEMICOLON •
   51 loops_n_condition: variable_assignment SEMICOLON •

    CURLY_BRACKET_RIGHT  reduce using rule 45 (inside_brackets)
    CURLY_BRACKET_RIGHT  [reduce using rule 51 (loops_n_condition)]
    RETURN               reduce using rule 45 (inside_brackets)
    RETURN               [reduce using rule 51 (loops_n_condition)]
    $default             reduce using rule 51 (loops_n_condition)


State 110

   30 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 30 (functions)


State 111

   40 inside_void_function: inside_brackets RETURN • SEMICOLON

    SEMICOLON  shift, and go to state 129


State 112

   44 inside_brackets: loops_n_condition inside_brackets •

    $default  reduce using rule 44 (inside_brackets)


State 113

   50 loops_n_condition: variable_initialization SEMICOLON •

    $default  reduce using rule 50 (loops_n_condition)


State 114

   31 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 31 (functions)


State 115

   41 inside_function: inside_brackets RETURN • VAR_NAME SEMICOLON
   42                | inside_brackets RETURN • variable_value SEMICOLON

    VAR_NAME       shift, and go to state 130
    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    variable_value  go to state 131


State 116

   16 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN • NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    NEW  shift, and go to state 132


State 117

   79 operand: VAR_NAME •
  106 if_condition: VAR_NAME •

    BRACKET_RIGHT  reduce using rule 106 (if_condition)
    $default       reduce using rule 79 (operand)


State 118

   80 operand: INT_VALUE •

    $default  reduce using rule 80 (operand)


State 119

   82 operand: CHAR_VALUE •

    $default  reduce using rule 82 (operand)


State 120

   81 operand: DOUBLE_VALUE •

    $default  reduce using rule 81 (operand)


State 121

   83 operand: BOOLEAN_VALUE •
  105 if_condition: BOOLEAN_VALUE •

    BRACKET_RIGHT  reduce using rule 105 (if_condition)
    $default       reduce using rule 83 (operand)


State 122

  104 if_condition: operand • CONDITION_SYMBOL operand if_bool_operator

    CONDITION_SYMBOL  shift, and go to state 133


State 123

   99 if: IF BRACKET_LEFT if_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_RIGHT  shift, and go to state 134


State 124

   57 for_variable: variable_type • VAR_NAME EQUAL_SIGN variable_value

    VAR_NAME  shift, and go to state 135


State 125

   54 for_statement: FOR BRACKET_LEFT for_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 136


State 126

   55 for_condition: for_variable • SEMICOLON for_comparison SEMICOLON for_step

    SEMICOLON  shift, and go to state 137


State 127

   73 do_while: DO CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_RIGHT  shift, and go to state 138


State 128

   90 switch: SWITCH BRACKET_LEFT VAR_NAME • BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 139


State 129

   40 inside_void_function: inside_brackets RETURN SEMICOLON •

    $default  reduce using rule 40 (inside_void_function)


State 130

   41 inside_function: inside_brackets RETURN VAR_NAME • SEMICOLON

    SEMICOLON  shift, and go to state 140


State 131

   42 inside_function: inside_brackets RETURN variable_value • SEMICOLON

    SEMICOLON  shift, and go to state 141


State 132

   16 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW • CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 142


State 133

  104 if_condition: operand CONDITION_SYMBOL • operand if_bool_operator

    VAR_NAME       shift, and go to state 143
    INT_VALUE      shift, and go to state 118
    CHAR_VALUE     shift, and go to state 119
    DOUBLE_VALUE   shift, and go to state 120
    BOOLEAN_VALUE  shift, and go to state 144

    operand  go to state 145


State 134

   99 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_LEFT  shift, and go to state 146


State 135

   57 for_variable: variable_type VAR_NAME • EQUAL_SIGN variable_value

    EQUAL_SIGN  shift, and go to state 147


State 136

   54 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 148


State 137

   55 for_condition: for_variable SEMICOLON • for_comparison SEMICOLON for_step

    VAR_NAME  shift, and go to state 149

    $default  reduce using rule 58 (for_comparison)

    for_comparison  go to state 150


State 138

   73 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    WHILE  shift, and go to state 151


State 139

   90 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT • CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 152


State 140

   41 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON •

    $default  reduce using rule 41 (inside_function)


State 141

   42 inside_function: inside_brackets RETURN variable_value SEMICOLON •

    $default  reduce using rule 42 (inside_function)


State 142

   16 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME • BRACKET_LEFT BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 153


State 143

   79 operand: VAR_NAME •

    $default  reduce using rule 79 (operand)


State 144

   83 operand: BOOLEAN_VALUE •

    $default  reduce using rule 83 (operand)


State 145

  104 if_condition: operand CONDITION_SYMBOL operand • if_bool_operator

    BOOL_SYMBOL  shift, and go to state 154

    $default  reduce using rule 107 (if_bool_operator)

    if_bool_operator  go to state 155


State 146

   99 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT else_if

    CLASS_NAME  shift, and go to state 84
    IF          shift, and go to state 85
    FOR         shift, and go to state 86
    DO          shift, and go to state 87
    SWITCH      shift, and go to state 88
    VAR_NAME    shift, and go to state 11
    INT         shift, and go to state 12
    CHAR        shift, and go to state 13
    DOUBLE      shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    STRING      shift, and go to state 16

    $default  reduce using rule 43 (inside_brackets)

    variable_type            go to state 20
    class_instance           go to state 89
    member_access            go to state 90
    variable_assignment      go to state 91
    inside_brackets          go to state 156
    loops_n_condition        go to state 94
    for_statement            go to state 95
    do_while                 go to state 96
    variable_initialization  go to state 97
    switch                   go to state 98
    if                       go to state 99


State 147

   57 for_variable: variable_type VAR_NAME EQUAL_SIGN • variable_value

    INT_VALUE      shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41
    DOUBLE_VALUE   shift, and go to state 42
    BOOLEAN_VALUE  shift, and go to state 43
    STRING_VALUE   shift, and go to state 44

    variable_value  go to state 157


State 148

   54 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 84
    IF          shift, and go to state 85
    FOR         shift, and go to state 86
    DO          shift, and go to state 87
    SWITCH      shift, and go to state 88
    VAR_NAME    shift, and go to state 11
    INT         shift, and go to state 12
    CHAR        shift, and go to state 13
    DOUBLE      shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    STRING      shift, and go to state 16

    $default  reduce using rule 43 (inside_brackets)

    variable_type            go to state 20
    class_instance           go to state 89
    member_access            go to state 90
    variable_assignment      go to state 91
    inside_brackets          go to state 158
    loops_n_condition        go to state 94
    for_statement            go to state 95
    do_while                 go to state 96
    variable_initialization  go to state 97
    switch                   go to state 98
    if                       go to state 99


State 149

   59 for_comparison: VAR_NAME • CONDITION_SYMBOL comparison_value for_bool_operator

    CONDITION_SYMBOL  shift, and go to state 159


State 150

   55 for_condition: for_variable SEMICOLON for_comparison • SEMICOLON for_step

    SEMICOLON  shift, and go to state 160


State 151

   73 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE • BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    BRACKET_LEFT  shift, and go to state 161


State 152

   90 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT • case default CURLY_BRACKET_RIGHT

    CASE  shift, and go to state 162

    $default  reduce using rule 92 (case)

    case  go to state 163


State 153

   16 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 164


State 154

  108 if_bool_operator: BOOL_SYMBOL • if_condition

    VAR_NAME       shift, and go to state 117
    INT_VALUE      shift, and go to state 118
    CHAR_VALUE     shift, and go to state 119
    DOUBLE_VALUE   shift, and go to state 120
    BOOLEAN_VALUE  shift, and go to state 121

    operand       go to state 122
    if_condition  go to state 165


State 155

  104 if_condition: operand CONDITION_SYMBOL operand if_bool_operator •

    $default  reduce using rule 104 (if_condition)


State 156

   99 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_RIGHT  shift, and go to state 166


State 157

   57 for_variable: variable_type VAR_NAME EQUAL_SIGN variable_value •

    $default  reduce using rule 57 (for_variable)


State 158

   54 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 167


State 159

   59 for_comparison: VAR_NAME CONDITION_SYMBOL • comparison_value for_bool_operator

    VAR_NAME       shift, and go to state 168
    INT_VALUE      shift, and go to state 169
    CHAR_VALUE     shift, and go to state 170
    DOUBLE_VALUE   shift, and go to state 171
    BOOLEAN_VALUE  shift, and go to state 172

    comparison_value  go to state 173


State 160

   55 for_condition: for_variable SEMICOLON for_comparison SEMICOLON • for_step

    VAR_NAME  shift, and go to state 174

    $default  reduce using rule 67 (for_step)

    for_step  go to state 175


State 161

   73 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT • do_condition BRACKET_RIGHT SEMICOLON

    VAR_NAME       shift, and go to state 176
    INT_VALUE      shift, and go to state 118
    CHAR_VALUE     shift, and go to state 119
    DOUBLE_VALUE   shift, and go to state 120
    BOOLEAN_VALUE  shift, and go to state 177

    do_condition  go to state 178
    operand       go to state 179


State 162

   91 case: CASE • switch_value COLON switch_content case

    INT_VALUE   shift, and go to state 180
    CHAR_VALUE  shift, and go to state 181

    switch_value  go to state 182


State 163

   90 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case • default CURLY_BRACKET_RIGHT

    DEFAULT  shift, and go to state 183

    $default  reduce using rule 98 (default)

    default  go to state 184


State 164

   16 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT •

    $default  reduce using rule 16 (class_instance)


State 165

  108 if_bool_operator: BOOL_SYMBOL if_condition •

    $default  reduce using rule 108 (if_bool_operator)


State 166

   99 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • else_if

    ELSE  shift, and go to state 185

    $default  reduce using rule 100 (else_if)

    else_if  go to state 186
    else     go to state 187


State 167

   54 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT •

    $default  reduce using rule 54 (for_statement)


State 168

   64 comparison_value: VAR_NAME •

    $default  reduce using rule 64 (comparison_value)


State 169

   60 comparison_value: INT_VALUE •

    $default  reduce using rule 60 (comparison_value)


State 170

   62 comparison_value: CHAR_VALUE •

    $default  reduce using rule 62 (comparison_value)


State 171

   61 comparison_value: DOUBLE_VALUE •

    $default  reduce using rule 61 (comparison_value)


State 172

   63 comparison_value: BOOLEAN_VALUE •

    $default  reduce using rule 63 (comparison_value)


State 173

   59 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value • for_bool_operator

    BOOL_SYMBOL  shift, and go to state 188

    $default  reduce using rule 65 (for_bool_operator)

    for_bool_operator  go to state 189


State 174

   68 for_step: VAR_NAME • step

    INCREAMENT_DECREAMENT  shift, and go to state 190
    LOOP_STEP              shift, and go to state 191

    step  go to state 192


State 175

   55 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step •

    $default  reduce using rule 55 (for_condition)


State 176

   76 do_condition: VAR_NAME •
   79 operand: VAR_NAME •

    CONDITION_SYMBOL  reduce using rule 79 (operand)
    $default          reduce using rule 76 (do_condition)


State 177

   75 do_condition: BOOLEAN_VALUE •
   83 operand: BOOLEAN_VALUE •

    CONDITION_SYMBOL  reduce using rule 83 (operand)
    $default          reduce using rule 75 (do_condition)


State 178

   73 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition • BRACKET_RIGHT SEMICOLON

    BRACKET_RIGHT  shift, and go to state 193


State 179

   74 do_condition: operand • CONDITION_SYMBOL operand do_bool_operator

    CONDITION_SYMBOL  shift, and go to state 194


State 180

   93 switch_value: INT_VALUE •

    $default  reduce using rule 93 (switch_value)


State 181

   94 switch_value: CHAR_VALUE •

    $default  reduce using rule 94 (switch_value)


State 182

   91 case: CASE switch_value • COLON switch_content case

    COLON  shift, and go to state 195


State 183

   97 default: DEFAULT • COLON switch_content

    COLON  shift, and go to state 196


State 184

   90 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 197


State 185

  101 else_if: ELSE • IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if
  103 else: ELSE • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 198
    IF                  shift, and go to state 199


State 186

   99 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if •

    $default  reduce using rule 99 (if)


State 187

  102 else_if: else •

    $default  reduce using rule 102 (else_if)


State 188

   66 for_bool_operator: BOOL_SYMBOL • for_comparison

    VAR_NAME  shift, and go to state 149

    $default  reduce using rule 58 (for_comparison)

    for_comparison  go to state 200


State 189

   59 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value for_bool_operator •

    $default  reduce using rule 59 (for_comparison)


State 190

   69 step: INCREAMENT_DECREAMENT •

    $default  reduce using rule 69 (step)


State 191

   70 step: LOOP_STEP • step_value

    INT_VALUE     shift, and go to state 201
    DOUBLE_VALUE  shift, and go to state 202

    step_value  go to state 203


State 192

   68 for_step: VAR_NAME step •

    $default  reduce using rule 68 (for_step)


State 193

   73 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT • SEMICOLON

    SEMICOLON  shift, and go to state 204


State 194

   74 do_condition: operand CONDITION_SYMBOL • operand do_bool_operator

    VAR_NAME       shift, and go to state 143
    INT_VALUE      shift, and go to state 118
    CHAR_VALUE     shift, and go to state 119
    DOUBLE_VALUE   shift, and go to state 120
    BOOLEAN_VALUE  shift, and go to state 144

    operand  go to state 205


State 195

   91 case: CASE switch_value COLON • switch_content case

    BREAK  shift, and go to state 206

    $default  reduce using rule 95 (switch_content)

    switch_content  go to state 207


State 196

   97 default: DEFAULT COLON • switch_content

    BREAK  shift, and go to state 206

    $default  reduce using rule 95 (switch_content)

    switch_content  go to state 208


State 197

   90 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT •

    $default  reduce using rule 90 (switch)


State 198

  103 else: ELSE CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 84
    IF          shift, and go to state 85
    FOR         shift, and go to state 86
    DO          shift, and go to state 87
    SWITCH      shift, and go to state 88
    VAR_NAME    shift, and go to state 11
    INT         shift, and go to state 12
    CHAR        shift, and go to state 13
    DOUBLE      shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    STRING      shift, and go to state 16

    $default  reduce using rule 43 (inside_brackets)

    variable_type            go to state 20
    class_instance           go to state 89
    member_access            go to state 90
    variable_assignment      go to state 91
    inside_brackets          go to state 209
    loops_n_condition        go to state 94
    for_statement            go to state 95
    do_while                 go to state 96
    variable_initialization  go to state 97
    switch                   go to state 98
    if                       go to state 99


State 199

  101 else_if: ELSE IF • BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT  shift, and go to state 210


State 200

   66 for_bool_operator: BOOL_SYMBOL for_comparison •

    $default  reduce using rule 66 (for_bool_operator)


State 201

   71 step_value: INT_VALUE •

    $default  reduce using rule 71 (step_value)


State 202

   72 step_value: DOUBLE_VALUE •

    $default  reduce using rule 72 (step_value)


State 203

   70 step: LOOP_STEP step_value •

    $default  reduce using rule 70 (step)


State 204

   73 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON •

    $default  reduce using rule 73 (do_while)


State 205

   74 do_condition: operand CONDITION_SYMBOL operand • do_bool_operator

    BOOL_SYMBOL  shift, and go to state 211

    $default  reduce using rule 77 (do_bool_operator)

    do_bool_operator  go to state 212


State 206

   96 switch_content: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 213


State 207

   91 case: CASE switch_value COLON switch_content • case

    CASE  shift, and go to state 162

    $default  reduce using rule 92 (case)

    case  go to state 214


State 208

   97 default: DEFAULT COLON switch_content •

    $default  reduce using rule 97 (default)


State 209

  103 else: ELSE CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 215


State 210

  101 else_if: ELSE IF BRACKET_LEFT • if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    VAR_NAME       shift, and go to state 117
    INT_VALUE      shift, and go to state 118
    CHAR_VALUE     shift, and go to state 119
    DOUBLE_VALUE   shift, and go to state 120
    BOOLEAN_VALUE  shift, and go to state 121

    operand       go to state 122
    if_condition  go to state 216


State 211

   78 do_bool_operator: BOOL_SYMBOL • do_condition

    VAR_NAME       shift, and go to state 176
    INT_VALUE      shift, and go to state 118
    CHAR_VALUE     shift, and go to state 119
    DOUBLE_VALUE   shift, and go to state 120
    BOOLEAN_VALUE  shift, and go to state 177

    do_condition  go to state 217
    operand       go to state 179


State 212

   74 do_condition: operand CONDITION_SYMBOL operand do_bool_operator •

    $default  reduce using rule 74 (do_condition)


State 213

   96 switch_content: BREAK SEMICOLON •

    $default  reduce using rule 96 (switch_content)


State 214

   91 case: CASE switch_value COLON switch_content case •

    $default  reduce using rule 91 (case)


State 215

  103 else: ELSE CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT •

    $default  reduce using rule 103 (else)


State 216

  101 else_if: ELSE IF BRACKET_LEFT if_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_RIGHT  shift, and go to state 218


State 217

   78 do_bool_operator: BOOL_SYMBOL do_condition •

    $default  reduce using rule 78 (do_bool_operator)


State 218

  101 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_LEFT  shift, and go to state 219


State 219

  101 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT else_if

    CLASS_NAME  shift, and go to state 84
    IF          shift, and go to state 85
    FOR         shift, and go to state 86
    DO          shift, and go to state 87
    SWITCH      shift, and go to state 88
    VAR_NAME    shift, and go to state 11
    INT         shift, and go to state 12
    CHAR        shift, and go to state 13
    DOUBLE      shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    STRING      shift, and go to state 16

    $default  reduce using rule 43 (inside_brackets)

    variable_type            go to state 20
    class_instance           go to state 89
    member_access            go to state 90
    variable_assignment      go to state 91
    inside_brackets          go to state 220
    loops_n_condition        go to state 94
    for_statement            go to state 95
    do_while                 go to state 96
    variable_initialization  go to state 97
    switch                   go to state 98
    if                       go to state 99


State 220

  101 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_RIGHT  shift, and go to state 221


State 221

  101 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • else_if

    ELSE  shift, and go to state 185

    $default  reduce using rule 100 (else_if)

    else_if  go to state 222
    else     go to state 187


State 222

  101 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if •

    $default  reduce using rule 101 (else_if)
