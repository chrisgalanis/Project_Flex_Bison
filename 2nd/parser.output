Terminals unused in grammar

    SINGLE_MARK


Rules useless in parser due to conflicts

   77 operand: VAR_NAME


State 17 conflicts: 1 shift/reduce
State 18 conflicts: 1 shift/reduce
State 19 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce
State 147 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | class_identifier

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    4 class_body: ε
    5           | functions class_body
    6           | class_members class_body

    7 class_members: visibility variable_initialization SEMICOLON
    8              | visibility variable_assignment SEMICOLON

    9 variable_initialization: variable_type VAR_NAME

   10 variable_assignment: INT VAR_NAME EQUAL_SIGN INT_VALUE
   11                    | DOUBLE VAR_NAME EQUAL_SIGN DOUBLE_VALUE
   12                    | CHAR VAR_NAME EQUAL_SIGN CHAR_VALUE
   13                    | BOOLEAN VAR_NAME EQUAL_SIGN BOOLEAN_VALUE
   14                    | STRING VAR_NAME EQUAL_SIGN STRING_VALUE

   15 visibility: PUBLIC
   16           | PRIVATE
   17           | ε

   18 variable_value: INT_VALUE
   19               | CHAR_VALUE
   20               | DOUBLE_VALUE
   21               | BOOLEAN_VALUE
   22               | STRING_VALUE

   23 variable_type: INT
   24              | DOUBLE
   25              | CHAR
   26              | BOOLEAN
   27              | STRING

   28 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

   29 member_access: VAR_NAME DOT VAR_NAME

   30 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   31          | visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

   32 arguments: ε
   33          | parameters

   34 parameters: variable_type VAR_NAME arguments_end

   35 arguments_end: ε
   36              | COMMA parameters

   37 inside_void_function: inside_brackets
   38                     | inside_brackets RETURN SEMICOLON

   39 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON
   40                | inside_brackets RETURN variable_value SEMICOLON

   41 inside_brackets: ε
   42                | loops_n_condition inside_brackets

   43 loops_n_condition: for_statement
   44                  | switch
   45                  | do_while
   46                  | variable_initialization SEMICOLON
   47                  | variable_assignment SEMICOLON
   48                  | class_instance SEMICOLON
   49                  | member_access SEMICOLON

   50 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

   51 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step

   52 for_variable: ε
   53             | variable_assignment

   54 for_comparison: ε
   55               | VAR_NAME CONDITION_SYMBOL comparison_value bool_operator

   56 comparison_value: INT_VALUE
   57                 | DOUBLE_VALUE
   58                 | CHAR_VALUE
   59                 | BOOLEAN_VALUE
   60                 | VAR_NAME

   61 bool_operator: ε
   62              | BOOL_SYMBOL for_comparison

   63 for_step: ε
   64         | VAR_NAME step

   65 step: INCREAMENT_DECREAMENT
   66     | LOOP_STEP step_value

   67 step_value: INT_VALUE
   68           | DOUBLE_VALUE

   69 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

   70 do_condition: operand CONDITION_SYMBOL operand
   71             | BOOLEAN_VALUE

   72 operand: VAR_NAME
   73        | INT_VALUE
   74        | DOUBLE_VALUE
   75        | CHAR_VALUE
   76        | BOOLEAN_VALUE
   77        | VAR_NAME

   78 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

   79 case: CASE switch_value COLON switch_content case
   80     | ε

   81 switch_value: INT_VALUE
   82             | CHAR_VALUE

   83 switch_content: ε
   84               | BREAK

   85 default: DEFAULT COLON switch_content
   86        | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CURLY_BRACKET_LEFT (258) 3 30 31 50 69 78
    CURLY_BRACKET_RIGHT (259) 3 30 31 50 69 78
    BRACKET_LEFT (260) 28 30 31 50 69 78
    BRACKET_RIGHT (261) 28 30 31 50 69 78
    EQUAL_SIGN (262) 10 11 12 13 14 28
    SEMICOLON (263) 7 8 38 39 40 46 47 48 49 51 69
    SINGLE_MARK (264)
    COLON (265) 79 85
    COMMA (266) 36
    DOT (267) 29
    PUBLIC <sval> (268) 3 15
    PRIVATE <sval> (269) 16
    CLASS (270) 3
    CLASS_NAME <sval> (271) 3 28
    NEW (272) 28
    FOR (273) 50
    DO (274) 69
    WHILE (275) 69
    CONDITION_SYMBOL (276) 55 70
    BOOL_SYMBOL (277) 62
    INCREAMENT_DECREAMENT (278) 65
    LOOP_STEP (279) 66
    SWITCH (280) 78
    CASE (281) 79
    DEFAULT (282) 85
    BREAK (283) 84
    RETURN (284) 38 39 40
    VAR_NAME <sval> (285) 9 10 11 12 13 14 28 29 30 31 34 39 55 60 64 72 77 78
    VOID (286) 30
    INT (287) 10 23
    CHAR (288) 12 25
    DOUBLE (289) 11 24
    BOOLEAN (290) 13 26
    STRING (291) 14 27
    INT_VALUE <ival> (292) 10 18 56 67 73 81
    CHAR_VALUE <cval> (293) 12 19 58 75 82
    DOUBLE_VALUE <dval> (294) 11 20 57 68 74
    BOOLEAN_VALUE <sval> (295) 13 21 59 71 76
    STRING_VALUE <sval> (296) 14 22


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1 2
        on right: 0
    class_identifier (44)
        on left: 3
        on right: 2
    class_body (45)
        on left: 4 5 6
        on right: 3 5 6
    class_members (46)
        on left: 7 8
        on right: 6
    variable_initialization (47)
        on left: 9
        on right: 7 46
    variable_assignment (48)
        on left: 10 11 12 13 14
        on right: 8 47 53
    visibility (49)
        on left: 15 16 17
        on right: 7 8 30 31
    variable_value (50)
        on left: 18 19 20 21 22
        on right: 40
    variable_type (51)
        on left: 23 24 25 26 27
        on right: 9 31 34
    class_instance (52)
        on left: 28
        on right: 48
    member_access (53)
        on left: 29
        on right: 49
    functions (54)
        on left: 30 31
        on right: 5
    arguments (55)
        on left: 32 33
        on right: 30 31
    parameters (56)
        on left: 34
        on right: 33 36
    arguments_end (57)
        on left: 35 36
        on right: 34
    inside_void_function (58)
        on left: 37 38
        on right: 30
    inside_function (59)
        on left: 39 40
        on right: 31
    inside_brackets (60)
        on left: 41 42
        on right: 37 38 39 40 42 50 69
    loops_n_condition (61)
        on left: 43 44 45 46 47 48 49
        on right: 42
    for_statement (62)
        on left: 50
        on right: 43
    for_condition (63)
        on left: 51
        on right: 50
    for_variable (64)
        on left: 52 53
        on right: 51
    for_comparison (65)
        on left: 54 55
        on right: 51 62
    comparison_value (66)
        on left: 56 57 58 59 60
        on right: 55
    bool_operator (67)
        on left: 61 62
        on right: 55
    for_step (68)
        on left: 63 64
        on right: 51
    step (69)
        on left: 65 66
        on right: 64
    step_value (70)
        on left: 67 68
        on right: 66
    do_while (71)
        on left: 69
        on right: 45
    do_condition (72)
        on left: 70 71
        on right: 69
    operand (73)
        on left: 72 73 74 75 76 77
        on right: 70
    switch (74)
        on left: 78
        on right: 44
    case (75)
        on left: 79 80
        on right: 78 79
    switch_value (76)
        on left: 81 82
        on right: 79
    switch_content (77)
        on left: 83 84
        on right: 79 85
    default (78)
        on left: 85 86
        on right: 78


State 0

    0 $accept: • program $end

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program           go to state 2
    class_identifier  go to state 3


State 1

    3 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    2 program: class_identifier •

    $default  reduce using rule 2 (program)


State 4

    3 class_identifier: PUBLIC CLASS • CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 6


State 5

    0 $accept: program $end •

    $default  accept


State 6

    3 class_identifier: PUBLIC CLASS CLASS_NAME • CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 7


State 7

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT • class_body CURLY_BRACKET_RIGHT

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 17 (visibility)

    class_body     go to state 10
    class_members  go to state 11
    visibility     go to state 12
    functions      go to state 13


State 8

   15 visibility: PUBLIC •

    $default  reduce using rule 15 (visibility)


State 9

   16 visibility: PRIVATE •

    $default  reduce using rule 16 (visibility)


State 10

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 14


State 11

    6 class_body: class_members • class_body

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 17 (visibility)

    class_body     go to state 15
    class_members  go to state 11
    visibility     go to state 12
    functions      go to state 13


State 12

    7 class_members: visibility • variable_initialization SEMICOLON
    8              | visibility • variable_assignment SEMICOLON
   30 functions: visibility • VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   31          | visibility • variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VOID     shift, and go to state 16
    INT      shift, and go to state 17
    CHAR     shift, and go to state 18
    DOUBLE   shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    STRING   shift, and go to state 21

    variable_initialization  go to state 22
    variable_assignment      go to state 23
    variable_type            go to state 24


State 13

    5 class_body: functions • class_body

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 17 (visibility)

    class_body     go to state 25
    class_members  go to state 11
    visibility     go to state 12
    functions      go to state 13


State 14

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT •

    $default  reduce using rule 3 (class_identifier)


State 15

    6 class_body: class_members class_body •

    $default  reduce using rule 6 (class_body)


State 16

   30 functions: visibility VOID • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 26


State 17

   10 variable_assignment: INT • VAR_NAME EQUAL_SIGN INT_VALUE
   23 variable_type: INT •

    VAR_NAME  shift, and go to state 27

    VAR_NAME  [reduce using rule 23 (variable_type)]


State 18

   12 variable_assignment: CHAR • VAR_NAME EQUAL_SIGN CHAR_VALUE
   25 variable_type: CHAR •

    VAR_NAME  shift, and go to state 28

    VAR_NAME  [reduce using rule 25 (variable_type)]


State 19

   11 variable_assignment: DOUBLE • VAR_NAME EQUAL_SIGN DOUBLE_VALUE
   24 variable_type: DOUBLE •

    VAR_NAME  shift, and go to state 29

    VAR_NAME  [reduce using rule 24 (variable_type)]


State 20

   13 variable_assignment: BOOLEAN • VAR_NAME EQUAL_SIGN BOOLEAN_VALUE
   26 variable_type: BOOLEAN •

    VAR_NAME  shift, and go to state 30

    VAR_NAME  [reduce using rule 26 (variable_type)]


State 21

   14 variable_assignment: STRING • VAR_NAME EQUAL_SIGN STRING_VALUE
   27 variable_type: STRING •

    VAR_NAME  shift, and go to state 31

    VAR_NAME  [reduce using rule 27 (variable_type)]


State 22

    7 class_members: visibility variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 32


State 23

    8 class_members: visibility variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 33


State 24

    9 variable_initialization: variable_type • VAR_NAME
   31 functions: visibility variable_type • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 34


State 25

    5 class_body: functions class_body •

    $default  reduce using rule 5 (class_body)


State 26

   30 functions: visibility VOID VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 35


State 27

   10 variable_assignment: INT VAR_NAME • EQUAL_SIGN INT_VALUE

    EQUAL_SIGN  shift, and go to state 36


State 28

   12 variable_assignment: CHAR VAR_NAME • EQUAL_SIGN CHAR_VALUE

    EQUAL_SIGN  shift, and go to state 37


State 29

   11 variable_assignment: DOUBLE VAR_NAME • EQUAL_SIGN DOUBLE_VALUE

    EQUAL_SIGN  shift, and go to state 38


State 30

   13 variable_assignment: BOOLEAN VAR_NAME • EQUAL_SIGN BOOLEAN_VALUE

    EQUAL_SIGN  shift, and go to state 39


State 31

   14 variable_assignment: STRING VAR_NAME • EQUAL_SIGN STRING_VALUE

    EQUAL_SIGN  shift, and go to state 40


State 32

    7 class_members: visibility variable_initialization SEMICOLON •

    $default  reduce using rule 7 (class_members)


State 33

    8 class_members: visibility variable_assignment SEMICOLON •

    $default  reduce using rule 8 (class_members)


State 34

    9 variable_initialization: variable_type VAR_NAME •
   31 functions: visibility variable_type VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 41

    $default  reduce using rule 9 (variable_initialization)


State 35

   30 functions: visibility VOID VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 42
    CHAR     shift, and go to state 43
    DOUBLE   shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    STRING   shift, and go to state 46

    $default  reduce using rule 32 (arguments)

    variable_type  go to state 47
    arguments      go to state 48
    parameters     go to state 49


State 36

   10 variable_assignment: INT VAR_NAME EQUAL_SIGN • INT_VALUE

    INT_VALUE  shift, and go to state 50


State 37

   12 variable_assignment: CHAR VAR_NAME EQUAL_SIGN • CHAR_VALUE

    CHAR_VALUE  shift, and go to state 51


State 38

   11 variable_assignment: DOUBLE VAR_NAME EQUAL_SIGN • DOUBLE_VALUE

    DOUBLE_VALUE  shift, and go to state 52


State 39

   13 variable_assignment: BOOLEAN VAR_NAME EQUAL_SIGN • BOOLEAN_VALUE

    BOOLEAN_VALUE  shift, and go to state 53


State 40

   14 variable_assignment: STRING VAR_NAME EQUAL_SIGN • STRING_VALUE

    STRING_VALUE  shift, and go to state 54


State 41

   31 functions: visibility variable_type VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 42
    CHAR     shift, and go to state 43
    DOUBLE   shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    STRING   shift, and go to state 46

    $default  reduce using rule 32 (arguments)

    variable_type  go to state 47
    arguments      go to state 55
    parameters     go to state 49


State 42

   23 variable_type: INT •

    $default  reduce using rule 23 (variable_type)


State 43

   25 variable_type: CHAR •

    $default  reduce using rule 25 (variable_type)


State 44

   24 variable_type: DOUBLE •

    $default  reduce using rule 24 (variable_type)


State 45

   26 variable_type: BOOLEAN •

    $default  reduce using rule 26 (variable_type)


State 46

   27 variable_type: STRING •

    $default  reduce using rule 27 (variable_type)


State 47

   34 parameters: variable_type • VAR_NAME arguments_end

    VAR_NAME  shift, and go to state 56


State 48

   30 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 57


State 49

   33 arguments: parameters •

    $default  reduce using rule 33 (arguments)


State 50

   10 variable_assignment: INT VAR_NAME EQUAL_SIGN INT_VALUE •

    $default  reduce using rule 10 (variable_assignment)


State 51

   12 variable_assignment: CHAR VAR_NAME EQUAL_SIGN CHAR_VALUE •

    $default  reduce using rule 12 (variable_assignment)


State 52

   11 variable_assignment: DOUBLE VAR_NAME EQUAL_SIGN DOUBLE_VALUE •

    $default  reduce using rule 11 (variable_assignment)


State 53

   13 variable_assignment: BOOLEAN VAR_NAME EQUAL_SIGN BOOLEAN_VALUE •

    $default  reduce using rule 13 (variable_assignment)


State 54

   14 variable_assignment: STRING VAR_NAME EQUAL_SIGN STRING_VALUE •

    $default  reduce using rule 14 (variable_assignment)


State 55

   31 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 58


State 56

   34 parameters: variable_type VAR_NAME • arguments_end

    COMMA  shift, and go to state 59

    $default  reduce using rule 35 (arguments_end)

    arguments_end  go to state 60


State 57

   30 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 61


State 58

   31 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 62


State 59

   36 arguments_end: COMMA • parameters

    INT      shift, and go to state 42
    CHAR     shift, and go to state 43
    DOUBLE   shift, and go to state 44
    BOOLEAN  shift, and go to state 45
    STRING   shift, and go to state 46

    variable_type  go to state 47
    parameters     go to state 63


State 60

   34 parameters: variable_type VAR_NAME arguments_end •

    $default  reduce using rule 34 (parameters)


State 61

   30 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_void_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 64
    FOR         shift, and go to state 65
    DO          shift, and go to state 66
    SWITCH      shift, and go to state 67
    VAR_NAME    shift, and go to state 68
    INT         shift, and go to state 17
    CHAR        shift, and go to state 18
    DOUBLE      shift, and go to state 19
    BOOLEAN     shift, and go to state 20
    STRING      shift, and go to state 21

    $default  reduce using rule 41 (inside_brackets)

    variable_initialization  go to state 69
    variable_assignment      go to state 70
    variable_type            go to state 71
    class_instance           go to state 72
    member_access            go to state 73
    inside_void_function     go to state 74
    inside_brackets          go to state 75
    loops_n_condition        go to state 76
    for_statement            go to state 77
    do_while                 go to state 78
    switch                   go to state 79


State 62

   31 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 64
    FOR         shift, and go to state 65
    DO          shift, and go to state 66
    SWITCH      shift, and go to state 67
    VAR_NAME    shift, and go to state 68
    INT         shift, and go to state 17
    CHAR        shift, and go to state 18
    DOUBLE      shift, and go to state 19
    BOOLEAN     shift, and go to state 20
    STRING      shift, and go to state 21

    $default  reduce using rule 41 (inside_brackets)

    variable_initialization  go to state 69
    variable_assignment      go to state 70
    variable_type            go to state 71
    class_instance           go to state 72
    member_access            go to state 73
    inside_function          go to state 80
    inside_brackets          go to state 81
    loops_n_condition        go to state 76
    for_statement            go to state 77
    do_while                 go to state 78
    switch                   go to state 79


State 63

   36 arguments_end: COMMA parameters •

    $default  reduce using rule 36 (arguments_end)


State 64

   28 class_instance: CLASS_NAME • VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    VAR_NAME  shift, and go to state 82


State 65

   50 for_statement: FOR • BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 83


State 66

   69 do_while: DO • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_LEFT  shift, and go to state 84


State 67

   78 switch: SWITCH • BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 85


State 68

   29 member_access: VAR_NAME • DOT VAR_NAME

    DOT  shift, and go to state 86


State 69

   46 loops_n_condition: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 87


State 70

   47 loops_n_condition: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 71

    9 variable_initialization: variable_type • VAR_NAME

    VAR_NAME  shift, and go to state 89


State 72

   48 loops_n_condition: class_instance • SEMICOLON

    SEMICOLON  shift, and go to state 90


State 73

   49 loops_n_condition: member_access • SEMICOLON

    SEMICOLON  shift, and go to state 91


State 74

   30 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 92


State 75

   37 inside_void_function: inside_brackets •
   38                     | inside_brackets • RETURN SEMICOLON

    RETURN  shift, and go to state 93

    $default  reduce using rule 37 (inside_void_function)


State 76

   42 inside_brackets: loops_n_condition • inside_brackets

    CLASS_NAME  shift, and go to state 64
    FOR         shift, and go to state 65
    DO          shift, and go to state 66
    SWITCH      shift, and go to state 67
    VAR_NAME    shift, and go to state 68
    INT         shift, and go to state 17
    CHAR        shift, and go to state 18
    DOUBLE      shift, and go to state 19
    BOOLEAN     shift, and go to state 20
    STRING      shift, and go to state 21

    $default  reduce using rule 41 (inside_brackets)

    variable_initialization  go to state 69
    variable_assignment      go to state 70
    variable_type            go to state 71
    class_instance           go to state 72
    member_access            go to state 73
    inside_brackets          go to state 94
    loops_n_condition        go to state 76
    for_statement            go to state 77
    do_while                 go to state 78
    switch                   go to state 79


State 77

   43 loops_n_condition: for_statement •

    $default  reduce using rule 43 (loops_n_condition)


State 78

   45 loops_n_condition: do_while •

    $default  reduce using rule 45 (loops_n_condition)


State 79

   44 loops_n_condition: switch •

    $default  reduce using rule 44 (loops_n_condition)


State 80

   31 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 95


State 81

   39 inside_function: inside_brackets • RETURN VAR_NAME SEMICOLON
   40                | inside_brackets • RETURN variable_value SEMICOLON

    RETURN  shift, and go to state 96


State 82

   28 class_instance: CLASS_NAME VAR_NAME • EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    EQUAL_SIGN  shift, and go to state 97


State 83

   50 for_statement: FOR BRACKET_LEFT • for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    INT      shift, and go to state 98
    CHAR     shift, and go to state 99
    DOUBLE   shift, and go to state 100
    BOOLEAN  shift, and go to state 101
    STRING   shift, and go to state 102

    $default  reduce using rule 52 (for_variable)

    variable_assignment  go to state 103
    for_condition        go to state 104
    for_variable         go to state 105


State 84

   69 do_while: DO CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CLASS_NAME  shift, and go to state 64
    FOR         shift, and go to state 65
    DO          shift, and go to state 66
    SWITCH      shift, and go to state 67
    VAR_NAME    shift, and go to state 68
    INT         shift, and go to state 17
    CHAR        shift, and go to state 18
    DOUBLE      shift, and go to state 19
    BOOLEAN     shift, and go to state 20
    STRING      shift, and go to state 21

    $default  reduce using rule 41 (inside_brackets)

    variable_initialization  go to state 69
    variable_assignment      go to state 70
    variable_type            go to state 71
    class_instance           go to state 72
    member_access            go to state 73
    inside_brackets          go to state 106
    loops_n_condition        go to state 76
    for_statement            go to state 77
    do_while                 go to state 78
    switch                   go to state 79


State 85

   78 switch: SWITCH BRACKET_LEFT • VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 107


State 86

   29 member_access: VAR_NAME DOT • VAR_NAME

    VAR_NAME  shift, and go to state 108


State 87

   46 loops_n_condition: variable_initialization SEMICOLON •

    $default  reduce using rule 46 (loops_n_condition)


State 88

   47 loops_n_condition: variable_assignment SEMICOLON •

    $default  reduce using rule 47 (loops_n_condition)


State 89

    9 variable_initialization: variable_type VAR_NAME •

    $default  reduce using rule 9 (variable_initialization)


State 90

   48 loops_n_condition: class_instance SEMICOLON •

    $default  reduce using rule 48 (loops_n_condition)


State 91

   49 loops_n_condition: member_access SEMICOLON •

    $default  reduce using rule 49 (loops_n_condition)


State 92

   30 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 30 (functions)


State 93

   38 inside_void_function: inside_brackets RETURN • SEMICOLON

    SEMICOLON  shift, and go to state 109


State 94

   42 inside_brackets: loops_n_condition inside_brackets •

    $default  reduce using rule 42 (inside_brackets)


State 95

   31 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 31 (functions)


State 96

   39 inside_function: inside_brackets RETURN • VAR_NAME SEMICOLON
   40                | inside_brackets RETURN • variable_value SEMICOLON

    VAR_NAME       shift, and go to state 110
    INT_VALUE      shift, and go to state 111
    CHAR_VALUE     shift, and go to state 112
    DOUBLE_VALUE   shift, and go to state 113
    BOOLEAN_VALUE  shift, and go to state 114
    STRING_VALUE   shift, and go to state 115

    variable_value  go to state 116


State 97

   28 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN • NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    NEW  shift, and go to state 117


State 98

   10 variable_assignment: INT • VAR_NAME EQUAL_SIGN INT_VALUE

    VAR_NAME  shift, and go to state 27


State 99

   12 variable_assignment: CHAR • VAR_NAME EQUAL_SIGN CHAR_VALUE

    VAR_NAME  shift, and go to state 28


State 100

   11 variable_assignment: DOUBLE • VAR_NAME EQUAL_SIGN DOUBLE_VALUE

    VAR_NAME  shift, and go to state 29


State 101

   13 variable_assignment: BOOLEAN • VAR_NAME EQUAL_SIGN BOOLEAN_VALUE

    VAR_NAME  shift, and go to state 30


State 102

   14 variable_assignment: STRING • VAR_NAME EQUAL_SIGN STRING_VALUE

    VAR_NAME  shift, and go to state 31


State 103

   53 for_variable: variable_assignment •

    $default  reduce using rule 53 (for_variable)


State 104

   50 for_statement: FOR BRACKET_LEFT for_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 118


State 105

   51 for_condition: for_variable • SEMICOLON for_comparison SEMICOLON for_step

    SEMICOLON  shift, and go to state 119


State 106

   69 do_while: DO CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_RIGHT  shift, and go to state 120


State 107

   78 switch: SWITCH BRACKET_LEFT VAR_NAME • BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 121


State 108

   29 member_access: VAR_NAME DOT VAR_NAME •

    $default  reduce using rule 29 (member_access)


State 109

   38 inside_void_function: inside_brackets RETURN SEMICOLON •

    $default  reduce using rule 38 (inside_void_function)


State 110

   39 inside_function: inside_brackets RETURN VAR_NAME • SEMICOLON

    SEMICOLON  shift, and go to state 122


State 111

   18 variable_value: INT_VALUE •

    $default  reduce using rule 18 (variable_value)


State 112

   19 variable_value: CHAR_VALUE •

    $default  reduce using rule 19 (variable_value)


State 113

   20 variable_value: DOUBLE_VALUE •

    $default  reduce using rule 20 (variable_value)


State 114

   21 variable_value: BOOLEAN_VALUE •

    $default  reduce using rule 21 (variable_value)


State 115

   22 variable_value: STRING_VALUE •

    $default  reduce using rule 22 (variable_value)


State 116

   40 inside_function: inside_brackets RETURN variable_value • SEMICOLON

    SEMICOLON  shift, and go to state 123


State 117

   28 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW • CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 124


State 118

   50 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 125


State 119

   51 for_condition: for_variable SEMICOLON • for_comparison SEMICOLON for_step

    VAR_NAME  shift, and go to state 126

    $default  reduce using rule 54 (for_comparison)

    for_comparison  go to state 127


State 120

   69 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    WHILE  shift, and go to state 128


State 121

   78 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT • CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 129


State 122

   39 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON •

    $default  reduce using rule 39 (inside_function)


State 123

   40 inside_function: inside_brackets RETURN variable_value SEMICOLON •

    $default  reduce using rule 40 (inside_function)


State 124

   28 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME • BRACKET_LEFT BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 130


State 125

   50 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 64
    FOR         shift, and go to state 65
    DO          shift, and go to state 66
    SWITCH      shift, and go to state 67
    VAR_NAME    shift, and go to state 68
    INT         shift, and go to state 17
    CHAR        shift, and go to state 18
    DOUBLE      shift, and go to state 19
    BOOLEAN     shift, and go to state 20
    STRING      shift, and go to state 21

    $default  reduce using rule 41 (inside_brackets)

    variable_initialization  go to state 69
    variable_assignment      go to state 70
    variable_type            go to state 71
    class_instance           go to state 72
    member_access            go to state 73
    inside_brackets          go to state 131
    loops_n_condition        go to state 76
    for_statement            go to state 77
    do_while                 go to state 78
    switch                   go to state 79


State 126

   55 for_comparison: VAR_NAME • CONDITION_SYMBOL comparison_value bool_operator

    CONDITION_SYMBOL  shift, and go to state 132


State 127

   51 for_condition: for_variable SEMICOLON for_comparison • SEMICOLON for_step

    SEMICOLON  shift, and go to state 133


State 128

   69 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE • BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    BRACKET_LEFT  shift, and go to state 134


State 129

   78 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT • case default CURLY_BRACKET_RIGHT

    CASE  shift, and go to state 135

    $default  reduce using rule 80 (case)

    case  go to state 136


State 130

   28 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 137


State 131

   50 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 138


State 132

   55 for_comparison: VAR_NAME CONDITION_SYMBOL • comparison_value bool_operator

    VAR_NAME       shift, and go to state 139
    INT_VALUE      shift, and go to state 140
    CHAR_VALUE     shift, and go to state 141
    DOUBLE_VALUE   shift, and go to state 142
    BOOLEAN_VALUE  shift, and go to state 143

    comparison_value  go to state 144


State 133

   51 for_condition: for_variable SEMICOLON for_comparison SEMICOLON • for_step

    VAR_NAME  shift, and go to state 145

    $default  reduce using rule 63 (for_step)

    for_step  go to state 146


State 134

   69 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT • do_condition BRACKET_RIGHT SEMICOLON

    VAR_NAME       shift, and go to state 147
    INT_VALUE      shift, and go to state 148
    CHAR_VALUE     shift, and go to state 149
    DOUBLE_VALUE   shift, and go to state 150
    BOOLEAN_VALUE  shift, and go to state 151

    do_condition  go to state 152
    operand       go to state 153


State 135

   79 case: CASE • switch_value COLON switch_content case

    INT_VALUE   shift, and go to state 154
    CHAR_VALUE  shift, and go to state 155

    switch_value  go to state 156


State 136

   78 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case • default CURLY_BRACKET_RIGHT

    DEFAULT  shift, and go to state 157

    $default  reduce using rule 86 (default)

    default  go to state 158


State 137

   28 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT •

    $default  reduce using rule 28 (class_instance)


State 138

   50 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT •

    $default  reduce using rule 50 (for_statement)


State 139

   60 comparison_value: VAR_NAME •

    $default  reduce using rule 60 (comparison_value)


State 140

   56 comparison_value: INT_VALUE •

    $default  reduce using rule 56 (comparison_value)


State 141

   58 comparison_value: CHAR_VALUE •

    $default  reduce using rule 58 (comparison_value)


State 142

   57 comparison_value: DOUBLE_VALUE •

    $default  reduce using rule 57 (comparison_value)


State 143

   59 comparison_value: BOOLEAN_VALUE •

    $default  reduce using rule 59 (comparison_value)


State 144

   55 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value • bool_operator

    BOOL_SYMBOL  shift, and go to state 159

    $default  reduce using rule 61 (bool_operator)

    bool_operator  go to state 160


State 145

   64 for_step: VAR_NAME • step

    INCREAMENT_DECREAMENT  shift, and go to state 161
    LOOP_STEP              shift, and go to state 162

    step  go to state 163


State 146

   51 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step •

    $default  reduce using rule 51 (for_condition)


State 147

   72 operand: VAR_NAME •
   77        | VAR_NAME •

    BRACKET_RIGHT     reduce using rule 72 (operand)
    BRACKET_RIGHT     [reduce using rule 77 (operand)]
    CONDITION_SYMBOL  reduce using rule 72 (operand)
    CONDITION_SYMBOL  [reduce using rule 77 (operand)]
    $default          reduce using rule 72 (operand)


State 148

   73 operand: INT_VALUE •

    $default  reduce using rule 73 (operand)


State 149

   75 operand: CHAR_VALUE •

    $default  reduce using rule 75 (operand)


State 150

   74 operand: DOUBLE_VALUE •

    $default  reduce using rule 74 (operand)


State 151

   71 do_condition: BOOLEAN_VALUE •
   76 operand: BOOLEAN_VALUE •

    CONDITION_SYMBOL  reduce using rule 76 (operand)
    $default          reduce using rule 71 (do_condition)


State 152

   69 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition • BRACKET_RIGHT SEMICOLON

    BRACKET_RIGHT  shift, and go to state 164


State 153

   70 do_condition: operand • CONDITION_SYMBOL operand

    CONDITION_SYMBOL  shift, and go to state 165


State 154

   81 switch_value: INT_VALUE •

    $default  reduce using rule 81 (switch_value)


State 155

   82 switch_value: CHAR_VALUE •

    $default  reduce using rule 82 (switch_value)


State 156

   79 case: CASE switch_value • COLON switch_content case

    COLON  shift, and go to state 166


State 157

   85 default: DEFAULT • COLON switch_content

    COLON  shift, and go to state 167


State 158

   78 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 168


State 159

   62 bool_operator: BOOL_SYMBOL • for_comparison

    VAR_NAME  shift, and go to state 126

    $default  reduce using rule 54 (for_comparison)

    for_comparison  go to state 169


State 160

   55 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value bool_operator •

    $default  reduce using rule 55 (for_comparison)


State 161

   65 step: INCREAMENT_DECREAMENT •

    $default  reduce using rule 65 (step)


State 162

   66 step: LOOP_STEP • step_value

    INT_VALUE     shift, and go to state 170
    DOUBLE_VALUE  shift, and go to state 171

    step_value  go to state 172


State 163

   64 for_step: VAR_NAME step •

    $default  reduce using rule 64 (for_step)


State 164

   69 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT • SEMICOLON

    SEMICOLON  shift, and go to state 173


State 165

   70 do_condition: operand CONDITION_SYMBOL • operand

    VAR_NAME       shift, and go to state 147
    INT_VALUE      shift, and go to state 148
    CHAR_VALUE     shift, and go to state 149
    DOUBLE_VALUE   shift, and go to state 150
    BOOLEAN_VALUE  shift, and go to state 174

    operand  go to state 175


State 166

   79 case: CASE switch_value COLON • switch_content case

    BREAK  shift, and go to state 176

    $default  reduce using rule 83 (switch_content)

    switch_content  go to state 177


State 167

   85 default: DEFAULT COLON • switch_content

    BREAK  shift, and go to state 176

    $default  reduce using rule 83 (switch_content)

    switch_content  go to state 178


State 168

   78 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT •

    $default  reduce using rule 78 (switch)


State 169

   62 bool_operator: BOOL_SYMBOL for_comparison •

    $default  reduce using rule 62 (bool_operator)


State 170

   67 step_value: INT_VALUE •

    $default  reduce using rule 67 (step_value)


State 171

   68 step_value: DOUBLE_VALUE •

    $default  reduce using rule 68 (step_value)


State 172

   66 step: LOOP_STEP step_value •

    $default  reduce using rule 66 (step)


State 173

   69 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON •

    $default  reduce using rule 69 (do_while)


State 174

   76 operand: BOOLEAN_VALUE •

    $default  reduce using rule 76 (operand)


State 175

   70 do_condition: operand CONDITION_SYMBOL operand •

    $default  reduce using rule 70 (do_condition)


State 176

   84 switch_content: BREAK •

    $default  reduce using rule 84 (switch_content)


State 177

   79 case: CASE switch_value COLON switch_content • case

    CASE  shift, and go to state 135

    $default  reduce using rule 80 (case)

    case  go to state 179


State 178

   85 default: DEFAULT COLON switch_content •

    $default  reduce using rule 85 (default)


State 179

   79 case: CASE switch_value COLON switch_content case •

    $default  reduce using rule 79 (case)
