State 9 conflicts: 5 reduce/reduce
State 10 conflicts: 5 reduce/reduce
State 73 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | class_identifier program

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    4 class_body: ε
    5           | functions class_body
    6           | class_members class_body
    7           | class_identifier class_body

    8 class_members: variable_decleration SEMICOLON
    9              | variable_assignment SEMICOLON
   10              | member_access SEMICOLON
   11              | class_instance SEMICOLON

   12 VAR_NAME: IDENT
   13         | CLASS_NAME

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

   15 member_access: IDENT DOT IDENT parenthesis

   16 parenthesis: ε
   17            | BRACKET_LEFT BRACKET_RIGHT

   18 visibility: ε
   19           | PUBLIC
   20           | PRIVATE

   21 variable_decleration: visibility variable_type VAR_NAME

   22 variable_type: INT
   23              | DOUBLE
   24              | CHAR
   25              | BOOLEAN
   26              | STRING

   27 variable_assignment: VAR_NAME EQUAL_SIGN sign expression

   28 sign: PLUS
   29     | MINUS
   30     | ε

   31 expression: expression PLUS term
   32           | expression MINUS term
   33           | term

   34 term: term MULTIPLY par
   35     | term DIVIDE par
   36     | par

   37 par: BRACKET_LEFT expression BRACKET_RIGHT
   38    | id

   39 id: variable_value
   40   | VAR_NAME
   41   | BRACKET_LEFT id BRACKET_RIGHT

   42 variable_value: INT_VALUE
   43               | CHAR_VALUE
   44               | DOUBLE_VALUE
   45               | BOOLEAN_VALUE
   46               | STRING_VALUE

   47 function_call: VAR_NAME BRACKET_LEFT arguments_call BRACKET_RIGHT

   48 arguments_call: ε
   49               | expression arguments_call_end
   50               | VAR_NAME DOT VAR_NAME arguments_call_end

   51 arguments_call_end: ε
   52                   | COMMA expression arguments_call_end
   53                   | COMMA VAR_NAME DOT VAR_NAME arguments_call_end

   54 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   55          | function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

   56 function_visibility: PRIVATE
   57                    | PUBLIC

   58 arguments: ε
   59          | parameters

   60 parameters: variable_type VAR_NAME arguments_end

   61 arguments_end: ε
   62              | COMMA parameters

   63 inside_void_function: inside_brackets
   64                     | inside_brackets RETURN SEMICOLON

   65 inside_function: inside_brackets RETURN expression SEMICOLON

   66 inside_brackets: ε
   67                | loops_n_condition inside_brackets
   68                | function_call SEMICOLON inside_brackets
   69                | print SEMICOLON inside_brackets
   70                | class_members inside_brackets

   71 loops_n_condition: for_statement
   72                  | switch
   73                  | do_while
   74                  | if

   75 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

   76 for_condition: for_variable SEMICOLON condition SEMICOLON for_step

   77 for_variable: ε
   78             | variable_type variable_assignment

   79 condition: ε
   80          | expression CONDITION_SYMBOL expression bool_operator
   81          | VAR_NAME bool_operator
   82          | BOOLEAN_VALUE bool_operator

   83 bool_operator: ε
   84              | BOOL_OP condition

   85 for_step: ε
   86         | VAR_NAME step

   87 step: INCREAMENT_DECREAMENT
   88     | LOOP_STEP expression

   89 inside_brackets_loop: inside_brackets
   90                     | inside_brackets BREAK SEMICOLON inside_brackets

   91 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

   92 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

   93 case: CASE expression COLON switch_content case
   94     | ε

   95 switch_content: ε
   96               | inside_brackets BREAK SEMICOLON

   97 default: DEFAULT COLON switch_content
   98        | ε

   99 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

  100 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if
  101        | else

  102 else: ε
  103     | ELSE CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

  104 print: PRINT BRACKET_LEFT STRING_VALUE after_print BRACKET_RIGHT

  105 after_print: ε
  106            | COMMA VAR_NAME after_print


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CURLY_BRACKET_LEFT (258) 3 54 55 75 91 92 99 100 103
    CURLY_BRACKET_RIGHT (259) 3 54 55 75 91 92 99 100 103
    BRACKET_LEFT (260) 14 17 37 41 47 54 55 75 91 92 99 100 104
    BRACKET_RIGHT (261) 14 17 37 41 47 54 55 75 91 92 99 100 104
    EQUAL_SIGN (262) 14 27
    SEMICOLON (263) 8 9 10 11 64 65 68 69 76 90 91 96
    COLON (264) 93 97
    COMMA (265) 52 53 62 106
    DOT (266) 15 50 53
    PLUS (267) 28 31
    MINUS (268) 29 32
    MULTIPLY (269) 34
    DIVIDE (270) 35
    PUBLIC (271) 3 19 57
    PRIVATE (272) 20 56
    CLASS (273) 3
    CLASS_NAME (274) 3 13 14
    NEW (275) 14
    IF (276) 99 100
    ELSE (277) 100 103
    FOR (278) 75
    DO (279) 91
    WHILE (280) 91
    CONDITION_SYMBOL (281) 80
    BOOL_OP (282) 84
    INCREAMENT_DECREAMENT (283) 87
    LOOP_STEP (284) 88
    SWITCH (285) 92
    CASE (286) 93
    DEFAULT (287) 97
    BREAK (288) 90 96
    RETURN (289) 64 65
    PRINT (290) 104
    IDENT (291) 12 15
    VOID (292) 54
    INT (293) 22
    CHAR (294) 24
    DOUBLE (295) 23
    BOOLEAN (296) 25
    STRING (297) 26
    INT_VALUE (298) 42
    CHAR_VALUE (299) 43
    DOUBLE_VALUE (300) 44
    BOOLEAN_VALUE (301) 45 82
    STRING_VALUE (302) 46 104


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1 2
        on right: 0 2
    class_identifier (50)
        on left: 3
        on right: 2 7
    class_body (51)
        on left: 4 5 6 7
        on right: 3 5 6 7
    class_members (52)
        on left: 8 9 10 11
        on right: 6 70
    VAR_NAME (53)
        on left: 12 13
        on right: 14 21 27 40 47 50 53 54 55 60 81 86 106
    class_instance (54)
        on left: 14
        on right: 11
    member_access (55)
        on left: 15
        on right: 10
    parenthesis (56)
        on left: 16 17
        on right: 15
    visibility (57)
        on left: 18 19 20
        on right: 21
    variable_decleration (58)
        on left: 21
        on right: 8
    variable_type (59)
        on left: 22 23 24 25 26
        on right: 21 55 60 78
    variable_assignment (60)
        on left: 27
        on right: 9 78
    sign (61)
        on left: 28 29 30
        on right: 27
    expression (62)
        on left: 31 32 33
        on right: 27 31 32 37 49 52 65 80 88 92 93
    term (63)
        on left: 34 35 36
        on right: 31 32 33 34 35
    par (64)
        on left: 37 38
        on right: 34 35 36
    id (65)
        on left: 39 40 41
        on right: 38 41
    variable_value (66)
        on left: 42 43 44 45 46
        on right: 39
    function_call (67)
        on left: 47
        on right: 68
    arguments_call (68)
        on left: 48 49 50
        on right: 47
    arguments_call_end (69)
        on left: 51 52 53
        on right: 49 50 52 53
    functions (70)
        on left: 54 55
        on right: 5
    function_visibility (71)
        on left: 56 57
        on right: 54 55
    arguments (72)
        on left: 58 59
        on right: 54 55
    parameters (73)
        on left: 60
        on right: 59 62
    arguments_end (74)
        on left: 61 62
        on right: 60
    inside_void_function (75)
        on left: 63 64
        on right: 54
    inside_function (76)
        on left: 65
        on right: 55
    inside_brackets (77)
        on left: 66 67 68 69 70
        on right: 63 64 65 67 68 69 70 89 90 96 99 100 103
    loops_n_condition (78)
        on left: 71 72 73 74
        on right: 67
    for_statement (79)
        on left: 75
        on right: 71
    for_condition (80)
        on left: 76
        on right: 75
    for_variable (81)
        on left: 77 78
        on right: 76
    condition (82)
        on left: 79 80 81 82
        on right: 76 84 91 99 100
    bool_operator (83)
        on left: 83 84
        on right: 80 81 82
    for_step (84)
        on left: 85 86
        on right: 76
    step (85)
        on left: 87 88
        on right: 86
    inside_brackets_loop (86)
        on left: 89 90
        on right: 75 91
    do_while (87)
        on left: 91
        on right: 73
    switch (88)
        on left: 92
        on right: 72
    case (89)
        on left: 93 94
        on right: 92 93
    switch_content (90)
        on left: 95 96
        on right: 93 97
    default (91)
        on left: 97 98
        on right: 92
    if (92)
        on left: 99
        on right: 74
    else_if (93)
        on left: 100 101
        on right: 99 100
    else (94)
        on left: 102 103
        on right: 101
    print (95)
        on left: 104
        on right: 69
    after_print (96)
        on left: 105 106
        on right: 104 106


State 0

    0 $accept: • program $end

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program           go to state 2
    class_identifier  go to state 3


State 1

    3 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    2 program: class_identifier • program

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program           go to state 6
    class_identifier  go to state 3


State 4

    3 class_identifier: PUBLIC CLASS • CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 7


State 5

    0 $accept: program $end •

    $default  accept


State 6

    2 program: class_identifier program •

    $default  reduce using rule 2 (program)


State 7

    3 class_identifier: PUBLIC CLASS CLASS_NAME • CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 8


State 8

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT • class_body CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 9
    PRIVATE     shift, and go to state 10
    CLASS_NAME  shift, and go to state 11
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 18 (visibility)

    class_identifier      go to state 13
    class_body            go to state 14
    class_members         go to state 15
    VAR_NAME              go to state 16
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    functions             go to state 22
    function_visibility   go to state 23


State 9

    3 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT
   19 visibility: PUBLIC •
   57 function_visibility: PUBLIC •

    CLASS  shift, and go to state 4

    VOID      reduce using rule 57 (function_visibility)
    INT       reduce using rule 19 (visibility)
    INT       [reduce using rule 57 (function_visibility)]
    CHAR      reduce using rule 19 (visibility)
    CHAR      [reduce using rule 57 (function_visibility)]
    DOUBLE    reduce using rule 19 (visibility)
    DOUBLE    [reduce using rule 57 (function_visibility)]
    BOOLEAN   reduce using rule 19 (visibility)
    BOOLEAN   [reduce using rule 57 (function_visibility)]
    STRING    reduce using rule 19 (visibility)
    STRING    [reduce using rule 57 (function_visibility)]
    $default  reduce using rule 19 (visibility)


State 10

   20 visibility: PRIVATE •
   56 function_visibility: PRIVATE •

    VOID      reduce using rule 56 (function_visibility)
    INT       reduce using rule 20 (visibility)
    INT       [reduce using rule 56 (function_visibility)]
    CHAR      reduce using rule 20 (visibility)
    CHAR      [reduce using rule 56 (function_visibility)]
    DOUBLE    reduce using rule 20 (visibility)
    DOUBLE    [reduce using rule 56 (function_visibility)]
    BOOLEAN   reduce using rule 20 (visibility)
    BOOLEAN   [reduce using rule 56 (function_visibility)]
    STRING    reduce using rule 20 (visibility)
    STRING    [reduce using rule 56 (function_visibility)]
    $default  reduce using rule 20 (visibility)


State 11

   13 VAR_NAME: CLASS_NAME •
   14 class_instance: CLASS_NAME • VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    $default  reduce using rule 13 (VAR_NAME)

    VAR_NAME  go to state 26


State 12

   12 VAR_NAME: IDENT •
   15 member_access: IDENT • DOT IDENT parenthesis

    DOT  shift, and go to state 27

    $default  reduce using rule 12 (VAR_NAME)


State 13

    7 class_body: class_identifier • class_body

    PUBLIC      shift, and go to state 9
    PRIVATE     shift, and go to state 10
    CLASS_NAME  shift, and go to state 11
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 18 (visibility)

    class_identifier      go to state 13
    class_body            go to state 28
    class_members         go to state 15
    VAR_NAME              go to state 16
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    functions             go to state 22
    function_visibility   go to state 23


State 14

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 29


State 15

    6 class_body: class_members • class_body

    PUBLIC      shift, and go to state 9
    PRIVATE     shift, and go to state 10
    CLASS_NAME  shift, and go to state 11
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 18 (visibility)

    class_identifier      go to state 13
    class_body            go to state 30
    class_members         go to state 15
    VAR_NAME              go to state 16
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    functions             go to state 22
    function_visibility   go to state 23


State 16

   27 variable_assignment: VAR_NAME • EQUAL_SIGN sign expression

    EQUAL_SIGN  shift, and go to state 31


State 17

   11 class_members: class_instance • SEMICOLON

    SEMICOLON  shift, and go to state 32


State 18

   10 class_members: member_access • SEMICOLON

    SEMICOLON  shift, and go to state 33


State 19

   21 variable_decleration: visibility • variable_type VAR_NAME

    INT      shift, and go to state 34
    CHAR     shift, and go to state 35
    DOUBLE   shift, and go to state 36
    BOOLEAN  shift, and go to state 37
    STRING   shift, and go to state 38

    variable_type  go to state 39


State 20

    8 class_members: variable_decleration • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 21

    9 class_members: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 41


State 22

    5 class_body: functions • class_body

    PUBLIC      shift, and go to state 9
    PRIVATE     shift, and go to state 10
    CLASS_NAME  shift, and go to state 11
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 18 (visibility)

    class_identifier      go to state 13
    class_body            go to state 42
    class_members         go to state 15
    VAR_NAME              go to state 16
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    functions             go to state 22
    function_visibility   go to state 23


State 23

   54 functions: function_visibility • VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   55          | function_visibility • variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VOID     shift, and go to state 43
    INT      shift, and go to state 34
    CHAR     shift, and go to state 35
    DOUBLE   shift, and go to state 36
    BOOLEAN  shift, and go to state 37
    STRING   shift, and go to state 38

    variable_type  go to state 44


State 24

   13 VAR_NAME: CLASS_NAME •

    $default  reduce using rule 13 (VAR_NAME)


State 25

   12 VAR_NAME: IDENT •

    $default  reduce using rule 12 (VAR_NAME)


State 26

   14 class_instance: CLASS_NAME VAR_NAME • EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    EQUAL_SIGN  shift, and go to state 45


State 27

   15 member_access: IDENT DOT • IDENT parenthesis

    IDENT  shift, and go to state 46


State 28

    7 class_body: class_identifier class_body •

    $default  reduce using rule 7 (class_body)


State 29

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT •

    $default  reduce using rule 3 (class_identifier)


State 30

    6 class_body: class_members class_body •

    $default  reduce using rule 6 (class_body)


State 31

   27 variable_assignment: VAR_NAME EQUAL_SIGN • sign expression

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48

    $default  reduce using rule 30 (sign)

    sign  go to state 49


State 32

   11 class_members: class_instance SEMICOLON •

    $default  reduce using rule 11 (class_members)


State 33

   10 class_members: member_access SEMICOLON •

    $default  reduce using rule 10 (class_members)


State 34

   22 variable_type: INT •

    $default  reduce using rule 22 (variable_type)


State 35

   24 variable_type: CHAR •

    $default  reduce using rule 24 (variable_type)


State 36

   23 variable_type: DOUBLE •

    $default  reduce using rule 23 (variable_type)


State 37

   25 variable_type: BOOLEAN •

    $default  reduce using rule 25 (variable_type)


State 38

   26 variable_type: STRING •

    $default  reduce using rule 26 (variable_type)


State 39

   21 variable_decleration: visibility variable_type • VAR_NAME

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    VAR_NAME  go to state 50


State 40

    8 class_members: variable_decleration SEMICOLON •

    $default  reduce using rule 8 (class_members)


State 41

    9 class_members: variable_assignment SEMICOLON •

    $default  reduce using rule 9 (class_members)


State 42

    5 class_body: functions class_body •

    $default  reduce using rule 5 (class_body)


State 43

   54 functions: function_visibility VOID • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    VAR_NAME  go to state 51


State 44

   55 functions: function_visibility variable_type • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    VAR_NAME  go to state 52


State 45

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN • NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    NEW  shift, and go to state 53


State 46

   15 member_access: IDENT DOT IDENT • parenthesis

    BRACKET_LEFT  shift, and go to state 54

    $default  reduce using rule 16 (parenthesis)

    parenthesis  go to state 55


State 47

   28 sign: PLUS •

    $default  reduce using rule 28 (sign)


State 48

   29 sign: MINUS •

    $default  reduce using rule 29 (sign)


State 49

   27 variable_assignment: VAR_NAME EQUAL_SIGN sign • expression

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    expression      go to state 63
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67


State 50

   21 variable_decleration: visibility variable_type VAR_NAME •

    $default  reduce using rule 21 (variable_decleration)


State 51

   54 functions: function_visibility VOID VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 68


State 52

   55 functions: function_visibility variable_type VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 69


State 53

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW • CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 70


State 54

   17 parenthesis: BRACKET_LEFT • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 71


State 55

   15 member_access: IDENT DOT IDENT parenthesis •

    $default  reduce using rule 15 (member_access)


State 56

   37 par: BRACKET_LEFT • expression BRACKET_RIGHT
   41 id: BRACKET_LEFT • id BRACKET_RIGHT

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    expression      go to state 72
    term            go to state 64
    par             go to state 65
    id              go to state 73
    variable_value  go to state 67


State 57

   42 variable_value: INT_VALUE •

    $default  reduce using rule 42 (variable_value)


State 58

   43 variable_value: CHAR_VALUE •

    $default  reduce using rule 43 (variable_value)


State 59

   44 variable_value: DOUBLE_VALUE •

    $default  reduce using rule 44 (variable_value)


State 60

   45 variable_value: BOOLEAN_VALUE •

    $default  reduce using rule 45 (variable_value)


State 61

   46 variable_value: STRING_VALUE •

    $default  reduce using rule 46 (variable_value)


State 62

   40 id: VAR_NAME •

    $default  reduce using rule 40 (id)


State 63

   27 variable_assignment: VAR_NAME EQUAL_SIGN sign expression •
   31 expression: expression • PLUS term
   32           | expression • MINUS term

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 27 (variable_assignment)


State 64

   33 expression: term •
   34 term: term • MULTIPLY par
   35     | term • DIVIDE par

    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77

    $default  reduce using rule 33 (expression)


State 65

   36 term: par •

    $default  reduce using rule 36 (term)


State 66

   38 par: id •

    $default  reduce using rule 38 (par)


State 67

   39 id: variable_value •

    $default  reduce using rule 39 (id)


State 68

   54 functions: function_visibility VOID VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 34
    CHAR     shift, and go to state 35
    DOUBLE   shift, and go to state 36
    BOOLEAN  shift, and go to state 37
    STRING   shift, and go to state 38

    $default  reduce using rule 58 (arguments)

    variable_type  go to state 78
    arguments      go to state 79
    parameters     go to state 80


State 69

   55 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 34
    CHAR     shift, and go to state 35
    DOUBLE   shift, and go to state 36
    BOOLEAN  shift, and go to state 37
    STRING   shift, and go to state 38

    $default  reduce using rule 58 (arguments)

    variable_type  go to state 78
    arguments      go to state 81
    parameters     go to state 80


State 70

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME • BRACKET_LEFT BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 82


State 71

   17 parenthesis: BRACKET_LEFT BRACKET_RIGHT •

    $default  reduce using rule 17 (parenthesis)


State 72

   31 expression: expression • PLUS term
   32           | expression • MINUS term
   37 par: BRACKET_LEFT expression • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 83
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75


State 73

   38 par: id •
   41 id: BRACKET_LEFT id • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 84

    BRACKET_RIGHT  [reduce using rule 38 (par)]
    $default       reduce using rule 38 (par)


State 74

   31 expression: expression PLUS • term

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    term            go to state 85
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67


State 75

   32 expression: expression MINUS • term

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    term            go to state 86
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67


State 76

   34 term: term MULTIPLY • par

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    par             go to state 87
    id              go to state 66
    variable_value  go to state 67


State 77

   35 term: term DIVIDE • par

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    par             go to state 88
    id              go to state 66
    variable_value  go to state 67


State 78

   60 parameters: variable_type • VAR_NAME arguments_end

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    VAR_NAME  go to state 89


State 79

   54 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 90


State 80

   59 arguments: parameters •

    $default  reduce using rule 59 (arguments)


State 81

   55 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 91


State 82

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 92


State 83

   37 par: BRACKET_LEFT expression BRACKET_RIGHT •

    $default  reduce using rule 37 (par)


State 84

   41 id: BRACKET_LEFT id BRACKET_RIGHT •

    $default  reduce using rule 41 (id)


State 85

   31 expression: expression PLUS term •
   34 term: term • MULTIPLY par
   35     | term • DIVIDE par

    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77

    $default  reduce using rule 31 (expression)


State 86

   32 expression: expression MINUS term •
   34 term: term • MULTIPLY par
   35     | term • DIVIDE par

    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77

    $default  reduce using rule 32 (expression)


State 87

   34 term: term MULTIPLY par •

    $default  reduce using rule 34 (term)


State 88

   35 term: term DIVIDE par •

    $default  reduce using rule 35 (term)


State 89

   60 parameters: variable_type VAR_NAME • arguments_end

    COMMA  shift, and go to state 93

    $default  reduce using rule 61 (arguments_end)

    arguments_end  go to state 94


State 90

   54 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 95


State 91

   55 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 96


State 92

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT •

    $default  reduce using rule 14 (class_instance)


State 93

   62 arguments_end: COMMA • parameters

    INT      shift, and go to state 34
    CHAR     shift, and go to state 35
    DOUBLE   shift, and go to state 36
    BOOLEAN  shift, and go to state 37
    STRING   shift, and go to state 38

    variable_type  go to state 78
    parameters     go to state 97


State 94

   60 parameters: variable_type VAR_NAME arguments_end •

    $default  reduce using rule 60 (parameters)


State 95

   54 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_void_function CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    RETURN               reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_void_function  go to state 108
    inside_brackets       go to state 109
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 96

   55 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_function CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    RETURN    reduce using rule 66 (inside_brackets)
    $default  reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_function       go to state 116
    inside_brackets       go to state 117
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 97

   62 arguments_end: COMMA parameters •

    $default  reduce using rule 62 (arguments_end)


State 98

   19 visibility: PUBLIC •

    $default  reduce using rule 19 (visibility)


State 99

   20 visibility: PRIVATE •

    $default  reduce using rule 20 (visibility)


State 100

   99 if: IF • BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT  shift, and go to state 118


State 101

   75 for_statement: FOR • BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 119


State 102

   91 do_while: DO • CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_LEFT  shift, and go to state 120


State 103

   92 switch: SWITCH • BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 121


State 104

  104 print: PRINT • BRACKET_LEFT STRING_VALUE after_print BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 122


State 105

   70 inside_brackets: class_members • inside_brackets

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    BREAK                reduce using rule 66 (inside_brackets)
    RETURN               reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 123
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 106

   27 variable_assignment: VAR_NAME • EQUAL_SIGN sign expression
   47 function_call: VAR_NAME • BRACKET_LEFT arguments_call BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 124
    EQUAL_SIGN    shift, and go to state 31


State 107

   68 inside_brackets: function_call • SEMICOLON inside_brackets

    SEMICOLON  shift, and go to state 125


State 108

   54 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 126


State 109

   63 inside_void_function: inside_brackets •
   64                     | inside_brackets • RETURN SEMICOLON

    RETURN  shift, and go to state 127

    $default  reduce using rule 63 (inside_void_function)


State 110

   67 inside_brackets: loops_n_condition • inside_brackets

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    BREAK                reduce using rule 66 (inside_brackets)
    RETURN               reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 128
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 111

   71 loops_n_condition: for_statement •

    $default  reduce using rule 71 (loops_n_condition)


State 112

   73 loops_n_condition: do_while •

    $default  reduce using rule 73 (loops_n_condition)


State 113

   72 loops_n_condition: switch •

    $default  reduce using rule 72 (loops_n_condition)


State 114

   74 loops_n_condition: if •

    $default  reduce using rule 74 (loops_n_condition)


State 115

   69 inside_brackets: print • SEMICOLON inside_brackets

    SEMICOLON  shift, and go to state 129


State 116

   55 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 130


State 117

   65 inside_function: inside_brackets • RETURN expression SEMICOLON

    RETURN  shift, and go to state 131


State 118

   99 if: IF BRACKET_LEFT • condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 132
    STRING_VALUE   shift, and go to state 61

    $default  reduce using rule 79 (condition)

    VAR_NAME        go to state 133
    expression      go to state 134
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67
    condition       go to state 135


State 119

   75 for_statement: FOR BRACKET_LEFT • for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

    INT      shift, and go to state 34
    CHAR     shift, and go to state 35
    DOUBLE   shift, and go to state 36
    BOOLEAN  shift, and go to state 37
    STRING   shift, and go to state 38

    $default  reduce using rule 77 (for_variable)

    variable_type  go to state 136
    for_condition  go to state 137
    for_variable   go to state 138


State 120

   91 do_while: DO CURLY_BRACKET_LEFT • inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    BREAK                reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 139
    loops_n_condition     go to state 110
    for_statement         go to state 111
    inside_brackets_loop  go to state 140
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 121

   92 switch: SWITCH BRACKET_LEFT • expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    expression      go to state 141
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67


State 122

  104 print: PRINT BRACKET_LEFT • STRING_VALUE after_print BRACKET_RIGHT

    STRING_VALUE  shift, and go to state 142


State 123

   70 inside_brackets: class_members inside_brackets •

    $default  reduce using rule 70 (inside_brackets)


State 124

   47 function_call: VAR_NAME BRACKET_LEFT • arguments_call BRACKET_RIGHT

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    $default  reduce using rule 48 (arguments_call)

    VAR_NAME        go to state 143
    expression      go to state 144
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67
    arguments_call  go to state 145


State 125

   68 inside_brackets: function_call SEMICOLON • inside_brackets

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    BREAK                reduce using rule 66 (inside_brackets)
    RETURN               reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 146
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 126

   54 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 54 (functions)


State 127

   64 inside_void_function: inside_brackets RETURN • SEMICOLON

    SEMICOLON  shift, and go to state 147


State 128

   67 inside_brackets: loops_n_condition inside_brackets •

    $default  reduce using rule 67 (inside_brackets)


State 129

   69 inside_brackets: print SEMICOLON • inside_brackets

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    BREAK                reduce using rule 66 (inside_brackets)
    RETURN               reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 148
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 130

   55 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 55 (functions)


State 131

   65 inside_function: inside_brackets RETURN • expression SEMICOLON

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    expression      go to state 149
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67


State 132

   45 variable_value: BOOLEAN_VALUE •
   82 condition: BOOLEAN_VALUE • bool_operator

    BOOL_OP  shift, and go to state 150

    BRACKET_RIGHT  reduce using rule 83 (bool_operator)
    SEMICOLON      reduce using rule 83 (bool_operator)
    $default       reduce using rule 45 (variable_value)

    bool_operator  go to state 151


State 133

   40 id: VAR_NAME •
   81 condition: VAR_NAME • bool_operator

    BOOL_OP  shift, and go to state 150

    BRACKET_RIGHT  reduce using rule 83 (bool_operator)
    SEMICOLON      reduce using rule 83 (bool_operator)
    $default       reduce using rule 40 (id)

    bool_operator  go to state 152


State 134

   31 expression: expression • PLUS term
   32           | expression • MINUS term
   80 condition: expression • CONDITION_SYMBOL expression bool_operator

    PLUS              shift, and go to state 74
    MINUS             shift, and go to state 75
    CONDITION_SYMBOL  shift, and go to state 153


State 135

   99 if: IF BRACKET_LEFT condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_RIGHT  shift, and go to state 154


State 136

   78 for_variable: variable_type • variable_assignment

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    VAR_NAME             go to state 16
    variable_assignment  go to state 155


State 137

   75 for_statement: FOR BRACKET_LEFT for_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 156


State 138

   76 for_condition: for_variable • SEMICOLON condition SEMICOLON for_step

    SEMICOLON  shift, and go to state 157


State 139

   89 inside_brackets_loop: inside_brackets •
   90                     | inside_brackets • BREAK SEMICOLON inside_brackets

    BREAK  shift, and go to state 158

    $default  reduce using rule 89 (inside_brackets_loop)


State 140

   91 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop • CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_RIGHT  shift, and go to state 159


State 141

   31 expression: expression • PLUS term
   32           | expression • MINUS term
   92 switch: SWITCH BRACKET_LEFT expression • BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 160
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75


State 142

  104 print: PRINT BRACKET_LEFT STRING_VALUE • after_print BRACKET_RIGHT

    COMMA  shift, and go to state 161

    $default  reduce using rule 105 (after_print)

    after_print  go to state 162


State 143

   40 id: VAR_NAME •
   50 arguments_call: VAR_NAME • DOT VAR_NAME arguments_call_end

    DOT  shift, and go to state 163

    $default  reduce using rule 40 (id)


State 144

   31 expression: expression • PLUS term
   32           | expression • MINUS term
   49 arguments_call: expression • arguments_call_end

    COMMA  shift, and go to state 164
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 51 (arguments_call_end)

    arguments_call_end  go to state 165


State 145

   47 function_call: VAR_NAME BRACKET_LEFT arguments_call • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 166


State 146

   68 inside_brackets: function_call SEMICOLON inside_brackets •

    $default  reduce using rule 68 (inside_brackets)


State 147

   64 inside_void_function: inside_brackets RETURN SEMICOLON •

    $default  reduce using rule 64 (inside_void_function)


State 148

   69 inside_brackets: print SEMICOLON inside_brackets •

    $default  reduce using rule 69 (inside_brackets)


State 149

   31 expression: expression • PLUS term
   32           | expression • MINUS term
   65 inside_function: inside_brackets RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 167
    PLUS       shift, and go to state 74
    MINUS      shift, and go to state 75


State 150

   84 bool_operator: BOOL_OP • condition

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 132
    STRING_VALUE   shift, and go to state 61

    $default  reduce using rule 79 (condition)

    VAR_NAME        go to state 133
    expression      go to state 134
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67
    condition       go to state 168


State 151

   82 condition: BOOLEAN_VALUE bool_operator •

    $default  reduce using rule 82 (condition)


State 152

   81 condition: VAR_NAME bool_operator •

    $default  reduce using rule 81 (condition)


State 153

   80 condition: expression CONDITION_SYMBOL • expression bool_operator

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    expression      go to state 169
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67


State 154

   99 if: IF BRACKET_LEFT condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_LEFT  shift, and go to state 170


State 155

   78 for_variable: variable_type variable_assignment •

    $default  reduce using rule 78 (for_variable)


State 156

   75 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 171


State 157

   76 for_condition: for_variable SEMICOLON • condition SEMICOLON for_step

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 132
    STRING_VALUE   shift, and go to state 61

    $default  reduce using rule 79 (condition)

    VAR_NAME        go to state 133
    expression      go to state 134
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67
    condition       go to state 172


State 158

   90 inside_brackets_loop: inside_brackets BREAK • SEMICOLON inside_brackets

    SEMICOLON  shift, and go to state 173


State 159

   91 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT • WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    WHILE  shift, and go to state 174


State 160

   92 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT • CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 175


State 161

  106 after_print: COMMA • VAR_NAME after_print

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    VAR_NAME  go to state 176


State 162

  104 print: PRINT BRACKET_LEFT STRING_VALUE after_print • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 177


State 163

   50 arguments_call: VAR_NAME DOT • VAR_NAME arguments_call_end

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    VAR_NAME  go to state 178


State 164

   52 arguments_call_end: COMMA • expression arguments_call_end
   53                   | COMMA • VAR_NAME DOT VAR_NAME arguments_call_end

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 179
    expression      go to state 180
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67


State 165

   49 arguments_call: expression arguments_call_end •

    $default  reduce using rule 49 (arguments_call)


State 166

   47 function_call: VAR_NAME BRACKET_LEFT arguments_call BRACKET_RIGHT •

    $default  reduce using rule 47 (function_call)


State 167

   65 inside_function: inside_brackets RETURN expression SEMICOLON •

    $default  reduce using rule 65 (inside_function)


State 168

   84 bool_operator: BOOL_OP condition •

    $default  reduce using rule 84 (bool_operator)


State 169

   31 expression: expression • PLUS term
   32           | expression • MINUS term
   80 condition: expression CONDITION_SYMBOL expression • bool_operator

    PLUS     shift, and go to state 74
    MINUS    shift, and go to state 75
    BOOL_OP  shift, and go to state 150

    $default  reduce using rule 83 (bool_operator)

    bool_operator  go to state 181


State 170

   99 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT else_if

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 182
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 171

   75 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets_loop CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    BREAK                reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 139
    loops_n_condition     go to state 110
    for_statement         go to state 111
    inside_brackets_loop  go to state 183
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 172

   76 for_condition: for_variable SEMICOLON condition • SEMICOLON for_step

    SEMICOLON  shift, and go to state 184


State 173

   90 inside_brackets_loop: inside_brackets BREAK SEMICOLON • inside_brackets

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 185
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 174

   91 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE • BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    BRACKET_LEFT  shift, and go to state 186


State 175

   92 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT • case default CURLY_BRACKET_RIGHT

    CASE  shift, and go to state 187

    $default  reduce using rule 94 (case)

    case  go to state 188


State 176

  106 after_print: COMMA VAR_NAME • after_print

    COMMA  shift, and go to state 161

    $default  reduce using rule 105 (after_print)

    after_print  go to state 189


State 177

  104 print: PRINT BRACKET_LEFT STRING_VALUE after_print BRACKET_RIGHT •

    $default  reduce using rule 104 (print)


State 178

   50 arguments_call: VAR_NAME DOT VAR_NAME • arguments_call_end

    COMMA  shift, and go to state 164

    $default  reduce using rule 51 (arguments_call_end)

    arguments_call_end  go to state 190


State 179

   40 id: VAR_NAME •
   53 arguments_call_end: COMMA VAR_NAME • DOT VAR_NAME arguments_call_end

    DOT  shift, and go to state 191

    $default  reduce using rule 40 (id)


State 180

   31 expression: expression • PLUS term
   32           | expression • MINUS term
   52 arguments_call_end: COMMA expression • arguments_call_end

    COMMA  shift, and go to state 164
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 51 (arguments_call_end)

    arguments_call_end  go to state 192


State 181

   80 condition: expression CONDITION_SYMBOL expression bool_operator •

    $default  reduce using rule 80 (condition)


State 182

   99 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_RIGHT  shift, and go to state 193


State 183

   75 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 194


State 184

   76 for_condition: for_variable SEMICOLON condition SEMICOLON • for_step

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    $default  reduce using rule 85 (for_step)

    VAR_NAME  go to state 195
    for_step  go to state 196


State 185

   90 inside_brackets_loop: inside_brackets BREAK SEMICOLON inside_brackets •

    $default  reduce using rule 90 (inside_brackets_loop)


State 186

   91 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT • condition BRACKET_RIGHT SEMICOLON

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 132
    STRING_VALUE   shift, and go to state 61

    $default  reduce using rule 79 (condition)

    VAR_NAME        go to state 133
    expression      go to state 134
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67
    condition       go to state 197


State 187

   93 case: CASE • expression COLON switch_content case

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    expression      go to state 198
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67


State 188

   92 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case • default CURLY_BRACKET_RIGHT

    DEFAULT  shift, and go to state 199

    $default  reduce using rule 98 (default)

    default  go to state 200


State 189

  106 after_print: COMMA VAR_NAME after_print •

    $default  reduce using rule 106 (after_print)


State 190

   50 arguments_call: VAR_NAME DOT VAR_NAME arguments_call_end •

    $default  reduce using rule 50 (arguments_call)


State 191

   53 arguments_call_end: COMMA VAR_NAME DOT • VAR_NAME arguments_call_end

    CLASS_NAME  shift, and go to state 24
    IDENT       shift, and go to state 25

    VAR_NAME  go to state 201


State 192

   52 arguments_call_end: COMMA expression arguments_call_end •

    $default  reduce using rule 52 (arguments_call_end)


State 193

   99 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • else_if

    ELSE  shift, and go to state 202

    $default  reduce using rule 102 (else)

    else_if  go to state 203
    else     go to state 204


State 194

   75 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT •

    $default  reduce using rule 75 (for_statement)


State 195

   86 for_step: VAR_NAME • step

    INCREAMENT_DECREAMENT  shift, and go to state 205
    LOOP_STEP              shift, and go to state 206

    step  go to state 207


State 196

   76 for_condition: for_variable SEMICOLON condition SEMICOLON for_step •

    $default  reduce using rule 76 (for_condition)


State 197

   91 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition • BRACKET_RIGHT SEMICOLON

    BRACKET_RIGHT  shift, and go to state 208


State 198

   31 expression: expression • PLUS term
   32           | expression • MINUS term
   93 case: CASE expression • COLON switch_content case

    COLON  shift, and go to state 209
    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75


State 199

   97 default: DEFAULT • COLON switch_content

    COLON  shift, and go to state 210


State 200

   92 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 211


State 201

   53 arguments_call_end: COMMA VAR_NAME DOT VAR_NAME • arguments_call_end

    COMMA  shift, and go to state 164

    $default  reduce using rule 51 (arguments_call_end)

    arguments_call_end  go to state 212


State 202

  100 else_if: ELSE • IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if
  103 else: ELSE • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 213
    IF                  shift, and go to state 214


State 203

   99 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if •

    $default  reduce using rule 99 (if)


State 204

  101 else_if: else •

    $default  reduce using rule 101 (else_if)


State 205

   87 step: INCREAMENT_DECREAMENT •

    $default  reduce using rule 87 (step)


State 206

   88 step: LOOP_STEP • expression

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 60
    STRING_VALUE   shift, and go to state 61

    VAR_NAME        go to state 62
    expression      go to state 215
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67


State 207

   86 for_step: VAR_NAME step •

    $default  reduce using rule 86 (for_step)


State 208

   91 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT • SEMICOLON

    SEMICOLON  shift, and go to state 216


State 209

   93 case: CASE expression COLON • switch_content case

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 95 (switch_content)
    CASE                 reduce using rule 95 (switch_content)
    DEFAULT              reduce using rule 95 (switch_content)
    BREAK                reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 217
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    switch_content        go to state 218
    if                    go to state 114
    print                 go to state 115


State 210

   97 default: DEFAULT COLON • switch_content

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 95 (switch_content)
    BREAK                reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 217
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    switch_content        go to state 219
    if                    go to state 114
    print                 go to state 115


State 211

   92 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT •

    $default  reduce using rule 92 (switch)


State 212

   53 arguments_call_end: COMMA VAR_NAME DOT VAR_NAME arguments_call_end •

    $default  reduce using rule 53 (arguments_call_end)


State 213

  103 else: ELSE CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 220
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 214

  100 else_if: ELSE IF • BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT  shift, and go to state 221


State 215

   31 expression: expression • PLUS term
   32           | expression • MINUS term
   88 step: LOOP_STEP expression •

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 88 (step)


State 216

   91 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON •

    $default  reduce using rule 91 (do_while)


State 217

   96 switch_content: inside_brackets • BREAK SEMICOLON

    BREAK  shift, and go to state 222


State 218

   93 case: CASE expression COLON switch_content • case

    CASE  shift, and go to state 187

    $default  reduce using rule 94 (case)

    case  go to state 223


State 219

   97 default: DEFAULT COLON switch_content •

    $default  reduce using rule 97 (default)


State 220

  103 else: ELSE CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 224


State 221

  100 else_if: ELSE IF BRACKET_LEFT • condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT   shift, and go to state 56
    CLASS_NAME     shift, and go to state 24
    IDENT          shift, and go to state 25
    INT_VALUE      shift, and go to state 57
    CHAR_VALUE     shift, and go to state 58
    DOUBLE_VALUE   shift, and go to state 59
    BOOLEAN_VALUE  shift, and go to state 132
    STRING_VALUE   shift, and go to state 61

    $default  reduce using rule 79 (condition)

    VAR_NAME        go to state 133
    expression      go to state 134
    term            go to state 64
    par             go to state 65
    id              go to state 66
    variable_value  go to state 67
    condition       go to state 225


State 222

   96 switch_content: inside_brackets BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 226


State 223

   93 case: CASE expression COLON switch_content case •

    $default  reduce using rule 93 (case)


State 224

  103 else: ELSE CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT •

    $default  reduce using rule 103 (else)


State 225

  100 else_if: ELSE IF BRACKET_LEFT condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_RIGHT  shift, and go to state 227


State 226

   96 switch_content: inside_brackets BREAK SEMICOLON •

    $default  reduce using rule 96 (switch_content)


State 227

  100 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_LEFT  shift, and go to state 228


State 228

  100 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT else_if

    PUBLIC      shift, and go to state 98
    PRIVATE     shift, and go to state 99
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 100
    FOR         shift, and go to state 101
    DO          shift, and go to state 102
    SWITCH      shift, and go to state 103
    PRINT       shift, and go to state 104
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 66 (inside_brackets)
    $default             reduce using rule 18 (visibility)

    class_members         go to state 105
    VAR_NAME              go to state 106
    class_instance        go to state 17
    member_access         go to state 18
    visibility            go to state 19
    variable_decleration  go to state 20
    variable_assignment   go to state 21
    function_call         go to state 107
    inside_brackets       go to state 229
    loops_n_condition     go to state 110
    for_statement         go to state 111
    do_while              go to state 112
    switch                go to state 113
    if                    go to state 114
    print                 go to state 115


State 229

  100 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_RIGHT  shift, and go to state 230


State 230

  100 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • else_if

    ELSE  shift, and go to state 202

    $default  reduce using rule 102 (else)

    else_if  go to state 231
    else     go to state 204


State 231

  100 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if •

    $default  reduce using rule 100 (else_if)
