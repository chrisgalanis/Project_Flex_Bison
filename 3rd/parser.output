Terminals unused in grammar

    SINGLE_MARK


State 9 conflicts: 5 reduce/reduce
State 10 conflicts: 5 reduce/reduce
State 194 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | class_identifier program

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    4 class_body: ε
    5           | functions class_body
    6           | class_members class_body
    7           | class_identifier class_body

    8 class_members: variable_initialization SEMICOLON
    9              | variable_declaration SEMICOLON
   10              | variable_assignment SEMICOLON
   11              | member_access SEMICOLON
   12              | class_instance SEMICOLON

   13 class_instance: CLASS_NAME IDENT EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

   14 member_access: IDENT DOT IDENT parenthesis

   15 parenthesis: ε
   16            | BRACKET_LEFT BRACKET_RIGHT

   17 VAR_NAME: IDENT
   18         | CLASS_NAME

   19 visibility: ε
   20           | PUBLIC
   21           | PRIVATE

   22 variable_declaration: visibility INT VAR_NAME dnext_int
   23                     | visibility DOUBLE VAR_NAME dnext_double
   24                     | visibility CHAR VAR_NAME dnext_char
   25                     | visibility BOOLEAN VAR_NAME dnext_bool
   26                     | visibility STRING VAR_NAME dnext_string

   27 dnext_int: ε
   28          | COMMA VAR_NAME dnext_int

   29 dnext_double: ε
   30             | COMMA VAR_NAME dnext_double

   31 dnext_char: ε
   32           | COMMA VAR_NAME dnext_char

   33 dnext_bool: ε
   34           | COMMA VAR_NAME dnext_bool

   35 dnext_string: ε
   36             | COMMA VAR_NAME dnext_string

   37 variable_initialization: visibility INT int_init next_int
   38                        | visibility DOUBLE double_init next_double
   39                        | visibility CHAR char_init next_char
   40                        | visibility BOOLEAN bool_init next_bool
   41                        | visibility STRING string_init next_string

   42 next_int: ε
   43         | COMMA int_init next_int

   44 next_double: ε
   45            | COMMA double_init next_double

   46 next_char: ε
   47          | COMMA char_init next_char

   48 next_bool: ε
   49          | COMMA bool_init next_bool

   50 next_string: ε
   51            | COMMA string_init next_string

   52 int_init: VAR_NAME EQUAL_SIGN expression

   53 double_init: VAR_NAME EQUAL_SIGN DOUBLE_VALUE

   54 char_init: VAR_NAME EQUAL_SIGN CHAR_VALUE

   55 bool_init: VAR_NAME EQUAL_SIGN BOOLEAN_VALUE

   56 string_init: VAR_NAME EQUAL_SIGN STRING_VALUE

   57 variable_assignment: VAR_NAME EQUAL_SIGN expression

   58 expression: variable_value
   59           | VAR_NAME
   60           | expression PLUS expression
   61           | expression MINUS expression
   62           | expression MULTIPLY expression
   63           | expression DIVIDE expression
   64           | BRACKET_LEFT expression BRACKET_RIGHT
   65           | MINUS expression

   66 variable_type: INT
   67              | DOUBLE
   68              | CHAR
   69              | BOOLEAN
   70              | STRING

   71 variable_value: INT_VALUE
   72               | CHAR_VALUE
   73               | DOUBLE_VALUE
   74               | BOOLEAN_VALUE
   75               | STRING_VALUE

   76 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   77          | function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

   78 function_visibility: PRIVATE
   79                    | PUBLIC

   80 arguments: ε
   81          | parameters

   82 parameters: variable_type VAR_NAME arguments_end

   83 arguments_end: ε
   84              | COMMA parameters

   85 inside_void_function: inside_brackets
   86                     | inside_brackets RETURN SEMICOLON

   87 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON
   88                | inside_brackets RETURN variable_value SEMICOLON

   89 inside_brackets: ε
   90                | loops_n_condition inside_brackets
   91                | variable_assignment SEMICOLON

   92 loops_n_condition: for_statement
   93                  | switch
   94                  | do_while
   95                  | if
   96                  | variable_initialization SEMICOLON
   97                  | variable_assignment SEMICOLON
   98                  | class_instance SEMICOLON
   99                  | member_access SEMICOLON

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

  101 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step

  102 for_variable: ε
  103             | variable_type VAR_NAME EQUAL_SIGN variable_value

  104 for_comparison: ε
  105               | VAR_NAME CONDITION_SYMBOL comparison_value for_bool_operator

  106 comparison_value: INT_VALUE
  107                 | DOUBLE_VALUE
  108                 | CHAR_VALUE
  109                 | BOOLEAN_VALUE
  110                 | VAR_NAME

  111 for_bool_operator: ε
  112                  | BOOL_SYMBOL for_comparison

  113 for_step: ε
  114         | VAR_NAME step

  115 step: INCREAMENT_DECREAMENT
  116     | LOOP_STEP step_value

  117 step_value: INT_VALUE
  118           | DOUBLE_VALUE

  119 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

  120 do_condition: operand CONDITION_SYMBOL operand do_bool_operator
  121             | BOOLEAN_VALUE
  122             | VAR_NAME

  123 do_bool_operator: ε
  124                 | BOOL_SYMBOL do_condition

  125 operand: VAR_NAME
  126        | INT_VALUE
  127        | DOUBLE_VALUE
  128        | CHAR_VALUE
  129        | BOOLEAN_VALUE

  130 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

  131 case: CASE switch_value COLON switch_content case
  132     | ε

  133 switch_value: INT_VALUE
  134             | CHAR_VALUE

  135 switch_content: ε
  136               | BREAK SEMICOLON

  137 default: DEFAULT COLON switch_content
  138        | ε

  139 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

  140 else_if: ε
  141        | ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if
  142        | else

  143 else: ELSE CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

  144 if_condition: operand CONDITION_SYMBOL operand if_bool_operator
  145             | BOOLEAN_VALUE
  146             | VAR_NAME

  147 if_bool_operator: ε
  148                 | BOOL_SYMBOL if_condition


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CURLY_BRACKET_LEFT (258) 3 76 77 100 119 130 139 141 143
    CURLY_BRACKET_RIGHT (259) 3 76 77 100 119 130 139 141 143
    BRACKET_LEFT (260) 13 16 64 76 77 100 119 130 139 141
    BRACKET_RIGHT (261) 13 16 64 76 77 100 119 130 139 141
    EQUAL_SIGN (262) 13 52 53 54 55 56 57 103
    SEMICOLON (263) 8 9 10 11 12 86 87 88 91 96 97 98 99 101 119 136
    SINGLE_MARK (264)
    COLON (265) 131 137
    COMMA (266) 28 30 32 34 36 43 45 47 49 51 84
    DOT (267) 14
    PLUS (268) 60
    MINUS (269) 61 65
    MULTIPLY (270) 62
    DIVIDE (271) 63
    UMINUS (272)
    PUBLIC <sval> (273) 3 20 79
    PRIVATE <sval> (274) 21 78
    CLASS (275) 3
    CLASS_NAME <sval> (276) 3 13 18
    NEW (277) 13
    IF (278) 139 141
    ELSE (279) 141 143
    FOR (280) 100
    DO (281) 119
    WHILE (282) 119
    CONDITION_SYMBOL (283) 105 120 144
    BOOL_SYMBOL (284) 112 124 148
    INCREAMENT_DECREAMENT (285) 115
    LOOP_STEP (286) 116
    SWITCH (287) 130
    CASE (288) 131
    DEFAULT (289) 137
    BREAK (290) 136
    RETURN (291) 86 87 88
    IDENT <sval> (292) 13 14 17
    VOID <sval> (293) 76
    INT <sval> (294) 22 37 66
    CHAR <sval> (295) 24 39 68
    DOUBLE <sval> (296) 23 38 67
    BOOLEAN <sval> (297) 25 40 69
    STRING <sval> (298) 26 41 70
    INT_VALUE <ival> (299) 71 106 117 126 133
    CHAR_VALUE <cval> (300) 54 72 108 128 134
    DOUBLE_VALUE <dval> (301) 53 73 107 118 127
    BOOLEAN_VALUE <sval> (302) 55 74 109 121 129 145
    STRING_VALUE <sval> (303) 56 75


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0 2
    class_identifier (51)
        on left: 3
        on right: 2 7
    class_body (52)
        on left: 4 5 6 7
        on right: 3 5 6 7
    class_members (53)
        on left: 8 9 10 11 12
        on right: 6
    class_instance (54)
        on left: 13
        on right: 12 98
    member_access (55)
        on left: 14
        on right: 11 99
    parenthesis (56)
        on left: 15 16
        on right: 14
    VAR_NAME <sval> (57)
        on left: 17 18
        on right: 22 23 24 25 26 28 30 32 34 36 52 53 54 55 56 57 59 76 77 82 87 103 105 110 114 122 125 130 146
    visibility <ival> (58)
        on left: 19 20 21
        on right: 22 23 24 25 26 37 38 39 40 41
    variable_declaration (59)
        on left: 22 23 24 25 26
        on right: 9
    dnext_int (60)
        on left: 27 28
        on right: 22 28
    dnext_double (61)
        on left: 29 30
        on right: 23 30
    dnext_char (62)
        on left: 31 32
        on right: 24 32
    dnext_bool (63)
        on left: 33 34
        on right: 25 34
    dnext_string (64)
        on left: 35 36
        on right: 26 36
    variable_initialization (65)
        on left: 37 38 39 40 41
        on right: 8 96
    next_int (66)
        on left: 42 43
        on right: 37 43
    next_double (67)
        on left: 44 45
        on right: 38 45
    next_char (68)
        on left: 46 47
        on right: 39 47
    next_bool (69)
        on left: 48 49
        on right: 40 49
    next_string (70)
        on left: 50 51
        on right: 41 51
    int_init <sval> (71)
        on left: 52
        on right: 37 43
    double_init <sval> (72)
        on left: 53
        on right: 38 45
    char_init <sval> (73)
        on left: 54
        on right: 39 47
    bool_init <sval> (74)
        on left: 55
        on right: 40 49
    string_init <sval> (75)
        on left: 56
        on right: 41 51
    variable_assignment <sval> (76)
        on left: 57
        on right: 10 91 97
    expression <ival> (77)
        on left: 58 59 60 61 62 63 64 65
        on right: 52 57 60 61 62 63 64 65
    variable_type <sval> (78)
        on left: 66 67 68 69 70
        on right: 77 82 103
    variable_value <ival> (79)
        on left: 71 72 73 74 75
        on right: 58 88 103
    functions (80)
        on left: 76 77
        on right: 5
    function_visibility <ival> (81)
        on left: 78 79
        on right: 76 77
    arguments (82)
        on left: 80 81
        on right: 76 77
    parameters (83)
        on left: 82
        on right: 81 84
    arguments_end (84)
        on left: 83 84
        on right: 82
    inside_void_function (85)
        on left: 85 86
        on right: 76
    inside_function (86)
        on left: 87 88
        on right: 77
    inside_brackets (87)
        on left: 89 90 91
        on right: 85 86 87 88 90 100 119 139 141 143
    loops_n_condition (88)
        on left: 92 93 94 95 96 97 98 99
        on right: 90
    for_statement (89)
        on left: 100
        on right: 92
    for_condition (90)
        on left: 101
        on right: 100
    for_variable (91)
        on left: 102 103
        on right: 101
    for_comparison (92)
        on left: 104 105
        on right: 101 112
    comparison_value (93)
        on left: 106 107 108 109 110
        on right: 105
    for_bool_operator (94)
        on left: 111 112
        on right: 105
    for_step (95)
        on left: 113 114
        on right: 101
    step (96)
        on left: 115 116
        on right: 114
    step_value (97)
        on left: 117 118
        on right: 116
    do_while (98)
        on left: 119
        on right: 94
    do_condition (99)
        on left: 120 121 122
        on right: 119 124
    do_bool_operator (100)
        on left: 123 124
        on right: 120
    operand (101)
        on left: 125 126 127 128 129
        on right: 120 144
    switch (102)
        on left: 130
        on right: 93
    case (103)
        on left: 131 132
        on right: 130 131
    switch_value (104)
        on left: 133 134
        on right: 131
    switch_content (105)
        on left: 135 136
        on right: 131 137
    default (106)
        on left: 137 138
        on right: 130
    if (107)
        on left: 139
        on right: 95
    else_if (108)
        on left: 140 141 142
        on right: 139 141
    else (109)
        on left: 143
        on right: 142
    if_condition (110)
        on left: 144 145 146
        on right: 139 141 148
    if_bool_operator (111)
        on left: 147 148
        on right: 144


State 0

    0 $accept: • program $end

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program           go to state 2
    class_identifier  go to state 3


State 1

    3 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    2 program: class_identifier • program

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program           go to state 6
    class_identifier  go to state 3


State 4

    3 class_identifier: PUBLIC CLASS • CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 7


State 5

    0 $accept: program $end •

    $default  accept


State 6

    2 program: class_identifier program •

    $default  reduce using rule 2 (program)


State 7

    3 class_identifier: PUBLIC CLASS CLASS_NAME • CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 8


State 8

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT • class_body CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 9
    PRIVATE     shift, and go to state 10
    CLASS_NAME  shift, and go to state 11
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 19 (visibility)

    class_identifier         go to state 13
    class_body               go to state 14
    class_members            go to state 15
    class_instance           go to state 16
    member_access            go to state 17
    VAR_NAME                 go to state 18
    visibility               go to state 19
    variable_declaration     go to state 20
    variable_initialization  go to state 21
    variable_assignment      go to state 22
    functions                go to state 23
    function_visibility      go to state 24


State 9

    3 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT
   20 visibility: PUBLIC •
   79 function_visibility: PUBLIC •

    CLASS  shift, and go to state 4

    VOID      reduce using rule 79 (function_visibility)
    INT       reduce using rule 20 (visibility)
    INT       [reduce using rule 79 (function_visibility)]
    CHAR      reduce using rule 20 (visibility)
    CHAR      [reduce using rule 79 (function_visibility)]
    DOUBLE    reduce using rule 20 (visibility)
    DOUBLE    [reduce using rule 79 (function_visibility)]
    BOOLEAN   reduce using rule 20 (visibility)
    BOOLEAN   [reduce using rule 79 (function_visibility)]
    STRING    reduce using rule 20 (visibility)
    STRING    [reduce using rule 79 (function_visibility)]
    $default  reduce using rule 20 (visibility)


State 10

   21 visibility: PRIVATE •
   78 function_visibility: PRIVATE •

    VOID      reduce using rule 78 (function_visibility)
    INT       reduce using rule 21 (visibility)
    INT       [reduce using rule 78 (function_visibility)]
    CHAR      reduce using rule 21 (visibility)
    CHAR      [reduce using rule 78 (function_visibility)]
    DOUBLE    reduce using rule 21 (visibility)
    DOUBLE    [reduce using rule 78 (function_visibility)]
    BOOLEAN   reduce using rule 21 (visibility)
    BOOLEAN   [reduce using rule 78 (function_visibility)]
    STRING    reduce using rule 21 (visibility)
    STRING    [reduce using rule 78 (function_visibility)]
    $default  reduce using rule 21 (visibility)


State 11

   13 class_instance: CLASS_NAME • IDENT EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT
   18 VAR_NAME: CLASS_NAME •

    IDENT  shift, and go to state 25

    $default  reduce using rule 18 (VAR_NAME)


State 12

   14 member_access: IDENT • DOT IDENT parenthesis
   17 VAR_NAME: IDENT •

    DOT  shift, and go to state 26

    $default  reduce using rule 17 (VAR_NAME)


State 13

    7 class_body: class_identifier • class_body

    PUBLIC      shift, and go to state 9
    PRIVATE     shift, and go to state 10
    CLASS_NAME  shift, and go to state 11
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 19 (visibility)

    class_identifier         go to state 13
    class_body               go to state 27
    class_members            go to state 15
    class_instance           go to state 16
    member_access            go to state 17
    VAR_NAME                 go to state 18
    visibility               go to state 19
    variable_declaration     go to state 20
    variable_initialization  go to state 21
    variable_assignment      go to state 22
    functions                go to state 23
    function_visibility      go to state 24


State 14

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 28


State 15

    6 class_body: class_members • class_body

    PUBLIC      shift, and go to state 9
    PRIVATE     shift, and go to state 10
    CLASS_NAME  shift, and go to state 11
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 19 (visibility)

    class_identifier         go to state 13
    class_body               go to state 29
    class_members            go to state 15
    class_instance           go to state 16
    member_access            go to state 17
    VAR_NAME                 go to state 18
    visibility               go to state 19
    variable_declaration     go to state 20
    variable_initialization  go to state 21
    variable_assignment      go to state 22
    functions                go to state 23
    function_visibility      go to state 24


State 16

   12 class_members: class_instance • SEMICOLON

    SEMICOLON  shift, and go to state 30


State 17

   11 class_members: member_access • SEMICOLON

    SEMICOLON  shift, and go to state 31


State 18

   57 variable_assignment: VAR_NAME • EQUAL_SIGN expression

    EQUAL_SIGN  shift, and go to state 32


State 19

   22 variable_declaration: visibility • INT VAR_NAME dnext_int
   23                     | visibility • DOUBLE VAR_NAME dnext_double
   24                     | visibility • CHAR VAR_NAME dnext_char
   25                     | visibility • BOOLEAN VAR_NAME dnext_bool
   26                     | visibility • STRING VAR_NAME dnext_string
   37 variable_initialization: visibility • INT int_init next_int
   38                        | visibility • DOUBLE double_init next_double
   39                        | visibility • CHAR char_init next_char
   40                        | visibility • BOOLEAN bool_init next_bool
   41                        | visibility • STRING string_init next_string

    INT      shift, and go to state 33
    CHAR     shift, and go to state 34
    DOUBLE   shift, and go to state 35
    BOOLEAN  shift, and go to state 36
    STRING   shift, and go to state 37


State 20

    9 class_members: variable_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 38


State 21

    8 class_members: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 39


State 22

   10 class_members: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 23

    5 class_body: functions • class_body

    PUBLIC      shift, and go to state 9
    PRIVATE     shift, and go to state 10
    CLASS_NAME  shift, and go to state 11
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 19 (visibility)

    class_identifier         go to state 13
    class_body               go to state 41
    class_members            go to state 15
    class_instance           go to state 16
    member_access            go to state 17
    VAR_NAME                 go to state 18
    visibility               go to state 19
    variable_declaration     go to state 20
    variable_initialization  go to state 21
    variable_assignment      go to state 22
    functions                go to state 23
    function_visibility      go to state 24


State 24

   76 functions: function_visibility • VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   77          | function_visibility • variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VOID     shift, and go to state 42
    INT      shift, and go to state 43
    CHAR     shift, and go to state 44
    DOUBLE   shift, and go to state 45
    BOOLEAN  shift, and go to state 46
    STRING   shift, and go to state 47

    variable_type  go to state 48


State 25

   13 class_instance: CLASS_NAME IDENT • EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    EQUAL_SIGN  shift, and go to state 49


State 26

   14 member_access: IDENT DOT • IDENT parenthesis

    IDENT  shift, and go to state 50


State 27

    7 class_body: class_identifier class_body •

    $default  reduce using rule 7 (class_body)


State 28

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT •

    $default  reduce using rule 3 (class_identifier)


State 29

    6 class_body: class_members class_body •

    $default  reduce using rule 6 (class_body)


State 30

   12 class_members: class_instance SEMICOLON •

    $default  reduce using rule 12 (class_members)


State 31

   11 class_members: member_access SEMICOLON •

    $default  reduce using rule 11 (class_members)


State 32

   57 variable_assignment: VAR_NAME EQUAL_SIGN • expression

    BRACKET_LEFT   shift, and go to state 51
    MINUS          shift, and go to state 52
    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    VAR_NAME        go to state 60
    expression      go to state 61
    variable_value  go to state 62


State 33

   22 variable_declaration: visibility INT • VAR_NAME dnext_int
   37 variable_initialization: visibility INT • int_init next_int

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 63
    int_init  go to state 64


State 34

   24 variable_declaration: visibility CHAR • VAR_NAME dnext_char
   39 variable_initialization: visibility CHAR • char_init next_char

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME   go to state 65
    char_init  go to state 66


State 35

   23 variable_declaration: visibility DOUBLE • VAR_NAME dnext_double
   38 variable_initialization: visibility DOUBLE • double_init next_double

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME     go to state 67
    double_init  go to state 68


State 36

   25 variable_declaration: visibility BOOLEAN • VAR_NAME dnext_bool
   40 variable_initialization: visibility BOOLEAN • bool_init next_bool

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME   go to state 69
    bool_init  go to state 70


State 37

   26 variable_declaration: visibility STRING • VAR_NAME dnext_string
   41 variable_initialization: visibility STRING • string_init next_string

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME     go to state 71
    string_init  go to state 72


State 38

    9 class_members: variable_declaration SEMICOLON •

    $default  reduce using rule 9 (class_members)


State 39

    8 class_members: variable_initialization SEMICOLON •

    $default  reduce using rule 8 (class_members)


State 40

   10 class_members: variable_assignment SEMICOLON •

    $default  reduce using rule 10 (class_members)


State 41

    5 class_body: functions class_body •

    $default  reduce using rule 5 (class_body)


State 42

   76 functions: function_visibility VOID • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 73


State 43

   66 variable_type: INT •

    $default  reduce using rule 66 (variable_type)


State 44

   68 variable_type: CHAR •

    $default  reduce using rule 68 (variable_type)


State 45

   67 variable_type: DOUBLE •

    $default  reduce using rule 67 (variable_type)


State 46

   69 variable_type: BOOLEAN •

    $default  reduce using rule 69 (variable_type)


State 47

   70 variable_type: STRING •

    $default  reduce using rule 70 (variable_type)


State 48

   77 functions: function_visibility variable_type • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 74


State 49

   13 class_instance: CLASS_NAME IDENT EQUAL_SIGN • NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    NEW  shift, and go to state 75


State 50

   14 member_access: IDENT DOT IDENT • parenthesis

    BRACKET_LEFT  shift, and go to state 76

    $default  reduce using rule 15 (parenthesis)

    parenthesis  go to state 77


State 51

   64 expression: BRACKET_LEFT • expression BRACKET_RIGHT

    BRACKET_LEFT   shift, and go to state 51
    MINUS          shift, and go to state 52
    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    VAR_NAME        go to state 60
    expression      go to state 78
    variable_value  go to state 62


State 52

   65 expression: MINUS • expression

    BRACKET_LEFT   shift, and go to state 51
    MINUS          shift, and go to state 52
    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    VAR_NAME        go to state 60
    expression      go to state 79
    variable_value  go to state 62


State 53

   18 VAR_NAME: CLASS_NAME •

    $default  reduce using rule 18 (VAR_NAME)


State 54

   17 VAR_NAME: IDENT •

    $default  reduce using rule 17 (VAR_NAME)


State 55

   71 variable_value: INT_VALUE •

    $default  reduce using rule 71 (variable_value)


State 56

   72 variable_value: CHAR_VALUE •

    $default  reduce using rule 72 (variable_value)


State 57

   73 variable_value: DOUBLE_VALUE •

    $default  reduce using rule 73 (variable_value)


State 58

   74 variable_value: BOOLEAN_VALUE •

    $default  reduce using rule 74 (variable_value)


State 59

   75 variable_value: STRING_VALUE •

    $default  reduce using rule 75 (variable_value)


State 60

   59 expression: VAR_NAME •

    $default  reduce using rule 59 (expression)


State 61

   57 variable_assignment: VAR_NAME EQUAL_SIGN expression •
   60 expression: expression • PLUS expression
   61           | expression • MINUS expression
   62           | expression • MULTIPLY expression
   63           | expression • DIVIDE expression

    PLUS      shift, and go to state 80
    MINUS     shift, and go to state 81
    MULTIPLY  shift, and go to state 82
    DIVIDE    shift, and go to state 83

    $default  reduce using rule 57 (variable_assignment)


State 62

   58 expression: variable_value •

    $default  reduce using rule 58 (expression)


State 63

   22 variable_declaration: visibility INT VAR_NAME • dnext_int
   52 int_init: VAR_NAME • EQUAL_SIGN expression

    EQUAL_SIGN  shift, and go to state 84
    COMMA       shift, and go to state 85

    $default  reduce using rule 27 (dnext_int)

    dnext_int  go to state 86


State 64

   37 variable_initialization: visibility INT int_init • next_int

    COMMA  shift, and go to state 87

    $default  reduce using rule 42 (next_int)

    next_int  go to state 88


State 65

   24 variable_declaration: visibility CHAR VAR_NAME • dnext_char
   54 char_init: VAR_NAME • EQUAL_SIGN CHAR_VALUE

    EQUAL_SIGN  shift, and go to state 89
    COMMA       shift, and go to state 90

    $default  reduce using rule 31 (dnext_char)

    dnext_char  go to state 91


State 66

   39 variable_initialization: visibility CHAR char_init • next_char

    COMMA  shift, and go to state 92

    $default  reduce using rule 46 (next_char)

    next_char  go to state 93


State 67

   23 variable_declaration: visibility DOUBLE VAR_NAME • dnext_double
   53 double_init: VAR_NAME • EQUAL_SIGN DOUBLE_VALUE

    EQUAL_SIGN  shift, and go to state 94
    COMMA       shift, and go to state 95

    $default  reduce using rule 29 (dnext_double)

    dnext_double  go to state 96


State 68

   38 variable_initialization: visibility DOUBLE double_init • next_double

    COMMA  shift, and go to state 97

    $default  reduce using rule 44 (next_double)

    next_double  go to state 98


State 69

   25 variable_declaration: visibility BOOLEAN VAR_NAME • dnext_bool
   55 bool_init: VAR_NAME • EQUAL_SIGN BOOLEAN_VALUE

    EQUAL_SIGN  shift, and go to state 99
    COMMA       shift, and go to state 100

    $default  reduce using rule 33 (dnext_bool)

    dnext_bool  go to state 101


State 70

   40 variable_initialization: visibility BOOLEAN bool_init • next_bool

    COMMA  shift, and go to state 102

    $default  reduce using rule 48 (next_bool)

    next_bool  go to state 103


State 71

   26 variable_declaration: visibility STRING VAR_NAME • dnext_string
   56 string_init: VAR_NAME • EQUAL_SIGN STRING_VALUE

    EQUAL_SIGN  shift, and go to state 104
    COMMA       shift, and go to state 105

    $default  reduce using rule 35 (dnext_string)

    dnext_string  go to state 106


State 72

   41 variable_initialization: visibility STRING string_init • next_string

    COMMA  shift, and go to state 107

    $default  reduce using rule 50 (next_string)

    next_string  go to state 108


State 73

   76 functions: function_visibility VOID VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 109


State 74

   77 functions: function_visibility variable_type VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 110


State 75

   13 class_instance: CLASS_NAME IDENT EQUAL_SIGN NEW • CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 111


State 76

   16 parenthesis: BRACKET_LEFT • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 112


State 77

   14 member_access: IDENT DOT IDENT parenthesis •

    $default  reduce using rule 14 (member_access)


State 78

   60 expression: expression • PLUS expression
   61           | expression • MINUS expression
   62           | expression • MULTIPLY expression
   63           | expression • DIVIDE expression
   64           | BRACKET_LEFT expression • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 113
    PLUS           shift, and go to state 80
    MINUS          shift, and go to state 81
    MULTIPLY       shift, and go to state 82
    DIVIDE         shift, and go to state 83


State 79

   60 expression: expression • PLUS expression
   61           | expression • MINUS expression
   62           | expression • MULTIPLY expression
   63           | expression • DIVIDE expression
   65           | MINUS expression •

    $default  reduce using rule 65 (expression)


State 80

   60 expression: expression PLUS • expression

    BRACKET_LEFT   shift, and go to state 51
    MINUS          shift, and go to state 52
    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    VAR_NAME        go to state 60
    expression      go to state 114
    variable_value  go to state 62


State 81

   61 expression: expression MINUS • expression

    BRACKET_LEFT   shift, and go to state 51
    MINUS          shift, and go to state 52
    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    VAR_NAME        go to state 60
    expression      go to state 115
    variable_value  go to state 62


State 82

   62 expression: expression MULTIPLY • expression

    BRACKET_LEFT   shift, and go to state 51
    MINUS          shift, and go to state 52
    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    VAR_NAME        go to state 60
    expression      go to state 116
    variable_value  go to state 62


State 83

   63 expression: expression DIVIDE • expression

    BRACKET_LEFT   shift, and go to state 51
    MINUS          shift, and go to state 52
    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    VAR_NAME        go to state 60
    expression      go to state 117
    variable_value  go to state 62


State 84

   52 int_init: VAR_NAME EQUAL_SIGN • expression

    BRACKET_LEFT   shift, and go to state 51
    MINUS          shift, and go to state 52
    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    VAR_NAME        go to state 60
    expression      go to state 118
    variable_value  go to state 62


State 85

   28 dnext_int: COMMA • VAR_NAME dnext_int

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 119


State 86

   22 variable_declaration: visibility INT VAR_NAME dnext_int •

    $default  reduce using rule 22 (variable_declaration)


State 87

   43 next_int: COMMA • int_init next_int

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 120
    int_init  go to state 121


State 88

   37 variable_initialization: visibility INT int_init next_int •

    $default  reduce using rule 37 (variable_initialization)


State 89

   54 char_init: VAR_NAME EQUAL_SIGN • CHAR_VALUE

    CHAR_VALUE  shift, and go to state 122


State 90

   32 dnext_char: COMMA • VAR_NAME dnext_char

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 123


State 91

   24 variable_declaration: visibility CHAR VAR_NAME dnext_char •

    $default  reduce using rule 24 (variable_declaration)


State 92

   47 next_char: COMMA • char_init next_char

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME   go to state 124
    char_init  go to state 125


State 93

   39 variable_initialization: visibility CHAR char_init next_char •

    $default  reduce using rule 39 (variable_initialization)


State 94

   53 double_init: VAR_NAME EQUAL_SIGN • DOUBLE_VALUE

    DOUBLE_VALUE  shift, and go to state 126


State 95

   30 dnext_double: COMMA • VAR_NAME dnext_double

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 127


State 96

   23 variable_declaration: visibility DOUBLE VAR_NAME dnext_double •

    $default  reduce using rule 23 (variable_declaration)


State 97

   45 next_double: COMMA • double_init next_double

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME     go to state 128
    double_init  go to state 129


State 98

   38 variable_initialization: visibility DOUBLE double_init next_double •

    $default  reduce using rule 38 (variable_initialization)


State 99

   55 bool_init: VAR_NAME EQUAL_SIGN • BOOLEAN_VALUE

    BOOLEAN_VALUE  shift, and go to state 130


State 100

   34 dnext_bool: COMMA • VAR_NAME dnext_bool

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 131


State 101

   25 variable_declaration: visibility BOOLEAN VAR_NAME dnext_bool •

    $default  reduce using rule 25 (variable_declaration)


State 102

   49 next_bool: COMMA • bool_init next_bool

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME   go to state 132
    bool_init  go to state 133


State 103

   40 variable_initialization: visibility BOOLEAN bool_init next_bool •

    $default  reduce using rule 40 (variable_initialization)


State 104

   56 string_init: VAR_NAME EQUAL_SIGN • STRING_VALUE

    STRING_VALUE  shift, and go to state 134


State 105

   36 dnext_string: COMMA • VAR_NAME dnext_string

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 135


State 106

   26 variable_declaration: visibility STRING VAR_NAME dnext_string •

    $default  reduce using rule 26 (variable_declaration)


State 107

   51 next_string: COMMA • string_init next_string

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME     go to state 136
    string_init  go to state 137


State 108

   41 variable_initialization: visibility STRING string_init next_string •

    $default  reduce using rule 41 (variable_initialization)


State 109

   76 functions: function_visibility VOID VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 43
    CHAR     shift, and go to state 44
    DOUBLE   shift, and go to state 45
    BOOLEAN  shift, and go to state 46
    STRING   shift, and go to state 47

    $default  reduce using rule 80 (arguments)

    variable_type  go to state 138
    arguments      go to state 139
    parameters     go to state 140


State 110

   77 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 43
    CHAR     shift, and go to state 44
    DOUBLE   shift, and go to state 45
    BOOLEAN  shift, and go to state 46
    STRING   shift, and go to state 47

    $default  reduce using rule 80 (arguments)

    variable_type  go to state 138
    arguments      go to state 141
    parameters     go to state 140


State 111

   13 class_instance: CLASS_NAME IDENT EQUAL_SIGN NEW CLASS_NAME • BRACKET_LEFT BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 142


State 112

   16 parenthesis: BRACKET_LEFT BRACKET_RIGHT •

    $default  reduce using rule 16 (parenthesis)


State 113

   64 expression: BRACKET_LEFT expression BRACKET_RIGHT •

    $default  reduce using rule 64 (expression)


State 114

   60 expression: expression • PLUS expression
   60           | expression PLUS expression •
   61           | expression • MINUS expression
   62           | expression • MULTIPLY expression
   63           | expression • DIVIDE expression

    MINUS     shift, and go to state 81
    MULTIPLY  shift, and go to state 82
    DIVIDE    shift, and go to state 83

    $default  reduce using rule 60 (expression)


State 115

   60 expression: expression • PLUS expression
   61           | expression • MINUS expression
   61           | expression MINUS expression •
   62           | expression • MULTIPLY expression
   63           | expression • DIVIDE expression

    MULTIPLY  shift, and go to state 82
    DIVIDE    shift, and go to state 83

    $default  reduce using rule 61 (expression)


State 116

   60 expression: expression • PLUS expression
   61           | expression • MINUS expression
   62           | expression • MULTIPLY expression
   62           | expression MULTIPLY expression •
   63           | expression • DIVIDE expression

    DIVIDE  shift, and go to state 83

    $default  reduce using rule 62 (expression)


State 117

   60 expression: expression • PLUS expression
   61           | expression • MINUS expression
   62           | expression • MULTIPLY expression
   63           | expression • DIVIDE expression
   63           | expression DIVIDE expression •

    $default  reduce using rule 63 (expression)


State 118

   52 int_init: VAR_NAME EQUAL_SIGN expression •
   60 expression: expression • PLUS expression
   61           | expression • MINUS expression
   62           | expression • MULTIPLY expression
   63           | expression • DIVIDE expression

    PLUS      shift, and go to state 80
    MINUS     shift, and go to state 81
    MULTIPLY  shift, and go to state 82
    DIVIDE    shift, and go to state 83

    $default  reduce using rule 52 (int_init)


State 119

   28 dnext_int: COMMA VAR_NAME • dnext_int

    COMMA  shift, and go to state 85

    $default  reduce using rule 27 (dnext_int)

    dnext_int  go to state 143


State 120

   52 int_init: VAR_NAME • EQUAL_SIGN expression

    EQUAL_SIGN  shift, and go to state 84


State 121

   43 next_int: COMMA int_init • next_int

    COMMA  shift, and go to state 87

    $default  reduce using rule 42 (next_int)

    next_int  go to state 144


State 122

   54 char_init: VAR_NAME EQUAL_SIGN CHAR_VALUE •

    $default  reduce using rule 54 (char_init)


State 123

   32 dnext_char: COMMA VAR_NAME • dnext_char

    COMMA  shift, and go to state 90

    $default  reduce using rule 31 (dnext_char)

    dnext_char  go to state 145


State 124

   54 char_init: VAR_NAME • EQUAL_SIGN CHAR_VALUE

    EQUAL_SIGN  shift, and go to state 89


State 125

   47 next_char: COMMA char_init • next_char

    COMMA  shift, and go to state 92

    $default  reduce using rule 46 (next_char)

    next_char  go to state 146


State 126

   53 double_init: VAR_NAME EQUAL_SIGN DOUBLE_VALUE •

    $default  reduce using rule 53 (double_init)


State 127

   30 dnext_double: COMMA VAR_NAME • dnext_double

    COMMA  shift, and go to state 95

    $default  reduce using rule 29 (dnext_double)

    dnext_double  go to state 147


State 128

   53 double_init: VAR_NAME • EQUAL_SIGN DOUBLE_VALUE

    EQUAL_SIGN  shift, and go to state 94


State 129

   45 next_double: COMMA double_init • next_double

    COMMA  shift, and go to state 97

    $default  reduce using rule 44 (next_double)

    next_double  go to state 148


State 130

   55 bool_init: VAR_NAME EQUAL_SIGN BOOLEAN_VALUE •

    $default  reduce using rule 55 (bool_init)


State 131

   34 dnext_bool: COMMA VAR_NAME • dnext_bool

    COMMA  shift, and go to state 100

    $default  reduce using rule 33 (dnext_bool)

    dnext_bool  go to state 149


State 132

   55 bool_init: VAR_NAME • EQUAL_SIGN BOOLEAN_VALUE

    EQUAL_SIGN  shift, and go to state 99


State 133

   49 next_bool: COMMA bool_init • next_bool

    COMMA  shift, and go to state 102

    $default  reduce using rule 48 (next_bool)

    next_bool  go to state 150


State 134

   56 string_init: VAR_NAME EQUAL_SIGN STRING_VALUE •

    $default  reduce using rule 56 (string_init)


State 135

   36 dnext_string: COMMA VAR_NAME • dnext_string

    COMMA  shift, and go to state 105

    $default  reduce using rule 35 (dnext_string)

    dnext_string  go to state 151


State 136

   56 string_init: VAR_NAME • EQUAL_SIGN STRING_VALUE

    EQUAL_SIGN  shift, and go to state 104


State 137

   51 next_string: COMMA string_init • next_string

    COMMA  shift, and go to state 107

    $default  reduce using rule 50 (next_string)

    next_string  go to state 152


State 138

   82 parameters: variable_type • VAR_NAME arguments_end

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 153


State 139

   76 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 154


State 140

   81 arguments: parameters •

    $default  reduce using rule 81 (arguments)


State 141

   77 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 155


State 142

   13 class_instance: CLASS_NAME IDENT EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 156


State 143

   28 dnext_int: COMMA VAR_NAME dnext_int •

    $default  reduce using rule 28 (dnext_int)


State 144

   43 next_int: COMMA int_init next_int •

    $default  reduce using rule 43 (next_int)


State 145

   32 dnext_char: COMMA VAR_NAME dnext_char •

    $default  reduce using rule 32 (dnext_char)


State 146

   47 next_char: COMMA char_init next_char •

    $default  reduce using rule 47 (next_char)


State 147

   30 dnext_double: COMMA VAR_NAME dnext_double •

    $default  reduce using rule 30 (dnext_double)


State 148

   45 next_double: COMMA double_init next_double •

    $default  reduce using rule 45 (next_double)


State 149

   34 dnext_bool: COMMA VAR_NAME dnext_bool •

    $default  reduce using rule 34 (dnext_bool)


State 150

   49 next_bool: COMMA bool_init next_bool •

    $default  reduce using rule 49 (next_bool)


State 151

   36 dnext_string: COMMA VAR_NAME dnext_string •

    $default  reduce using rule 36 (dnext_string)


State 152

   51 next_string: COMMA string_init next_string •

    $default  reduce using rule 51 (next_string)


State 153

   82 parameters: variable_type VAR_NAME • arguments_end

    COMMA  shift, and go to state 157

    $default  reduce using rule 83 (arguments_end)

    arguments_end  go to state 158


State 154

   76 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 159


State 155

   77 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 160


State 156

   13 class_instance: CLASS_NAME IDENT EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT •

    $default  reduce using rule 13 (class_instance)


State 157

   84 arguments_end: COMMA • parameters

    INT      shift, and go to state 43
    CHAR     shift, and go to state 44
    DOUBLE   shift, and go to state 45
    BOOLEAN  shift, and go to state 46
    STRING   shift, and go to state 47

    variable_type  go to state 138
    parameters     go to state 161


State 158

   82 parameters: variable_type VAR_NAME arguments_end •

    $default  reduce using rule 82 (parameters)


State 159

   76 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_void_function CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 162
    PRIVATE     shift, and go to state 163
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 164
    FOR         shift, and go to state 165
    DO          shift, and go to state 166
    SWITCH      shift, and go to state 167
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 89 (inside_brackets)
    RETURN               reduce using rule 89 (inside_brackets)
    $default             reduce using rule 19 (visibility)

    class_instance           go to state 168
    member_access            go to state 169
    VAR_NAME                 go to state 18
    visibility               go to state 170
    variable_initialization  go to state 171
    variable_assignment      go to state 172
    inside_void_function     go to state 173
    inside_brackets          go to state 174
    loops_n_condition        go to state 175
    for_statement            go to state 176
    do_while                 go to state 177
    switch                   go to state 178
    if                       go to state 179


State 160

   77 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_function CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 162
    PRIVATE     shift, and go to state 163
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 164
    FOR         shift, and go to state 165
    DO          shift, and go to state 166
    SWITCH      shift, and go to state 167
    IDENT       shift, and go to state 12

    RETURN    reduce using rule 89 (inside_brackets)
    $default  reduce using rule 19 (visibility)

    class_instance           go to state 168
    member_access            go to state 169
    VAR_NAME                 go to state 18
    visibility               go to state 170
    variable_initialization  go to state 171
    variable_assignment      go to state 172
    inside_function          go to state 180
    inside_brackets          go to state 181
    loops_n_condition        go to state 175
    for_statement            go to state 176
    do_while                 go to state 177
    switch                   go to state 178
    if                       go to state 179


State 161

   84 arguments_end: COMMA parameters •

    $default  reduce using rule 84 (arguments_end)


State 162

   20 visibility: PUBLIC •

    $default  reduce using rule 20 (visibility)


State 163

   21 visibility: PRIVATE •

    $default  reduce using rule 21 (visibility)


State 164

  139 if: IF • BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT  shift, and go to state 182


State 165

  100 for_statement: FOR • BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 183


State 166

  119 do_while: DO • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_LEFT  shift, and go to state 184


State 167

  130 switch: SWITCH • BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 185


State 168

   98 loops_n_condition: class_instance • SEMICOLON

    SEMICOLON  shift, and go to state 186


State 169

   99 loops_n_condition: member_access • SEMICOLON

    SEMICOLON  shift, and go to state 187


State 170

   37 variable_initialization: visibility • INT int_init next_int
   38                        | visibility • DOUBLE double_init next_double
   39                        | visibility • CHAR char_init next_char
   40                        | visibility • BOOLEAN bool_init next_bool
   41                        | visibility • STRING string_init next_string

    INT      shift, and go to state 188
    CHAR     shift, and go to state 189
    DOUBLE   shift, and go to state 190
    BOOLEAN  shift, and go to state 191
    STRING   shift, and go to state 192


State 171

   96 loops_n_condition: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 193


State 172

   91 inside_brackets: variable_assignment • SEMICOLON
   97 loops_n_condition: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 194


State 173

   76 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 195


State 174

   85 inside_void_function: inside_brackets •
   86                     | inside_brackets • RETURN SEMICOLON

    RETURN  shift, and go to state 196

    $default  reduce using rule 85 (inside_void_function)


State 175

   90 inside_brackets: loops_n_condition • inside_brackets

    PUBLIC      shift, and go to state 162
    PRIVATE     shift, and go to state 163
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 164
    FOR         shift, and go to state 165
    DO          shift, and go to state 166
    SWITCH      shift, and go to state 167
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 89 (inside_brackets)
    RETURN               reduce using rule 89 (inside_brackets)
    $default             reduce using rule 19 (visibility)

    class_instance           go to state 168
    member_access            go to state 169
    VAR_NAME                 go to state 18
    visibility               go to state 170
    variable_initialization  go to state 171
    variable_assignment      go to state 172
    inside_brackets          go to state 197
    loops_n_condition        go to state 175
    for_statement            go to state 176
    do_while                 go to state 177
    switch                   go to state 178
    if                       go to state 179


State 176

   92 loops_n_condition: for_statement •

    $default  reduce using rule 92 (loops_n_condition)


State 177

   94 loops_n_condition: do_while •

    $default  reduce using rule 94 (loops_n_condition)


State 178

   93 loops_n_condition: switch •

    $default  reduce using rule 93 (loops_n_condition)


State 179

   95 loops_n_condition: if •

    $default  reduce using rule 95 (loops_n_condition)


State 180

   77 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 198


State 181

   87 inside_function: inside_brackets • RETURN VAR_NAME SEMICOLON
   88                | inside_brackets • RETURN variable_value SEMICOLON

    RETURN  shift, and go to state 199


State 182

  139 if: IF BRACKET_LEFT • if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 200
    CHAR_VALUE     shift, and go to state 201
    DOUBLE_VALUE   shift, and go to state 202
    BOOLEAN_VALUE  shift, and go to state 203

    VAR_NAME      go to state 204
    operand       go to state 205
    if_condition  go to state 206


State 183

  100 for_statement: FOR BRACKET_LEFT • for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    INT      shift, and go to state 43
    CHAR     shift, and go to state 44
    DOUBLE   shift, and go to state 45
    BOOLEAN  shift, and go to state 46
    STRING   shift, and go to state 47

    $default  reduce using rule 102 (for_variable)

    variable_type  go to state 207
    for_condition  go to state 208
    for_variable   go to state 209


State 184

  119 do_while: DO CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    PUBLIC      shift, and go to state 162
    PRIVATE     shift, and go to state 163
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 164
    FOR         shift, and go to state 165
    DO          shift, and go to state 166
    SWITCH      shift, and go to state 167
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 89 (inside_brackets)
    $default             reduce using rule 19 (visibility)

    class_instance           go to state 168
    member_access            go to state 169
    VAR_NAME                 go to state 18
    visibility               go to state 170
    variable_initialization  go to state 171
    variable_assignment      go to state 172
    inside_brackets          go to state 210
    loops_n_condition        go to state 175
    for_statement            go to state 176
    do_while                 go to state 177
    switch                   go to state 178
    if                       go to state 179


State 185

  130 switch: SWITCH BRACKET_LEFT • VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 211


State 186

   98 loops_n_condition: class_instance SEMICOLON •

    $default  reduce using rule 98 (loops_n_condition)


State 187

   99 loops_n_condition: member_access SEMICOLON •

    $default  reduce using rule 99 (loops_n_condition)


State 188

   37 variable_initialization: visibility INT • int_init next_int

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 120
    int_init  go to state 64


State 189

   39 variable_initialization: visibility CHAR • char_init next_char

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME   go to state 124
    char_init  go to state 66


State 190

   38 variable_initialization: visibility DOUBLE • double_init next_double

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME     go to state 128
    double_init  go to state 68


State 191

   40 variable_initialization: visibility BOOLEAN • bool_init next_bool

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME   go to state 132
    bool_init  go to state 70


State 192

   41 variable_initialization: visibility STRING • string_init next_string

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME     go to state 136
    string_init  go to state 72


State 193

   96 loops_n_condition: variable_initialization SEMICOLON •

    $default  reduce using rule 96 (loops_n_condition)


State 194

   91 inside_brackets: variable_assignment SEMICOLON •
   97 loops_n_condition: variable_assignment SEMICOLON •

    CURLY_BRACKET_RIGHT  reduce using rule 91 (inside_brackets)
    CURLY_BRACKET_RIGHT  [reduce using rule 97 (loops_n_condition)]
    RETURN               reduce using rule 91 (inside_brackets)
    RETURN               [reduce using rule 97 (loops_n_condition)]
    $default             reduce using rule 97 (loops_n_condition)


State 195

   76 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 76 (functions)


State 196

   86 inside_void_function: inside_brackets RETURN • SEMICOLON

    SEMICOLON  shift, and go to state 212


State 197

   90 inside_brackets: loops_n_condition inside_brackets •

    $default  reduce using rule 90 (inside_brackets)


State 198

   77 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 77 (functions)


State 199

   87 inside_function: inside_brackets RETURN • VAR_NAME SEMICOLON
   88                | inside_brackets RETURN • variable_value SEMICOLON

    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    VAR_NAME        go to state 213
    variable_value  go to state 214


State 200

  126 operand: INT_VALUE •

    $default  reduce using rule 126 (operand)


State 201

  128 operand: CHAR_VALUE •

    $default  reduce using rule 128 (operand)


State 202

  127 operand: DOUBLE_VALUE •

    $default  reduce using rule 127 (operand)


State 203

  129 operand: BOOLEAN_VALUE •
  145 if_condition: BOOLEAN_VALUE •

    BRACKET_RIGHT  reduce using rule 145 (if_condition)
    $default       reduce using rule 129 (operand)


State 204

  125 operand: VAR_NAME •
  146 if_condition: VAR_NAME •

    BRACKET_RIGHT  reduce using rule 146 (if_condition)
    $default       reduce using rule 125 (operand)


State 205

  144 if_condition: operand • CONDITION_SYMBOL operand if_bool_operator

    CONDITION_SYMBOL  shift, and go to state 215


State 206

  139 if: IF BRACKET_LEFT if_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_RIGHT  shift, and go to state 216


State 207

  103 for_variable: variable_type • VAR_NAME EQUAL_SIGN variable_value

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    VAR_NAME  go to state 217


State 208

  100 for_statement: FOR BRACKET_LEFT for_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 218


State 209

  101 for_condition: for_variable • SEMICOLON for_comparison SEMICOLON for_step

    SEMICOLON  shift, and go to state 219


State 210

  119 do_while: DO CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_RIGHT  shift, and go to state 220


State 211

  130 switch: SWITCH BRACKET_LEFT VAR_NAME • BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 221


State 212

   86 inside_void_function: inside_brackets RETURN SEMICOLON •

    $default  reduce using rule 86 (inside_void_function)


State 213

   87 inside_function: inside_brackets RETURN VAR_NAME • SEMICOLON

    SEMICOLON  shift, and go to state 222


State 214

   88 inside_function: inside_brackets RETURN variable_value • SEMICOLON

    SEMICOLON  shift, and go to state 223


State 215

  144 if_condition: operand CONDITION_SYMBOL • operand if_bool_operator

    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 200
    CHAR_VALUE     shift, and go to state 201
    DOUBLE_VALUE   shift, and go to state 202
    BOOLEAN_VALUE  shift, and go to state 224

    VAR_NAME  go to state 225
    operand   go to state 226


State 216

  139 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_LEFT  shift, and go to state 227


State 217

  103 for_variable: variable_type VAR_NAME • EQUAL_SIGN variable_value

    EQUAL_SIGN  shift, and go to state 228


State 218

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 229


State 219

  101 for_condition: for_variable SEMICOLON • for_comparison SEMICOLON for_step

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    $default  reduce using rule 104 (for_comparison)

    VAR_NAME        go to state 230
    for_comparison  go to state 231


State 220

  119 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    WHILE  shift, and go to state 232


State 221

  130 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT • CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 233


State 222

   87 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON •

    $default  reduce using rule 87 (inside_function)


State 223

   88 inside_function: inside_brackets RETURN variable_value SEMICOLON •

    $default  reduce using rule 88 (inside_function)


State 224

  129 operand: BOOLEAN_VALUE •

    $default  reduce using rule 129 (operand)


State 225

  125 operand: VAR_NAME •

    $default  reduce using rule 125 (operand)


State 226

  144 if_condition: operand CONDITION_SYMBOL operand • if_bool_operator

    BOOL_SYMBOL  shift, and go to state 234

    $default  reduce using rule 147 (if_bool_operator)

    if_bool_operator  go to state 235


State 227

  139 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT else_if

    PUBLIC      shift, and go to state 162
    PRIVATE     shift, and go to state 163
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 164
    FOR         shift, and go to state 165
    DO          shift, and go to state 166
    SWITCH      shift, and go to state 167
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 89 (inside_brackets)
    $default             reduce using rule 19 (visibility)

    class_instance           go to state 168
    member_access            go to state 169
    VAR_NAME                 go to state 18
    visibility               go to state 170
    variable_initialization  go to state 171
    variable_assignment      go to state 172
    inside_brackets          go to state 236
    loops_n_condition        go to state 175
    for_statement            go to state 176
    do_while                 go to state 177
    switch                   go to state 178
    if                       go to state 179


State 228

  103 for_variable: variable_type VAR_NAME EQUAL_SIGN • variable_value

    INT_VALUE      shift, and go to state 55
    CHAR_VALUE     shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 58
    STRING_VALUE   shift, and go to state 59

    variable_value  go to state 237


State 229

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 162
    PRIVATE     shift, and go to state 163
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 164
    FOR         shift, and go to state 165
    DO          shift, and go to state 166
    SWITCH      shift, and go to state 167
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 89 (inside_brackets)
    $default             reduce using rule 19 (visibility)

    class_instance           go to state 168
    member_access            go to state 169
    VAR_NAME                 go to state 18
    visibility               go to state 170
    variable_initialization  go to state 171
    variable_assignment      go to state 172
    inside_brackets          go to state 238
    loops_n_condition        go to state 175
    for_statement            go to state 176
    do_while                 go to state 177
    switch                   go to state 178
    if                       go to state 179


State 230

  105 for_comparison: VAR_NAME • CONDITION_SYMBOL comparison_value for_bool_operator

    CONDITION_SYMBOL  shift, and go to state 239


State 231

  101 for_condition: for_variable SEMICOLON for_comparison • SEMICOLON for_step

    SEMICOLON  shift, and go to state 240


State 232

  119 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE • BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    BRACKET_LEFT  shift, and go to state 241


State 233

  130 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT • case default CURLY_BRACKET_RIGHT

    CASE  shift, and go to state 242

    $default  reduce using rule 132 (case)

    case  go to state 243


State 234

  148 if_bool_operator: BOOL_SYMBOL • if_condition

    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 200
    CHAR_VALUE     shift, and go to state 201
    DOUBLE_VALUE   shift, and go to state 202
    BOOLEAN_VALUE  shift, and go to state 203

    VAR_NAME      go to state 204
    operand       go to state 205
    if_condition  go to state 244


State 235

  144 if_condition: operand CONDITION_SYMBOL operand if_bool_operator •

    $default  reduce using rule 144 (if_condition)


State 236

  139 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_RIGHT  shift, and go to state 245


State 237

  103 for_variable: variable_type VAR_NAME EQUAL_SIGN variable_value •

    $default  reduce using rule 103 (for_variable)


State 238

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 246


State 239

  105 for_comparison: VAR_NAME CONDITION_SYMBOL • comparison_value for_bool_operator

    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 247
    CHAR_VALUE     shift, and go to state 248
    DOUBLE_VALUE   shift, and go to state 249
    BOOLEAN_VALUE  shift, and go to state 250

    VAR_NAME          go to state 251
    comparison_value  go to state 252


State 240

  101 for_condition: for_variable SEMICOLON for_comparison SEMICOLON • for_step

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    $default  reduce using rule 113 (for_step)

    VAR_NAME  go to state 253
    for_step  go to state 254


State 241

  119 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT • do_condition BRACKET_RIGHT SEMICOLON

    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 200
    CHAR_VALUE     shift, and go to state 201
    DOUBLE_VALUE   shift, and go to state 202
    BOOLEAN_VALUE  shift, and go to state 255

    VAR_NAME      go to state 256
    do_condition  go to state 257
    operand       go to state 258


State 242

  131 case: CASE • switch_value COLON switch_content case

    INT_VALUE   shift, and go to state 259
    CHAR_VALUE  shift, and go to state 260

    switch_value  go to state 261


State 243

  130 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case • default CURLY_BRACKET_RIGHT

    DEFAULT  shift, and go to state 262

    $default  reduce using rule 138 (default)

    default  go to state 263


State 244

  148 if_bool_operator: BOOL_SYMBOL if_condition •

    $default  reduce using rule 148 (if_bool_operator)


State 245

  139 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • else_if

    ELSE  shift, and go to state 264

    $default  reduce using rule 140 (else_if)

    else_if  go to state 265
    else     go to state 266


State 246

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT •

    $default  reduce using rule 100 (for_statement)


State 247

  106 comparison_value: INT_VALUE •

    $default  reduce using rule 106 (comparison_value)


State 248

  108 comparison_value: CHAR_VALUE •

    $default  reduce using rule 108 (comparison_value)


State 249

  107 comparison_value: DOUBLE_VALUE •

    $default  reduce using rule 107 (comparison_value)


State 250

  109 comparison_value: BOOLEAN_VALUE •

    $default  reduce using rule 109 (comparison_value)


State 251

  110 comparison_value: VAR_NAME •

    $default  reduce using rule 110 (comparison_value)


State 252

  105 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value • for_bool_operator

    BOOL_SYMBOL  shift, and go to state 267

    $default  reduce using rule 111 (for_bool_operator)

    for_bool_operator  go to state 268


State 253

  114 for_step: VAR_NAME • step

    INCREAMENT_DECREAMENT  shift, and go to state 269
    LOOP_STEP              shift, and go to state 270

    step  go to state 271


State 254

  101 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step •

    $default  reduce using rule 101 (for_condition)


State 255

  121 do_condition: BOOLEAN_VALUE •
  129 operand: BOOLEAN_VALUE •

    CONDITION_SYMBOL  reduce using rule 129 (operand)
    $default          reduce using rule 121 (do_condition)


State 256

  122 do_condition: VAR_NAME •
  125 operand: VAR_NAME •

    CONDITION_SYMBOL  reduce using rule 125 (operand)
    $default          reduce using rule 122 (do_condition)


State 257

  119 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition • BRACKET_RIGHT SEMICOLON

    BRACKET_RIGHT  shift, and go to state 272


State 258

  120 do_condition: operand • CONDITION_SYMBOL operand do_bool_operator

    CONDITION_SYMBOL  shift, and go to state 273


State 259

  133 switch_value: INT_VALUE •

    $default  reduce using rule 133 (switch_value)


State 260

  134 switch_value: CHAR_VALUE •

    $default  reduce using rule 134 (switch_value)


State 261

  131 case: CASE switch_value • COLON switch_content case

    COLON  shift, and go to state 274


State 262

  137 default: DEFAULT • COLON switch_content

    COLON  shift, and go to state 275


State 263

  130 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 276


State 264

  141 else_if: ELSE • IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if
  143 else: ELSE • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 277
    IF                  shift, and go to state 278


State 265

  139 if: IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if •

    $default  reduce using rule 139 (if)


State 266

  142 else_if: else •

    $default  reduce using rule 142 (else_if)


State 267

  112 for_bool_operator: BOOL_SYMBOL • for_comparison

    CLASS_NAME  shift, and go to state 53
    IDENT       shift, and go to state 54

    $default  reduce using rule 104 (for_comparison)

    VAR_NAME        go to state 230
    for_comparison  go to state 279


State 268

  105 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value for_bool_operator •

    $default  reduce using rule 105 (for_comparison)


State 269

  115 step: INCREAMENT_DECREAMENT •

    $default  reduce using rule 115 (step)


State 270

  116 step: LOOP_STEP • step_value

    INT_VALUE     shift, and go to state 280
    DOUBLE_VALUE  shift, and go to state 281

    step_value  go to state 282


State 271

  114 for_step: VAR_NAME step •

    $default  reduce using rule 114 (for_step)


State 272

  119 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT • SEMICOLON

    SEMICOLON  shift, and go to state 283


State 273

  120 do_condition: operand CONDITION_SYMBOL • operand do_bool_operator

    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 200
    CHAR_VALUE     shift, and go to state 201
    DOUBLE_VALUE   shift, and go to state 202
    BOOLEAN_VALUE  shift, and go to state 224

    VAR_NAME  go to state 225
    operand   go to state 284


State 274

  131 case: CASE switch_value COLON • switch_content case

    BREAK  shift, and go to state 285

    $default  reduce using rule 135 (switch_content)

    switch_content  go to state 286


State 275

  137 default: DEFAULT COLON • switch_content

    BREAK  shift, and go to state 285

    $default  reduce using rule 135 (switch_content)

    switch_content  go to state 287


State 276

  130 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT •

    $default  reduce using rule 130 (switch)


State 277

  143 else: ELSE CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 162
    PRIVATE     shift, and go to state 163
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 164
    FOR         shift, and go to state 165
    DO          shift, and go to state 166
    SWITCH      shift, and go to state 167
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 89 (inside_brackets)
    $default             reduce using rule 19 (visibility)

    class_instance           go to state 168
    member_access            go to state 169
    VAR_NAME                 go to state 18
    visibility               go to state 170
    variable_initialization  go to state 171
    variable_assignment      go to state 172
    inside_brackets          go to state 288
    loops_n_condition        go to state 175
    for_statement            go to state 176
    do_while                 go to state 177
    switch                   go to state 178
    if                       go to state 179


State 278

  141 else_if: ELSE IF • BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT  shift, and go to state 289


State 279

  112 for_bool_operator: BOOL_SYMBOL for_comparison •

    $default  reduce using rule 112 (for_bool_operator)


State 280

  117 step_value: INT_VALUE •

    $default  reduce using rule 117 (step_value)


State 281

  118 step_value: DOUBLE_VALUE •

    $default  reduce using rule 118 (step_value)


State 282

  116 step: LOOP_STEP step_value •

    $default  reduce using rule 116 (step)


State 283

  119 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON •

    $default  reduce using rule 119 (do_while)


State 284

  120 do_condition: operand CONDITION_SYMBOL operand • do_bool_operator

    BOOL_SYMBOL  shift, and go to state 290

    $default  reduce using rule 123 (do_bool_operator)

    do_bool_operator  go to state 291


State 285

  136 switch_content: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 292


State 286

  131 case: CASE switch_value COLON switch_content • case

    CASE  shift, and go to state 242

    $default  reduce using rule 132 (case)

    case  go to state 293


State 287

  137 default: DEFAULT COLON switch_content •

    $default  reduce using rule 137 (default)


State 288

  143 else: ELSE CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 294


State 289

  141 else_if: ELSE IF BRACKET_LEFT • if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 200
    CHAR_VALUE     shift, and go to state 201
    DOUBLE_VALUE   shift, and go to state 202
    BOOLEAN_VALUE  shift, and go to state 203

    VAR_NAME      go to state 204
    operand       go to state 205
    if_condition  go to state 295


State 290

  124 do_bool_operator: BOOL_SYMBOL • do_condition

    CLASS_NAME     shift, and go to state 53
    IDENT          shift, and go to state 54
    INT_VALUE      shift, and go to state 200
    CHAR_VALUE     shift, and go to state 201
    DOUBLE_VALUE   shift, and go to state 202
    BOOLEAN_VALUE  shift, and go to state 255

    VAR_NAME      go to state 256
    do_condition  go to state 296
    operand       go to state 258


State 291

  120 do_condition: operand CONDITION_SYMBOL operand do_bool_operator •

    $default  reduce using rule 120 (do_condition)


State 292

  136 switch_content: BREAK SEMICOLON •

    $default  reduce using rule 136 (switch_content)


State 293

  131 case: CASE switch_value COLON switch_content case •

    $default  reduce using rule 131 (case)


State 294

  143 else: ELSE CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT •

    $default  reduce using rule 143 (else)


State 295

  141 else_if: ELSE IF BRACKET_LEFT if_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_RIGHT  shift, and go to state 297


State 296

  124 do_bool_operator: BOOL_SYMBOL do_condition •

    $default  reduce using rule 124 (do_bool_operator)


State 297

  141 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_LEFT  shift, and go to state 298


State 298

  141 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT else_if

    PUBLIC      shift, and go to state 162
    PRIVATE     shift, and go to state 163
    CLASS_NAME  shift, and go to state 11
    IF          shift, and go to state 164
    FOR         shift, and go to state 165
    DO          shift, and go to state 166
    SWITCH      shift, and go to state 167
    IDENT       shift, and go to state 12

    CURLY_BRACKET_RIGHT  reduce using rule 89 (inside_brackets)
    $default             reduce using rule 19 (visibility)

    class_instance           go to state 168
    member_access            go to state 169
    VAR_NAME                 go to state 18
    visibility               go to state 170
    variable_initialization  go to state 171
    variable_assignment      go to state 172
    inside_brackets          go to state 299
    loops_n_condition        go to state 175
    for_statement            go to state 176
    do_while                 go to state 177
    switch                   go to state 178
    if                       go to state 179


State 299

  141 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_RIGHT  shift, and go to state 300


State 300

  141 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • else_if

    ELSE  shift, and go to state 264

    $default  reduce using rule 140 (else_if)

    else_if  go to state 301
    else     go to state 266


State 301

  141 else_if: ELSE IF BRACKET_LEFT if_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if •

    $default  reduce using rule 141 (else_if)
