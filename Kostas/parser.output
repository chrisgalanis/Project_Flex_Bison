State 12 conflicts: 5 reduce/reduce
State 13 conflicts: 5 reduce/reduce
State 41 conflicts: 2 shift/reduce
State 42 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_identifier program
    2        | ε
    3        | error program

    4 VAR_NAME: CLASS_NAME
    5         | IDENT

    6 $@1: ε

    7 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT $@1 class_body CURLY_BRACKET_RIGHT

    8 class_body: ε
    9           | functions class_body
   10           | class_members class_body
   11           | class_identifier class_body

   12 class_members: variable_declaration SEMICOLON
   13              | variable_initialization SEMICOLON
   14              | variable_assignment SEMICOLON
   15              | member_access SEMICOLON
   16              | class_instance SEMICOLON

   17 visibility: ε
   18           | PUBLIC
   19           | PRIVATE

   20 $@2: ε

   21 variable_declaration: visibility data_type VAR_NAME $@2 next_declaration

   22 next_declaration: ε

   23 $@3: ε

   24 next_declaration: COMMA VAR_NAME $@3 next_declaration

   25 $@4: ε

   26 variable_initialization: visibility arithmetic_type VAR_NAME EQUAL_SIGN expression $@4 next_initialization_exp

   27 $@5: ε

   28 variable_initialization: visibility non_arithmetic_type VAR_NAME EQUAL_SIGN non_arithmetic_value $@5 next_initialization

   29 next_initialization_exp: ε

   30 $@6: ε

   31 next_initialization_exp: COMMA VAR_NAME EQUAL_SIGN expression $@6 next_initialization_exp

   32 next_initialization: ε

   33 $@7: ε

   34 next_initialization: COMMA VAR_NAME EQUAL_SIGN non_arithmetic_value $@7 next_initialization

   35 variable_assignment: VAR_NAME EQUAL_SIGN data

   36 data: expression
   37     | non_arithmetic_value

   38 expression: INT_VALUE
   39           | DOUBLE_VALUE
   40           | VAR_NAME
   41           | member_access
   42           | expression PLUS expression
   43           | expression MINUS expression
   44           | expression MULTIPLY expression
   45           | expression DIVIDE expression
   46           | BRACKET_LEFT expression BRACKET_RIGHT
   47           | MINUS expression

   48 data_type: arithmetic_type
   49          | non_arithmetic_type

   50 arithmetic_type: INT
   51                | DOUBLE

   52 non_arithmetic_type: CHAR
   53                    | BOOLEAN
   54                    | STRING

   55 non_arithmetic_value: CHAR_VALUE
   56                     | BOOLEAN_VALUE
   57                     | STRING_VALUE

   58 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

   59 member_access: VAR_NAME DOT VAR_NAME

   60 $@8: ε

   61 member_access: VAR_NAME DOT VAR_NAME BRACKET_LEFT $@8 parameters_start BRACKET_RIGHT

   62 $@9: ε

   63 functions: function_visibility VOID VAR_NAME BRACKET_LEFT $@9 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

   64 $@10: ε

   65 functions: function_visibility data_type VAR_NAME BRACKET_LEFT $@10 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

   66 function_visibility: PRIVATE
   67                    | PUBLIC

   68 arguments_start: ε
   69                | arguments

   70 $@11: ε

   71 arguments: data_type VAR_NAME $@11 arguments_end

   72 arguments_end: ε
   73              | COMMA arguments

   74 inside_void_function: inside_brackets
   75                     | inside_brackets RETURN SEMICOLON

   76 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON
   77                | inside_brackets RETURN non_arithmetic_value SEMICOLON

   78 $@12: ε

   79 function_call: VAR_NAME BRACKET_LEFT $@12 parameters_start BRACKET_RIGHT

   80 parameters_start: ε
   81                 | parameters

   82 $@13: ε

   83 parameters: VAR_NAME $@13 parameters_end

   84 $@14: ε

   85 parameters: VAR_NAME DOT VAR_NAME $@14 parameters_end

   86 $@15: ε

   87 parameters: non_arithmetic_value $@15 parameters_end

   88 parameters_end: ε
   89               | COMMA parameters

   90 inside_brackets: ε

   91 $@16: ε

   92 inside_brackets: loops_n_condition $@16 inside_brackets
   93                | function_call SEMICOLON inside_brackets
   94                | print SEMICOLON inside_brackets
   95                | class_members inside_brackets

   96 loops_n_condition: for_statement
   97                  | switch
   98                  | do_while
   99                  | if

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

  101 for_condition: for_variable SEMICOLON condition SEMICOLON for_step

  102 for_variable: ε
  103             | variable_initialization
  104             | variable_assignment

  105 condition: ε
  106          | expression CONDITION_SYMBOL expression bool_operator
  107          | VAR_NAME bool_operator
  108          | BOOLEAN_VALUE bool_operator

  109 bool_operator: ε
  110              | BOOL_SYMBOL condition

  111 for_step: ε
  112         | VAR_NAME step

  113 step: INCREAMENT_DECREAMENT
  114     | LOOP_STEP expression

  115 inside_brackets_loop: inside_brackets
  116                     | inside_brackets BREAK SEMICOLON inside_brackets

  117 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

  118 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

  119 case: CASE expression COLON switch_content case
  120     | ε

  121 switch_content: ε
  122               | inside_brackets BREAK SEMICOLON

  123 default: DEFAULT COLON switch_content
  124        | ε

  125 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

  126 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if
  127        | else

  128 else: ε
  129     | ELSE CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

  130 print: PRINT BRACKET_LEFT STRING_VALUE after_print BRACKET_RIGHT

  131 after_print: ε
  132            | COMMA VAR_NAME after_print


Terminals, with rules where they appear

    $end (0) 0
    error (256) 3
    CURLY_BRACKET_LEFT (258) 7 63 65 100 117 118 125 126 129
    CURLY_BRACKET_RIGHT (259) 7 63 65 100 117 118 125 126 129
    BRACKET_LEFT (260) 46 58 61 63 65 79 100 117 118 125 126 130
    BRACKET_RIGHT (261) 46 58 61 63 65 79 100 117 118 125 126 130
    EQUAL_SIGN (262) 26 28 31 34 35 58
    SEMICOLON (263) 12 13 14 15 16 75 76 77 93 94 101 116 117 122
    COLON (264) 119 123
    COMMA (265) 24 31 34 73 89 132
    DOT (266) 59 61 85
    PLUS (267) 42
    MINUS (268) 43 47
    MULTIPLY (269) 44
    DIVIDE (270) 45
    UMINUS (271)
    PUBLIC <sval> (272) 7 18 67
    PRIVATE <sval> (273) 19 66
    CLASS (274) 7
    CLASS_NAME <sval> (275) 4 7 58
    NEW (276) 58
    IF (277) 125 126
    ELSE (278) 126 129
    FOR (279) 100
    DO (280) 117
    WHILE (281) 117
    CONDITION_SYMBOL (282) 106
    BOOL_SYMBOL (283) 110
    INCREAMENT_DECREAMENT (284) 113
    LOOP_STEP (285) 114
    SWITCH (286) 118
    CASE (287) 119
    DEFAULT (288) 123
    BREAK (289) 116 122
    RETURN (290) 75 76 77
    PRINT (291) 130
    IDENT <sval> (292) 5
    VOID <sval> (293) 63
    INT <sval> (294) 50
    CHAR <sval> (295) 52
    DOUBLE <sval> (296) 51
    BOOLEAN <sval> (297) 53
    STRING <sval> (298) 54
    INT_VALUE <ival> (299) 38
    CHAR_VALUE <sval> (300) 55
    DOUBLE_VALUE <dval> (301) 39
    BOOLEAN_VALUE <sval> (302) 56 108
    STRING_VALUE <sval> (303) 57 130


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2 3
        on right: 0 1 3
    VAR_NAME <sval> (51)
        on left: 4 5
        on right: 21 24 26 28 31 34 35 40 58 59 61 63 65 71 76 79 83 85 107 112 132
    class_identifier (52)
        on left: 7
        on right: 1 11
    $@1 (53)
        on left: 6
        on right: 7
    class_body (54)
        on left: 8 9 10 11
        on right: 7 9 10 11
    class_members (55)
        on left: 12 13 14 15 16
        on right: 10 95
    visibility <sval> (56)
        on left: 17 18 19
        on right: 21 26 28
    variable_declaration (57)
        on left: 21
        on right: 12
    $@2 (58)
        on left: 20
        on right: 21
    next_declaration (59)
        on left: 22 24
        on right: 21 24
    $@3 (60)
        on left: 23
        on right: 24
    variable_initialization (61)
        on left: 26 28
        on right: 13 103
    $@4 (62)
        on left: 25
        on right: 26
    $@5 (63)
        on left: 27
        on right: 28
    next_initialization_exp (64)
        on left: 29 31
        on right: 26 31
    $@6 (65)
        on left: 30
        on right: 31
    next_initialization (66)
        on left: 32 34
        on right: 28 34
    $@7 (67)
        on left: 33
        on right: 34
    variable_assignment <sval> (68)
        on left: 35
        on right: 14 104
    data (69)
        on left: 36 37
        on right: 35
    expression <dval> (70)
        on left: 38 39 40 41 42 43 44 45 46 47
        on right: 26 31 36 42 43 44 45 46 47 106 114 118 119
    data_type <sval> (71)
        on left: 48 49
        on right: 21 65 71
    arithmetic_type <sval> (72)
        on left: 50 51
        on right: 26 48
    non_arithmetic_type <sval> (73)
        on left: 52 53 54
        on right: 28 49
    non_arithmetic_value <sval> (74)
        on left: 55 56 57
        on right: 28 34 37 77 87
    class_instance (75)
        on left: 58
        on right: 16
    member_access (76)
        on left: 59 61
        on right: 15 41
    $@8 (77)
        on left: 60
        on right: 61
    functions (78)
        on left: 63 65
        on right: 9
    $@9 (79)
        on left: 62
        on right: 63
    $@10 (80)
        on left: 64
        on right: 65
    function_visibility <sval> (81)
        on left: 66 67
        on right: 63 65
    arguments_start (82)
        on left: 68 69
        on right: 63 65
    arguments (83)
        on left: 71
        on right: 69 73
    $@11 (84)
        on left: 70
        on right: 71
    arguments_end (85)
        on left: 72 73
        on right: 71
    inside_void_function (86)
        on left: 74 75
        on right: 63
    inside_function (87)
        on left: 76 77
        on right: 65
    function_call <sval> (88)
        on left: 79
        on right: 93
    $@12 (89)
        on left: 78
        on right: 79
    parameters_start (90)
        on left: 80 81
        on right: 61 79
    parameters (91)
        on left: 83 85 87
        on right: 81 89
    $@13 (92)
        on left: 82
        on right: 83
    $@14 (93)
        on left: 84
        on right: 85
    $@15 (94)
        on left: 86
        on right: 87
    parameters_end (95)
        on left: 88 89
        on right: 83 85 87
    inside_brackets (96)
        on left: 90 92 93 94 95
        on right: 74 75 76 77 92 93 94 95 115 116 122 125 126 129
    $@16 (97)
        on left: 91
        on right: 92
    loops_n_condition (98)
        on left: 96 97 98 99
        on right: 92
    for_statement (99)
        on left: 100
        on right: 96
    for_condition (100)
        on left: 101
        on right: 100
    for_variable (101)
        on left: 102 103 104
        on right: 101
    condition (102)
        on left: 105 106 107 108
        on right: 101 110 117 125 126
    bool_operator (103)
        on left: 109 110
        on right: 106 107 108
    for_step (104)
        on left: 111 112
        on right: 101
    step (105)
        on left: 113 114
        on right: 112
    inside_brackets_loop (106)
        on left: 115 116
        on right: 100 117
    do_while (107)
        on left: 117
        on right: 98
    switch (108)
        on left: 118
        on right: 97
    case (109)
        on left: 119 120
        on right: 118 119
    switch_content (110)
        on left: 121 122
        on right: 119 123
    default (111)
        on left: 123 124
        on right: 118
    if (112)
        on left: 125
        on right: 99
    else_if (113)
        on left: 126 127
        on right: 125 126
    else (114)
        on left: 128 129
        on right: 127
    print (115)
        on left: 130
        on right: 94
    after_print (116)
        on left: 131 132
        on right: 130 132


State 0

    0 $accept: • program $end

    error   shift, and go to state 1
    PUBLIC  shift, and go to state 2

    $end  reduce using rule 2 (program)

    program           go to state 3
    class_identifier  go to state 4


State 1

    3 program: error • program

    error   shift, and go to state 1
    PUBLIC  shift, and go to state 2

    $end  reduce using rule 2 (program)

    program           go to state 5
    class_identifier  go to state 4


State 2

    7 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT $@1 class_body CURLY_BRACKET_RIGHT

    CLASS  shift, and go to state 6


State 3

    0 $accept: program • $end

    $end  shift, and go to state 7


State 4

    1 program: class_identifier • program

    error   shift, and go to state 1
    PUBLIC  shift, and go to state 2

    $end  reduce using rule 2 (program)

    program           go to state 8
    class_identifier  go to state 4


State 5

    3 program: error program •

    $default  reduce using rule 3 (program)


State 6

    7 class_identifier: PUBLIC CLASS • CLASS_NAME CURLY_BRACKET_LEFT $@1 class_body CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 9


State 7

    0 $accept: program $end •

    $default  accept


State 8

    1 program: class_identifier program •

    $default  reduce using rule 1 (program)


State 9

    7 class_identifier: PUBLIC CLASS CLASS_NAME • CURLY_BRACKET_LEFT $@1 class_body CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 10


State 10

    7 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT • $@1 class_body CURLY_BRACKET_RIGHT

    $default  reduce using rule 6 ($@1)

    $@1  go to state 11


State 11

    7 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT $@1 • class_body CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 12
    PRIVATE     shift, and go to state 13
    CLASS_NAME  shift, and go to state 14
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 8 (class_body)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 16
    class_identifier         go to state 17
    class_body               go to state 18
    class_members            go to state 19
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    functions                go to state 26
    function_visibility      go to state 27


State 12

    7 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT $@1 class_body CURLY_BRACKET_RIGHT
   18 visibility: PUBLIC •
   67 function_visibility: PUBLIC •

    CLASS  shift, and go to state 6

    VOID      reduce using rule 67 (function_visibility)
    INT       reduce using rule 18 (visibility)
    INT       [reduce using rule 67 (function_visibility)]
    CHAR      reduce using rule 18 (visibility)
    CHAR      [reduce using rule 67 (function_visibility)]
    DOUBLE    reduce using rule 18 (visibility)
    DOUBLE    [reduce using rule 67 (function_visibility)]
    BOOLEAN   reduce using rule 18 (visibility)
    BOOLEAN   [reduce using rule 67 (function_visibility)]
    STRING    reduce using rule 18 (visibility)
    STRING    [reduce using rule 67 (function_visibility)]
    $default  reduce using rule 18 (visibility)


State 13

   19 visibility: PRIVATE •
   66 function_visibility: PRIVATE •

    VOID      reduce using rule 66 (function_visibility)
    INT       reduce using rule 19 (visibility)
    INT       [reduce using rule 66 (function_visibility)]
    CHAR      reduce using rule 19 (visibility)
    CHAR      [reduce using rule 66 (function_visibility)]
    DOUBLE    reduce using rule 19 (visibility)
    DOUBLE    [reduce using rule 66 (function_visibility)]
    BOOLEAN   reduce using rule 19 (visibility)
    BOOLEAN   [reduce using rule 66 (function_visibility)]
    STRING    reduce using rule 19 (visibility)
    STRING    [reduce using rule 66 (function_visibility)]
    $default  reduce using rule 19 (visibility)


State 14

    4 VAR_NAME: CLASS_NAME •
   58 class_instance: CLASS_NAME • VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    $default  reduce using rule 4 (VAR_NAME)

    VAR_NAME  go to state 29


State 15

    5 VAR_NAME: IDENT •

    $default  reduce using rule 5 (VAR_NAME)


State 16

   35 variable_assignment: VAR_NAME • EQUAL_SIGN data
   59 member_access: VAR_NAME • DOT VAR_NAME
   61              | VAR_NAME • DOT VAR_NAME BRACKET_LEFT $@8 parameters_start BRACKET_RIGHT

    EQUAL_SIGN  shift, and go to state 30
    DOT         shift, and go to state 31


State 17

   11 class_body: class_identifier • class_body

    PUBLIC      shift, and go to state 12
    PRIVATE     shift, and go to state 13
    CLASS_NAME  shift, and go to state 14
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 8 (class_body)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 16
    class_identifier         go to state 17
    class_body               go to state 32
    class_members            go to state 19
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    functions                go to state 26
    function_visibility      go to state 27


State 18

    7 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT $@1 class_body • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 33


State 19

   10 class_body: class_members • class_body

    PUBLIC      shift, and go to state 12
    PRIVATE     shift, and go to state 13
    CLASS_NAME  shift, and go to state 14
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 8 (class_body)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 16
    class_identifier         go to state 17
    class_body               go to state 34
    class_members            go to state 19
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    functions                go to state 26
    function_visibility      go to state 27


State 20

   21 variable_declaration: visibility • data_type VAR_NAME $@2 next_declaration
   26 variable_initialization: visibility • arithmetic_type VAR_NAME EQUAL_SIGN expression $@4 next_initialization_exp
   28                        | visibility • non_arithmetic_type VAR_NAME EQUAL_SIGN non_arithmetic_value $@5 next_initialization

    INT      shift, and go to state 35
    CHAR     shift, and go to state 36
    DOUBLE   shift, and go to state 37
    BOOLEAN  shift, and go to state 38
    STRING   shift, and go to state 39

    data_type            go to state 40
    arithmetic_type      go to state 41
    non_arithmetic_type  go to state 42


State 21

   12 class_members: variable_declaration • SEMICOLON

    SEMICOLON  shift, and go to state 43


State 22

   13 class_members: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 44


State 23

   14 class_members: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 45


State 24

   16 class_members: class_instance • SEMICOLON

    SEMICOLON  shift, and go to state 46


State 25

   15 class_members: member_access • SEMICOLON

    SEMICOLON  shift, and go to state 47


State 26

    9 class_body: functions • class_body

    PUBLIC      shift, and go to state 12
    PRIVATE     shift, and go to state 13
    CLASS_NAME  shift, and go to state 14
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 8 (class_body)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 16
    class_identifier         go to state 17
    class_body               go to state 48
    class_members            go to state 19
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    functions                go to state 26
    function_visibility      go to state 27


State 27

   63 functions: function_visibility • VOID VAR_NAME BRACKET_LEFT $@9 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   65          | function_visibility • data_type VAR_NAME BRACKET_LEFT $@10 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VOID     shift, and go to state 49
    INT      shift, and go to state 35
    CHAR     shift, and go to state 36
    DOUBLE   shift, and go to state 37
    BOOLEAN  shift, and go to state 38
    STRING   shift, and go to state 39

    data_type            go to state 50
    arithmetic_type      go to state 51
    non_arithmetic_type  go to state 52


State 28

    4 VAR_NAME: CLASS_NAME •

    $default  reduce using rule 4 (VAR_NAME)


State 29

   58 class_instance: CLASS_NAME VAR_NAME • EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    EQUAL_SIGN  shift, and go to state 53


State 30

   35 variable_assignment: VAR_NAME EQUAL_SIGN • data

    BRACKET_LEFT   shift, and go to state 54
    MINUS          shift, and go to state 55
    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    INT_VALUE      shift, and go to state 56
    CHAR_VALUE     shift, and go to state 57
    DOUBLE_VALUE   shift, and go to state 58
    BOOLEAN_VALUE  shift, and go to state 59
    STRING_VALUE   shift, and go to state 60

    VAR_NAME              go to state 61
    data                  go to state 62
    expression            go to state 63
    non_arithmetic_value  go to state 64
    member_access         go to state 65


State 31

   59 member_access: VAR_NAME DOT • VAR_NAME
   61              | VAR_NAME DOT • VAR_NAME BRACKET_LEFT $@8 parameters_start BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 66


State 32

   11 class_body: class_identifier class_body •

    $default  reduce using rule 11 (class_body)


State 33

    7 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT $@1 class_body CURLY_BRACKET_RIGHT •

    $default  reduce using rule 7 (class_identifier)


State 34

   10 class_body: class_members class_body •

    $default  reduce using rule 10 (class_body)


State 35

   50 arithmetic_type: INT •

    $default  reduce using rule 50 (arithmetic_type)


State 36

   52 non_arithmetic_type: CHAR •

    $default  reduce using rule 52 (non_arithmetic_type)


State 37

   51 arithmetic_type: DOUBLE •

    $default  reduce using rule 51 (arithmetic_type)


State 38

   53 non_arithmetic_type: BOOLEAN •

    $default  reduce using rule 53 (non_arithmetic_type)


State 39

   54 non_arithmetic_type: STRING •

    $default  reduce using rule 54 (non_arithmetic_type)


State 40

   21 variable_declaration: visibility data_type • VAR_NAME $@2 next_declaration

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 67


State 41

   26 variable_initialization: visibility arithmetic_type • VAR_NAME EQUAL_SIGN expression $@4 next_initialization_exp
   48 data_type: arithmetic_type •

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    CLASS_NAME  [reduce using rule 48 (data_type)]
    IDENT       [reduce using rule 48 (data_type)]

    VAR_NAME  go to state 68


State 42

   28 variable_initialization: visibility non_arithmetic_type • VAR_NAME EQUAL_SIGN non_arithmetic_value $@5 next_initialization
   49 data_type: non_arithmetic_type •

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    CLASS_NAME  [reduce using rule 49 (data_type)]
    IDENT       [reduce using rule 49 (data_type)]

    VAR_NAME  go to state 69


State 43

   12 class_members: variable_declaration SEMICOLON •

    $default  reduce using rule 12 (class_members)


State 44

   13 class_members: variable_initialization SEMICOLON •

    $default  reduce using rule 13 (class_members)


State 45

   14 class_members: variable_assignment SEMICOLON •

    $default  reduce using rule 14 (class_members)


State 46

   16 class_members: class_instance SEMICOLON •

    $default  reduce using rule 16 (class_members)


State 47

   15 class_members: member_access SEMICOLON •

    $default  reduce using rule 15 (class_members)


State 48

    9 class_body: functions class_body •

    $default  reduce using rule 9 (class_body)


State 49

   63 functions: function_visibility VOID • VAR_NAME BRACKET_LEFT $@9 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 70


State 50

   65 functions: function_visibility data_type • VAR_NAME BRACKET_LEFT $@10 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 71


State 51

   48 data_type: arithmetic_type •

    $default  reduce using rule 48 (data_type)


State 52

   49 data_type: non_arithmetic_type •

    $default  reduce using rule 49 (data_type)


State 53

   58 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN • NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    NEW  shift, and go to state 72


State 54

   46 expression: BRACKET_LEFT • expression BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 73
    member_access  go to state 65


State 55

   47 expression: MINUS • expression

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 74
    member_access  go to state 65


State 56

   38 expression: INT_VALUE •

    $default  reduce using rule 38 (expression)


State 57

   55 non_arithmetic_value: CHAR_VALUE •

    $default  reduce using rule 55 (non_arithmetic_value)


State 58

   39 expression: DOUBLE_VALUE •

    $default  reduce using rule 39 (expression)


State 59

   56 non_arithmetic_value: BOOLEAN_VALUE •

    $default  reduce using rule 56 (non_arithmetic_value)


State 60

   57 non_arithmetic_value: STRING_VALUE •

    $default  reduce using rule 57 (non_arithmetic_value)


State 61

   40 expression: VAR_NAME •
   59 member_access: VAR_NAME • DOT VAR_NAME
   61              | VAR_NAME • DOT VAR_NAME BRACKET_LEFT $@8 parameters_start BRACKET_RIGHT

    DOT  shift, and go to state 31

    $default  reduce using rule 40 (expression)


State 62

   35 variable_assignment: VAR_NAME EQUAL_SIGN data •

    $default  reduce using rule 35 (variable_assignment)


State 63

   36 data: expression •
   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78

    $default  reduce using rule 36 (data)


State 64

   37 data: non_arithmetic_value •

    $default  reduce using rule 37 (data)


State 65

   41 expression: member_access •

    $default  reduce using rule 41 (expression)


State 66

   59 member_access: VAR_NAME DOT VAR_NAME •
   61              | VAR_NAME DOT VAR_NAME • BRACKET_LEFT $@8 parameters_start BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 79

    $default  reduce using rule 59 (member_access)


State 67

   21 variable_declaration: visibility data_type VAR_NAME • $@2 next_declaration

    $default  reduce using rule 20 ($@2)

    $@2  go to state 80


State 68

   26 variable_initialization: visibility arithmetic_type VAR_NAME • EQUAL_SIGN expression $@4 next_initialization_exp

    EQUAL_SIGN  shift, and go to state 81


State 69

   28 variable_initialization: visibility non_arithmetic_type VAR_NAME • EQUAL_SIGN non_arithmetic_value $@5 next_initialization

    EQUAL_SIGN  shift, and go to state 82


State 70

   63 functions: function_visibility VOID VAR_NAME • BRACKET_LEFT $@9 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 83


State 71

   65 functions: function_visibility data_type VAR_NAME • BRACKET_LEFT $@10 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 84


State 72

   58 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW • CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 85


State 73

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression
   46           | BRACKET_LEFT expression • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 86
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIVIDE         shift, and go to state 78


State 74

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression
   47           | MINUS expression •

    $default  reduce using rule 47 (expression)


State 75

   42 expression: expression PLUS • expression

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 87
    member_access  go to state 65


State 76

   43 expression: expression MINUS • expression

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 88
    member_access  go to state 65


State 77

   44 expression: expression MULTIPLY • expression

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 89
    member_access  go to state 65


State 78

   45 expression: expression DIVIDE • expression

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 90
    member_access  go to state 65


State 79

   61 member_access: VAR_NAME DOT VAR_NAME BRACKET_LEFT • $@8 parameters_start BRACKET_RIGHT

    $default  reduce using rule 60 ($@8)

    $@8  go to state 91


State 80

   21 variable_declaration: visibility data_type VAR_NAME $@2 • next_declaration

    COMMA  shift, and go to state 92

    $default  reduce using rule 22 (next_declaration)

    next_declaration  go to state 93


State 81

   26 variable_initialization: visibility arithmetic_type VAR_NAME EQUAL_SIGN • expression $@4 next_initialization_exp

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 94
    member_access  go to state 65


State 82

   28 variable_initialization: visibility non_arithmetic_type VAR_NAME EQUAL_SIGN • non_arithmetic_value $@5 next_initialization

    CHAR_VALUE     shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 59
    STRING_VALUE   shift, and go to state 60

    non_arithmetic_value  go to state 95


State 83

   63 functions: function_visibility VOID VAR_NAME BRACKET_LEFT • $@9 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    $default  reduce using rule 62 ($@9)

    $@9  go to state 96


State 84

   65 functions: function_visibility data_type VAR_NAME BRACKET_LEFT • $@10 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    $default  reduce using rule 64 ($@10)

    $@10  go to state 97


State 85

   58 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME • BRACKET_LEFT BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 98


State 86

   46 expression: BRACKET_LEFT expression BRACKET_RIGHT •

    $default  reduce using rule 46 (expression)


State 87

   42 expression: expression • PLUS expression
   42           | expression PLUS expression •
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression

    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78

    $default  reduce using rule 42 (expression)


State 88

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   43           | expression MINUS expression •
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression

    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78

    $default  reduce using rule 43 (expression)


State 89

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   44           | expression MULTIPLY expression •
   45           | expression • DIVIDE expression

    DIVIDE  shift, and go to state 78

    $default  reduce using rule 44 (expression)


State 90

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression
   45           | expression DIVIDE expression •

    $default  reduce using rule 45 (expression)


State 91

   61 member_access: VAR_NAME DOT VAR_NAME BRACKET_LEFT $@8 • parameters_start BRACKET_RIGHT

    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    CHAR_VALUE     shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 59
    STRING_VALUE   shift, and go to state 60

    $default  reduce using rule 80 (parameters_start)

    VAR_NAME              go to state 99
    non_arithmetic_value  go to state 100
    parameters_start      go to state 101
    parameters            go to state 102


State 92

   24 next_declaration: COMMA • VAR_NAME $@3 next_declaration

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 103


State 93

   21 variable_declaration: visibility data_type VAR_NAME $@2 next_declaration •

    $default  reduce using rule 21 (variable_declaration)


State 94

   26 variable_initialization: visibility arithmetic_type VAR_NAME EQUAL_SIGN expression • $@4 next_initialization_exp
   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78

    $default  reduce using rule 25 ($@4)

    $@4  go to state 104


State 95

   28 variable_initialization: visibility non_arithmetic_type VAR_NAME EQUAL_SIGN non_arithmetic_value • $@5 next_initialization

    $default  reduce using rule 27 ($@5)

    $@5  go to state 105


State 96

   63 functions: function_visibility VOID VAR_NAME BRACKET_LEFT $@9 • arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 35
    CHAR     shift, and go to state 36
    DOUBLE   shift, and go to state 37
    BOOLEAN  shift, and go to state 38
    STRING   shift, and go to state 39

    $default  reduce using rule 68 (arguments_start)

    data_type            go to state 106
    arithmetic_type      go to state 51
    non_arithmetic_type  go to state 52
    arguments_start      go to state 107
    arguments            go to state 108


State 97

   65 functions: function_visibility data_type VAR_NAME BRACKET_LEFT $@10 • arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 35
    CHAR     shift, and go to state 36
    DOUBLE   shift, and go to state 37
    BOOLEAN  shift, and go to state 38
    STRING   shift, and go to state 39

    $default  reduce using rule 68 (arguments_start)

    data_type            go to state 106
    arithmetic_type      go to state 51
    non_arithmetic_type  go to state 52
    arguments_start      go to state 109
    arguments            go to state 108


State 98

   58 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 110


State 99

   83 parameters: VAR_NAME • $@13 parameters_end
   85           | VAR_NAME • DOT VAR_NAME $@14 parameters_end

    DOT  shift, and go to state 111

    $default  reduce using rule 82 ($@13)

    $@13  go to state 112


State 100

   87 parameters: non_arithmetic_value • $@15 parameters_end

    $default  reduce using rule 86 ($@15)

    $@15  go to state 113


State 101

   61 member_access: VAR_NAME DOT VAR_NAME BRACKET_LEFT $@8 parameters_start • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 114


State 102

   81 parameters_start: parameters •

    $default  reduce using rule 81 (parameters_start)


State 103

   24 next_declaration: COMMA VAR_NAME • $@3 next_declaration

    $default  reduce using rule 23 ($@3)

    $@3  go to state 115


State 104

   26 variable_initialization: visibility arithmetic_type VAR_NAME EQUAL_SIGN expression $@4 • next_initialization_exp

    COMMA  shift, and go to state 116

    $default  reduce using rule 29 (next_initialization_exp)

    next_initialization_exp  go to state 117


State 105

   28 variable_initialization: visibility non_arithmetic_type VAR_NAME EQUAL_SIGN non_arithmetic_value $@5 • next_initialization

    COMMA  shift, and go to state 118

    $default  reduce using rule 32 (next_initialization)

    next_initialization  go to state 119


State 106

   71 arguments: data_type • VAR_NAME $@11 arguments_end

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 120


State 107

   63 functions: function_visibility VOID VAR_NAME BRACKET_LEFT $@9 arguments_start • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 121


State 108

   69 arguments_start: arguments •

    $default  reduce using rule 69 (arguments_start)


State 109

   65 functions: function_visibility data_type VAR_NAME BRACKET_LEFT $@10 arguments_start • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 122


State 110

   58 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT •

    $default  reduce using rule 58 (class_instance)


State 111

   85 parameters: VAR_NAME DOT • VAR_NAME $@14 parameters_end

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 123


State 112

   83 parameters: VAR_NAME $@13 • parameters_end

    COMMA  shift, and go to state 124

    $default  reduce using rule 88 (parameters_end)

    parameters_end  go to state 125


State 113

   87 parameters: non_arithmetic_value $@15 • parameters_end

    COMMA  shift, and go to state 124

    $default  reduce using rule 88 (parameters_end)

    parameters_end  go to state 126


State 114

   61 member_access: VAR_NAME DOT VAR_NAME BRACKET_LEFT $@8 parameters_start BRACKET_RIGHT •

    $default  reduce using rule 61 (member_access)


State 115

   24 next_declaration: COMMA VAR_NAME $@3 • next_declaration

    COMMA  shift, and go to state 92

    $default  reduce using rule 22 (next_declaration)

    next_declaration  go to state 127


State 116

   31 next_initialization_exp: COMMA • VAR_NAME EQUAL_SIGN expression $@6 next_initialization_exp

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 128


State 117

   26 variable_initialization: visibility arithmetic_type VAR_NAME EQUAL_SIGN expression $@4 next_initialization_exp •

    $default  reduce using rule 26 (variable_initialization)


State 118

   34 next_initialization: COMMA • VAR_NAME EQUAL_SIGN non_arithmetic_value $@7 next_initialization

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 129


State 119

   28 variable_initialization: visibility non_arithmetic_type VAR_NAME EQUAL_SIGN non_arithmetic_value $@5 next_initialization •

    $default  reduce using rule 28 (variable_initialization)


State 120

   71 arguments: data_type VAR_NAME • $@11 arguments_end

    $default  reduce using rule 70 ($@11)

    $@11  go to state 130


State 121

   63 functions: function_visibility VOID VAR_NAME BRACKET_LEFT $@9 arguments_start BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 131


State 122

   65 functions: function_visibility data_type VAR_NAME BRACKET_LEFT $@10 arguments_start BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 132


State 123

   85 parameters: VAR_NAME DOT VAR_NAME • $@14 parameters_end

    $default  reduce using rule 84 ($@14)

    $@14  go to state 133


State 124

   89 parameters_end: COMMA • parameters

    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    CHAR_VALUE     shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 59
    STRING_VALUE   shift, and go to state 60

    VAR_NAME              go to state 99
    non_arithmetic_value  go to state 100
    parameters            go to state 134


State 125

   83 parameters: VAR_NAME $@13 parameters_end •

    $default  reduce using rule 83 (parameters)


State 126

   87 parameters: non_arithmetic_value $@15 parameters_end •

    $default  reduce using rule 87 (parameters)


State 127

   24 next_declaration: COMMA VAR_NAME $@3 next_declaration •

    $default  reduce using rule 24 (next_declaration)


State 128

   31 next_initialization_exp: COMMA VAR_NAME • EQUAL_SIGN expression $@6 next_initialization_exp

    EQUAL_SIGN  shift, and go to state 135


State 129

   34 next_initialization: COMMA VAR_NAME • EQUAL_SIGN non_arithmetic_value $@7 next_initialization

    EQUAL_SIGN  shift, and go to state 136


State 130

   71 arguments: data_type VAR_NAME $@11 • arguments_end

    COMMA  shift, and go to state 137

    $default  reduce using rule 72 (arguments_end)

    arguments_end  go to state 138


State 131

   63 functions: function_visibility VOID VAR_NAME BRACKET_LEFT $@9 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_void_function CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    RETURN               reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    inside_void_function     go to state 148
    function_call            go to state 149
    inside_brackets          go to state 150
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 132

   65 functions: function_visibility data_type VAR_NAME BRACKET_LEFT $@10 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_function CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    RETURN    reduce using rule 90 (inside_brackets)
    $default  reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    inside_function          go to state 157
    function_call            go to state 149
    inside_brackets          go to state 158
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 133

   85 parameters: VAR_NAME DOT VAR_NAME $@14 • parameters_end

    COMMA  shift, and go to state 124

    $default  reduce using rule 88 (parameters_end)

    parameters_end  go to state 159


State 134

   89 parameters_end: COMMA parameters •

    $default  reduce using rule 89 (parameters_end)


State 135

   31 next_initialization_exp: COMMA VAR_NAME EQUAL_SIGN • expression $@6 next_initialization_exp

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 160
    member_access  go to state 65


State 136

   34 next_initialization: COMMA VAR_NAME EQUAL_SIGN • non_arithmetic_value $@7 next_initialization

    CHAR_VALUE     shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 59
    STRING_VALUE   shift, and go to state 60

    non_arithmetic_value  go to state 161


State 137

   73 arguments_end: COMMA • arguments

    INT      shift, and go to state 35
    CHAR     shift, and go to state 36
    DOUBLE   shift, and go to state 37
    BOOLEAN  shift, and go to state 38
    STRING   shift, and go to state 39

    data_type            go to state 106
    arithmetic_type      go to state 51
    non_arithmetic_type  go to state 52
    arguments            go to state 162


State 138

   71 arguments: data_type VAR_NAME $@11 arguments_end •

    $default  reduce using rule 71 (arguments)


State 139

   18 visibility: PUBLIC •

    $default  reduce using rule 18 (visibility)


State 140

   19 visibility: PRIVATE •

    $default  reduce using rule 19 (visibility)


State 141

  125 if: IF • BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT  shift, and go to state 163


State 142

  100 for_statement: FOR • BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 164


State 143

  117 do_while: DO • CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_LEFT  shift, and go to state 165


State 144

  118 switch: SWITCH • BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 166


State 145

  130 print: PRINT • BRACKET_LEFT STRING_VALUE after_print BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 167


State 146

   35 variable_assignment: VAR_NAME • EQUAL_SIGN data
   59 member_access: VAR_NAME • DOT VAR_NAME
   61              | VAR_NAME • DOT VAR_NAME BRACKET_LEFT $@8 parameters_start BRACKET_RIGHT
   79 function_call: VAR_NAME • BRACKET_LEFT $@12 parameters_start BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 168
    EQUAL_SIGN    shift, and go to state 30
    DOT           shift, and go to state 31


State 147

   95 inside_brackets: class_members • inside_brackets

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    BREAK                reduce using rule 90 (inside_brackets)
    RETURN               reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 169
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 148

   63 functions: function_visibility VOID VAR_NAME BRACKET_LEFT $@9 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 170


State 149

   93 inside_brackets: function_call • SEMICOLON inside_brackets

    SEMICOLON  shift, and go to state 171


State 150

   74 inside_void_function: inside_brackets •
   75                     | inside_brackets • RETURN SEMICOLON

    RETURN  shift, and go to state 172

    $default  reduce using rule 74 (inside_void_function)


State 151

   92 inside_brackets: loops_n_condition • $@16 inside_brackets

    $default  reduce using rule 91 ($@16)

    $@16  go to state 173


State 152

   96 loops_n_condition: for_statement •

    $default  reduce using rule 96 (loops_n_condition)


State 153

   98 loops_n_condition: do_while •

    $default  reduce using rule 98 (loops_n_condition)


State 154

   97 loops_n_condition: switch •

    $default  reduce using rule 97 (loops_n_condition)


State 155

   99 loops_n_condition: if •

    $default  reduce using rule 99 (loops_n_condition)


State 156

   94 inside_brackets: print • SEMICOLON inside_brackets

    SEMICOLON  shift, and go to state 174


State 157

   65 functions: function_visibility data_type VAR_NAME BRACKET_LEFT $@10 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 175


State 158

   76 inside_function: inside_brackets • RETURN VAR_NAME SEMICOLON
   77                | inside_brackets • RETURN non_arithmetic_value SEMICOLON

    RETURN  shift, and go to state 176


State 159

   85 parameters: VAR_NAME DOT VAR_NAME $@14 parameters_end •

    $default  reduce using rule 85 (parameters)


State 160

   31 next_initialization_exp: COMMA VAR_NAME EQUAL_SIGN expression • $@6 next_initialization_exp
   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78

    $default  reduce using rule 30 ($@6)

    $@6  go to state 177


State 161

   34 next_initialization: COMMA VAR_NAME EQUAL_SIGN non_arithmetic_value • $@7 next_initialization

    $default  reduce using rule 33 ($@7)

    $@7  go to state 178


State 162

   73 arguments_end: COMMA arguments •

    $default  reduce using rule 73 (arguments_end)


State 163

  125 if: IF BRACKET_LEFT • condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT   shift, and go to state 54
    MINUS          shift, and go to state 55
    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    INT_VALUE      shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 58
    BOOLEAN_VALUE  shift, and go to state 179

    $default  reduce using rule 105 (condition)

    VAR_NAME       go to state 180
    expression     go to state 181
    member_access  go to state 65
    condition      go to state 182


State 164

  100 for_statement: FOR BRACKET_LEFT • for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    SEMICOLON  reduce using rule 102 (for_variable)
    $default   reduce using rule 17 (visibility)

    VAR_NAME                 go to state 183
    visibility               go to state 184
    variable_initialization  go to state 185
    variable_assignment      go to state 186
    for_condition            go to state 187
    for_variable             go to state 188


State 165

  117 do_while: DO CURLY_BRACKET_LEFT • inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    BREAK                reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 189
    loops_n_condition        go to state 151
    for_statement            go to state 152
    inside_brackets_loop     go to state 190
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 166

  118 switch: SWITCH BRACKET_LEFT • expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 191
    member_access  go to state 65


State 167

  130 print: PRINT BRACKET_LEFT • STRING_VALUE after_print BRACKET_RIGHT

    STRING_VALUE  shift, and go to state 192


State 168

   79 function_call: VAR_NAME BRACKET_LEFT • $@12 parameters_start BRACKET_RIGHT

    $default  reduce using rule 78 ($@12)

    $@12  go to state 193


State 169

   95 inside_brackets: class_members inside_brackets •

    $default  reduce using rule 95 (inside_brackets)


State 170

   63 functions: function_visibility VOID VAR_NAME BRACKET_LEFT $@9 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 63 (functions)


State 171

   93 inside_brackets: function_call SEMICOLON • inside_brackets

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    BREAK                reduce using rule 90 (inside_brackets)
    RETURN               reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 194
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 172

   75 inside_void_function: inside_brackets RETURN • SEMICOLON

    SEMICOLON  shift, and go to state 195


State 173

   92 inside_brackets: loops_n_condition $@16 • inside_brackets

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    BREAK                reduce using rule 90 (inside_brackets)
    RETURN               reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 196
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 174

   94 inside_brackets: print SEMICOLON • inside_brackets

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    BREAK                reduce using rule 90 (inside_brackets)
    RETURN               reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 197
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 175

   65 functions: function_visibility data_type VAR_NAME BRACKET_LEFT $@10 arguments_start BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 65 (functions)


State 176

   76 inside_function: inside_brackets RETURN • VAR_NAME SEMICOLON
   77                | inside_brackets RETURN • non_arithmetic_value SEMICOLON

    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    CHAR_VALUE     shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 59
    STRING_VALUE   shift, and go to state 60

    VAR_NAME              go to state 198
    non_arithmetic_value  go to state 199


State 177

   31 next_initialization_exp: COMMA VAR_NAME EQUAL_SIGN expression $@6 • next_initialization_exp

    COMMA  shift, and go to state 116

    $default  reduce using rule 29 (next_initialization_exp)

    next_initialization_exp  go to state 200


State 178

   34 next_initialization: COMMA VAR_NAME EQUAL_SIGN non_arithmetic_value $@7 • next_initialization

    COMMA  shift, and go to state 118

    $default  reduce using rule 32 (next_initialization)

    next_initialization  go to state 201


State 179

  108 condition: BOOLEAN_VALUE • bool_operator

    BOOL_SYMBOL  shift, and go to state 202

    $default  reduce using rule 109 (bool_operator)

    bool_operator  go to state 203


State 180

   40 expression: VAR_NAME •
   59 member_access: VAR_NAME • DOT VAR_NAME
   61              | VAR_NAME • DOT VAR_NAME BRACKET_LEFT $@8 parameters_start BRACKET_RIGHT
  107 condition: VAR_NAME • bool_operator

    DOT          shift, and go to state 31
    BOOL_SYMBOL  shift, and go to state 202

    BRACKET_RIGHT  reduce using rule 109 (bool_operator)
    SEMICOLON      reduce using rule 109 (bool_operator)
    $default       reduce using rule 40 (expression)

    bool_operator  go to state 204


State 181

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression
  106 condition: expression • CONDITION_SYMBOL expression bool_operator

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULTIPLY          shift, and go to state 77
    DIVIDE            shift, and go to state 78
    CONDITION_SYMBOL  shift, and go to state 205


State 182

  125 if: IF BRACKET_LEFT condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_RIGHT  shift, and go to state 206


State 183

   35 variable_assignment: VAR_NAME • EQUAL_SIGN data

    EQUAL_SIGN  shift, and go to state 30


State 184

   26 variable_initialization: visibility • arithmetic_type VAR_NAME EQUAL_SIGN expression $@4 next_initialization_exp
   28                        | visibility • non_arithmetic_type VAR_NAME EQUAL_SIGN non_arithmetic_value $@5 next_initialization

    INT      shift, and go to state 35
    CHAR     shift, and go to state 36
    DOUBLE   shift, and go to state 37
    BOOLEAN  shift, and go to state 38
    STRING   shift, and go to state 39

    arithmetic_type      go to state 207
    non_arithmetic_type  go to state 208


State 185

  103 for_variable: variable_initialization •

    $default  reduce using rule 103 (for_variable)


State 186

  104 for_variable: variable_assignment •

    $default  reduce using rule 104 (for_variable)


State 187

  100 for_statement: FOR BRACKET_LEFT for_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 209


State 188

  101 for_condition: for_variable • SEMICOLON condition SEMICOLON for_step

    SEMICOLON  shift, and go to state 210


State 189

  115 inside_brackets_loop: inside_brackets •
  116                     | inside_brackets • BREAK SEMICOLON inside_brackets

    BREAK  shift, and go to state 211

    $default  reduce using rule 115 (inside_brackets_loop)


State 190

  117 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop • CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_RIGHT  shift, and go to state 212


State 191

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression
  118 switch: SWITCH BRACKET_LEFT expression • BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 213
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIVIDE         shift, and go to state 78


State 192

  130 print: PRINT BRACKET_LEFT STRING_VALUE • after_print BRACKET_RIGHT

    COMMA  shift, and go to state 214

    $default  reduce using rule 131 (after_print)

    after_print  go to state 215


State 193

   79 function_call: VAR_NAME BRACKET_LEFT $@12 • parameters_start BRACKET_RIGHT

    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    CHAR_VALUE     shift, and go to state 57
    BOOLEAN_VALUE  shift, and go to state 59
    STRING_VALUE   shift, and go to state 60

    $default  reduce using rule 80 (parameters_start)

    VAR_NAME              go to state 99
    non_arithmetic_value  go to state 100
    parameters_start      go to state 216
    parameters            go to state 102


State 194

   93 inside_brackets: function_call SEMICOLON inside_brackets •

    $default  reduce using rule 93 (inside_brackets)


State 195

   75 inside_void_function: inside_brackets RETURN SEMICOLON •

    $default  reduce using rule 75 (inside_void_function)


State 196

   92 inside_brackets: loops_n_condition $@16 inside_brackets •

    $default  reduce using rule 92 (inside_brackets)


State 197

   94 inside_brackets: print SEMICOLON inside_brackets •

    $default  reduce using rule 94 (inside_brackets)


State 198

   76 inside_function: inside_brackets RETURN VAR_NAME • SEMICOLON

    SEMICOLON  shift, and go to state 217


State 199

   77 inside_function: inside_brackets RETURN non_arithmetic_value • SEMICOLON

    SEMICOLON  shift, and go to state 218


State 200

   31 next_initialization_exp: COMMA VAR_NAME EQUAL_SIGN expression $@6 next_initialization_exp •

    $default  reduce using rule 31 (next_initialization_exp)


State 201

   34 next_initialization: COMMA VAR_NAME EQUAL_SIGN non_arithmetic_value $@7 next_initialization •

    $default  reduce using rule 34 (next_initialization)


State 202

  110 bool_operator: BOOL_SYMBOL • condition

    BRACKET_LEFT   shift, and go to state 54
    MINUS          shift, and go to state 55
    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    INT_VALUE      shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 58
    BOOLEAN_VALUE  shift, and go to state 179

    $default  reduce using rule 105 (condition)

    VAR_NAME       go to state 180
    expression     go to state 181
    member_access  go to state 65
    condition      go to state 219


State 203

  108 condition: BOOLEAN_VALUE bool_operator •

    $default  reduce using rule 108 (condition)


State 204

  107 condition: VAR_NAME bool_operator •

    $default  reduce using rule 107 (condition)


State 205

  106 condition: expression CONDITION_SYMBOL • expression bool_operator

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 220
    member_access  go to state 65


State 206

  125 if: IF BRACKET_LEFT condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_LEFT  shift, and go to state 221


State 207

   26 variable_initialization: visibility arithmetic_type • VAR_NAME EQUAL_SIGN expression $@4 next_initialization_exp

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 68


State 208

   28 variable_initialization: visibility non_arithmetic_type • VAR_NAME EQUAL_SIGN non_arithmetic_value $@5 next_initialization

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 69


State 209

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 222


State 210

  101 for_condition: for_variable SEMICOLON • condition SEMICOLON for_step

    BRACKET_LEFT   shift, and go to state 54
    MINUS          shift, and go to state 55
    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    INT_VALUE      shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 58
    BOOLEAN_VALUE  shift, and go to state 179

    $default  reduce using rule 105 (condition)

    VAR_NAME       go to state 180
    expression     go to state 181
    member_access  go to state 65
    condition      go to state 223


State 211

  116 inside_brackets_loop: inside_brackets BREAK • SEMICOLON inside_brackets

    SEMICOLON  shift, and go to state 224


State 212

  117 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT • WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    WHILE  shift, and go to state 225


State 213

  118 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT • CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 226


State 214

  132 after_print: COMMA • VAR_NAME after_print

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    VAR_NAME  go to state 227


State 215

  130 print: PRINT BRACKET_LEFT STRING_VALUE after_print • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 228


State 216

   79 function_call: VAR_NAME BRACKET_LEFT $@12 parameters_start • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 229


State 217

   76 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON •

    $default  reduce using rule 76 (inside_function)


State 218

   77 inside_function: inside_brackets RETURN non_arithmetic_value SEMICOLON •

    $default  reduce using rule 77 (inside_function)


State 219

  110 bool_operator: BOOL_SYMBOL condition •

    $default  reduce using rule 110 (bool_operator)


State 220

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression
  106 condition: expression CONDITION_SYMBOL expression • bool_operator

    PLUS         shift, and go to state 75
    MINUS        shift, and go to state 76
    MULTIPLY     shift, and go to state 77
    DIVIDE       shift, and go to state 78
    BOOL_SYMBOL  shift, and go to state 202

    $default  reduce using rule 109 (bool_operator)

    bool_operator  go to state 230


State 221

  125 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT else_if

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 231
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 222

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets_loop CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    BREAK                reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 189
    loops_n_condition        go to state 151
    for_statement            go to state 152
    inside_brackets_loop     go to state 232
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 223

  101 for_condition: for_variable SEMICOLON condition • SEMICOLON for_step

    SEMICOLON  shift, and go to state 233


State 224

  116 inside_brackets_loop: inside_brackets BREAK SEMICOLON • inside_brackets

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 234
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 225

  117 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE • BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON

    BRACKET_LEFT  shift, and go to state 235


State 226

  118 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT • case default CURLY_BRACKET_RIGHT

    CASE  shift, and go to state 236

    $default  reduce using rule 120 (case)

    case  go to state 237


State 227

  132 after_print: COMMA VAR_NAME • after_print

    COMMA  shift, and go to state 214

    $default  reduce using rule 131 (after_print)

    after_print  go to state 238


State 228

  130 print: PRINT BRACKET_LEFT STRING_VALUE after_print BRACKET_RIGHT •

    $default  reduce using rule 130 (print)


State 229

   79 function_call: VAR_NAME BRACKET_LEFT $@12 parameters_start BRACKET_RIGHT •

    $default  reduce using rule 79 (function_call)


State 230

  106 condition: expression CONDITION_SYMBOL expression bool_operator •

    $default  reduce using rule 106 (condition)


State 231

  125 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_RIGHT  shift, and go to state 239


State 232

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 240


State 233

  101 for_condition: for_variable SEMICOLON condition SEMICOLON • for_step

    CLASS_NAME  shift, and go to state 28
    IDENT       shift, and go to state 15

    $default  reduce using rule 111 (for_step)

    VAR_NAME  go to state 241
    for_step  go to state 242


State 234

  116 inside_brackets_loop: inside_brackets BREAK SEMICOLON inside_brackets •

    $default  reduce using rule 116 (inside_brackets_loop)


State 235

  117 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT • condition BRACKET_RIGHT SEMICOLON

    BRACKET_LEFT   shift, and go to state 54
    MINUS          shift, and go to state 55
    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    INT_VALUE      shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 58
    BOOLEAN_VALUE  shift, and go to state 179

    $default  reduce using rule 105 (condition)

    VAR_NAME       go to state 180
    expression     go to state 181
    member_access  go to state 65
    condition      go to state 243


State 236

  119 case: CASE • expression COLON switch_content case

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 244
    member_access  go to state 65


State 237

  118 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case • default CURLY_BRACKET_RIGHT

    DEFAULT  shift, and go to state 245

    $default  reduce using rule 124 (default)

    default  go to state 246


State 238

  132 after_print: COMMA VAR_NAME after_print •

    $default  reduce using rule 132 (after_print)


State 239

  125 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • else_if

    ELSE  shift, and go to state 247

    $default  reduce using rule 128 (else)

    else_if  go to state 248
    else     go to state 249


State 240

  100 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT •

    $default  reduce using rule 100 (for_statement)


State 241

  112 for_step: VAR_NAME • step

    INCREAMENT_DECREAMENT  shift, and go to state 250
    LOOP_STEP              shift, and go to state 251

    step  go to state 252


State 242

  101 for_condition: for_variable SEMICOLON condition SEMICOLON for_step •

    $default  reduce using rule 101 (for_condition)


State 243

  117 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition • BRACKET_RIGHT SEMICOLON

    BRACKET_RIGHT  shift, and go to state 253


State 244

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression
  119 case: CASE expression • COLON switch_content case

    COLON     shift, and go to state 254
    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78


State 245

  123 default: DEFAULT • COLON switch_content

    COLON  shift, and go to state 255


State 246

  118 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 256


State 247

  126 else_if: ELSE • IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if
  129 else: ELSE • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 257
    IF                  shift, and go to state 258


State 248

  125 if: IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if •

    $default  reduce using rule 125 (if)


State 249

  127 else_if: else •

    $default  reduce using rule 127 (else_if)


State 250

  113 step: INCREAMENT_DECREAMENT •

    $default  reduce using rule 113 (step)


State 251

  114 step: LOOP_STEP • expression

    BRACKET_LEFT  shift, and go to state 54
    MINUS         shift, and go to state 55
    CLASS_NAME    shift, and go to state 28
    IDENT         shift, and go to state 15
    INT_VALUE     shift, and go to state 56
    DOUBLE_VALUE  shift, and go to state 58

    VAR_NAME       go to state 61
    expression     go to state 259
    member_access  go to state 65


State 252

  112 for_step: VAR_NAME step •

    $default  reduce using rule 112 (for_step)


State 253

  117 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT • SEMICOLON

    SEMICOLON  shift, and go to state 260


State 254

  119 case: CASE expression COLON • switch_content case

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 121 (switch_content)
    CASE                 reduce using rule 121 (switch_content)
    DEFAULT              reduce using rule 121 (switch_content)
    BREAK                reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 261
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    switch_content           go to state 262
    if                       go to state 155
    print                    go to state 156


State 255

  123 default: DEFAULT COLON • switch_content

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 121 (switch_content)
    BREAK                reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 261
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    switch_content           go to state 263
    if                       go to state 155
    print                    go to state 156


State 256

  118 switch: SWITCH BRACKET_LEFT expression BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT •

    $default  reduce using rule 118 (switch)


State 257

  129 else: ELSE CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 264
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 258

  126 else_if: ELSE IF • BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT  shift, and go to state 265


State 259

   42 expression: expression • PLUS expression
   43           | expression • MINUS expression
   44           | expression • MULTIPLY expression
   45           | expression • DIVIDE expression
  114 step: LOOP_STEP expression •

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIVIDE    shift, and go to state 78

    $default  reduce using rule 114 (step)


State 260

  117 do_while: DO CURLY_BRACKET_LEFT inside_brackets_loop CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT condition BRACKET_RIGHT SEMICOLON •

    $default  reduce using rule 117 (do_while)


State 261

  122 switch_content: inside_brackets • BREAK SEMICOLON

    BREAK  shift, and go to state 266


State 262

  119 case: CASE expression COLON switch_content • case

    CASE  shift, and go to state 236

    $default  reduce using rule 120 (case)

    case  go to state 267


State 263

  123 default: DEFAULT COLON switch_content •

    $default  reduce using rule 123 (default)


State 264

  129 else: ELSE CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 268


State 265

  126 else_if: ELSE IF BRACKET_LEFT • condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_LEFT   shift, and go to state 54
    MINUS          shift, and go to state 55
    CLASS_NAME     shift, and go to state 28
    IDENT          shift, and go to state 15
    INT_VALUE      shift, and go to state 56
    DOUBLE_VALUE   shift, and go to state 58
    BOOLEAN_VALUE  shift, and go to state 179

    $default  reduce using rule 105 (condition)

    VAR_NAME       go to state 180
    expression     go to state 181
    member_access  go to state 65
    condition      go to state 269


State 266

  122 switch_content: inside_brackets BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 270


State 267

  119 case: CASE expression COLON switch_content case •

    $default  reduce using rule 119 (case)


State 268

  129 else: ELSE CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT •

    $default  reduce using rule 129 (else)


State 269

  126 else_if: ELSE IF BRACKET_LEFT condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    BRACKET_RIGHT  shift, and go to state 271


State 270

  122 switch_content: inside_brackets BREAK SEMICOLON •

    $default  reduce using rule 122 (switch_content)


State 271

  126 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_LEFT  shift, and go to state 272


State 272

  126 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT else_if

    PUBLIC      shift, and go to state 139
    PRIVATE     shift, and go to state 140
    CLASS_NAME  shift, and go to state 14
    IF          shift, and go to state 141
    FOR         shift, and go to state 142
    DO          shift, and go to state 143
    SWITCH      shift, and go to state 144
    PRINT       shift, and go to state 145
    IDENT       shift, and go to state 15

    CURLY_BRACKET_RIGHT  reduce using rule 90 (inside_brackets)
    $default             reduce using rule 17 (visibility)

    VAR_NAME                 go to state 146
    class_members            go to state 147
    visibility               go to state 20
    variable_declaration     go to state 21
    variable_initialization  go to state 22
    variable_assignment      go to state 23
    class_instance           go to state 24
    member_access            go to state 25
    function_call            go to state 149
    inside_brackets          go to state 273
    loops_n_condition        go to state 151
    for_statement            go to state 152
    do_while                 go to state 153
    switch                   go to state 154
    if                       go to state 155
    print                    go to state 156


State 273

  126 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT else_if

    CURLY_BRACKET_RIGHT  shift, and go to state 274


State 274

  126 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • else_if

    ELSE  shift, and go to state 247

    $default  reduce using rule 128 (else)

    else_if  go to state 275
    else     go to state 249


State 275

  126 else_if: ELSE IF BRACKET_LEFT condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT else_if •

    $default  reduce using rule 126 (else_if)
