Terminals unused in grammar

    SINGLE_MARK


Rules useless in parser due to conflicts

   65 operand: VAR_NAME


State 126 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | class_identifier

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    4 class_body: ε
    5           | functions class_body
    6           | class_members class_body

    7 class_members: variable_initialization SEMICOLON
    8              | variable_assignment SEMICOLON

    9 variable_type: INT
   10              | DOUBLE
   11              | CHAR
   12              | BOOLEAN
   13              | STRING

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

   15 member_access: VAR_NAME DOT VAR_NAME

   16 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   17          | function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

   18 function_visibility: PRIVATE
   19                    | PUBLIC

   20 arguments: ε
   21          | parameters

   22 parameters: variable_type VAR_NAME arguments_end

   23 arguments_end: ε
   24              | COMMA parameters

   25 inside_void_function: inside_brackets
   26                     | inside_brackets RETURN SEMICOLON

   27 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON
   28                | inside_brackets RETURN variable_value SEMICOLON

   29 inside_brackets: ε
   30                | loops_n_condition inside_brackets

   31 loops_n_condition: for_statement
   32                  | switch
   33                  | do_while
   34                  | variable_initialization SEMICOLON
   35                  | variable_assignment SEMICOLON
   36                  | class_instance SEMICOLON
   37                  | member_access SEMICOLON

   38 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

   39 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step

   40 for_variable: ε
   41             | variable_assignment

   42 for_comparison: ε
   43               | VAR_NAME CONDITION_SYMBOL comparison_value bool_operator

   44 comparison_value: INT_VALUE
   45                 | DOUBLE_VALUE
   46                 | CHAR_VALUE
   47                 | BOOLEAN_VALUE
   48                 | VAR_NAME

   49 bool_operator: ε
   50              | BOOL_SYMBOL for_comparison

   51 for_step: ε
   52         | VAR_NAME step

   53 step: INCREAMENT_DECREAMENT
   54     | LOOP_STEP step_value

   55 step_value: INT_VALUE
   56           | DOUBLE_VALUE

   57 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

   58 do_condition: operand CONDITION_SYMBOL operand
   59             | BOOLEAN_VALUE

   60 operand: VAR_NAME
   61        | INT_VALUE
   62        | DOUBLE_VALUE
   63        | CHAR_VALUE
   64        | BOOLEAN_VALUE
   65        | VAR_NAME

   66 variable_initialization: variable_type VAR_NAME

   67 variable_assignment: variable_type VAR_NAME EQUAL_SIGN variable_value

   68 variable_value: INT_VALUE
   69               | CHAR_VALUE
   70               | DOUBLE_VALUE
   71               | BOOLEAN_VALUE
   72               | STRING_VALUE

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

   74 case: CASE switch_value COLON switch_content case
   75     | ε

   76 switch_value: INT_VALUE
   77             | CHAR_VALUE

   78 switch_content: ε
   79               | BREAK

   80 default: DEFAULT COLON switch_content
   81        | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CURLY_BRACKET_LEFT (258) 3 16 17 38 57 73
    CURLY_BRACKET_RIGHT (259) 3 16 17 38 57 73
    BRACKET_LEFT (260) 14 16 17 38 57 73
    BRACKET_RIGHT (261) 14 16 17 38 57 73
    EQUAL_SIGN (262) 14 67
    SEMICOLON (263) 7 8 26 27 28 34 35 36 37 39 57
    SINGLE_MARK (264)
    COLON (265) 74 80
    COMMA (266) 24
    DOT (267) 15
    PUBLIC (268) 3 19
    PRIVATE (269) 18
    CLASS (270) 3
    CLASS_NAME (271) 3 14
    NEW (272) 14
    FOR (273) 38
    DO (274) 57
    WHILE (275) 57
    CONDITION_SYMBOL (276) 43 58
    BOOL_SYMBOL (277) 50
    INCREAMENT_DECREAMENT (278) 53
    LOOP_STEP (279) 54
    SWITCH (280) 73
    CASE (281) 74
    DEFAULT (282) 80
    BREAK (283) 79
    RETURN (284) 26 27 28
    VAR_NAME (285) 14 15 16 17 22 27 43 48 52 60 65 66 67 73
    VOID (286) 16
    INT (287) 9
    CHAR (288) 11
    DOUBLE (289) 10
    BOOLEAN (290) 12
    STRING (291) 13
    INT_VALUE (292) 44 55 61 68 76
    CHAR_VALUE (293) 46 63 69 77
    DOUBLE_VALUE (294) 45 56 62 70
    BOOLEAN_VALUE (295) 47 59 64 71
    STRING_VALUE (296) 72


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1 2
        on right: 0
    class_identifier (44)
        on left: 3
        on right: 2
    class_body (45)
        on left: 4 5 6
        on right: 3 5 6
    class_members (46)
        on left: 7 8
        on right: 6
    variable_type (47)
        on left: 9 10 11 12 13
        on right: 17 22 66 67
    class_instance (48)
        on left: 14
        on right: 36
    member_access (49)
        on left: 15
        on right: 37
    functions (50)
        on left: 16 17
        on right: 5
    function_visibility (51)
        on left: 18 19
        on right: 16 17
    arguments (52)
        on left: 20 21
        on right: 16 17
    parameters (53)
        on left: 22
        on right: 21 24
    arguments_end (54)
        on left: 23 24
        on right: 22
    inside_void_function (55)
        on left: 25 26
        on right: 16
    inside_function (56)
        on left: 27 28
        on right: 17
    inside_brackets (57)
        on left: 29 30
        on right: 25 26 27 28 30 38 57
    loops_n_condition (58)
        on left: 31 32 33 34 35 36 37
        on right: 30
    for_statement (59)
        on left: 38
        on right: 31
    for_condition (60)
        on left: 39
        on right: 38
    for_variable (61)
        on left: 40 41
        on right: 39
    for_comparison (62)
        on left: 42 43
        on right: 39 50
    comparison_value (63)
        on left: 44 45 46 47 48
        on right: 43
    bool_operator (64)
        on left: 49 50
        on right: 43
    for_step (65)
        on left: 51 52
        on right: 39
    step (66)
        on left: 53 54
        on right: 52
    step_value (67)
        on left: 55 56
        on right: 54
    do_while (68)
        on left: 57
        on right: 33
    do_condition (69)
        on left: 58 59
        on right: 57
    operand (70)
        on left: 60 61 62 63 64 65
        on right: 58
    variable_initialization (71)
        on left: 66
        on right: 7 34
    variable_assignment (72)
        on left: 67
        on right: 8 35 41
    variable_value (73)
        on left: 68 69 70 71 72
        on right: 28 67
    switch (74)
        on left: 73
        on right: 32
    case (75)
        on left: 74 75
        on right: 73 74
    switch_value (76)
        on left: 76 77
        on right: 74
    switch_content (77)
        on left: 78 79
        on right: 74 80
    default (78)
        on left: 80 81
        on right: 73


State 0

    0 $accept: • program $end

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program           go to state 2
    class_identifier  go to state 3


State 1

    3 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    2 program: class_identifier •

    $default  reduce using rule 2 (program)


State 4

    3 class_identifier: PUBLIC CLASS • CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 6


State 5

    0 $accept: program $end •

    $default  accept


State 6

    3 class_identifier: PUBLIC CLASS CLASS_NAME • CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 7


State 7

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT • class_body CURLY_BRACKET_RIGHT

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9
    INT      shift, and go to state 10
    CHAR     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    STRING   shift, and go to state 14

    $default  reduce using rule 4 (class_body)

    class_body               go to state 15
    class_members            go to state 16
    variable_type            go to state 17
    functions                go to state 18
    function_visibility      go to state 19
    variable_initialization  go to state 20
    variable_assignment      go to state 21


State 8

   19 function_visibility: PUBLIC •

    $default  reduce using rule 19 (function_visibility)


State 9

   18 function_visibility: PRIVATE •

    $default  reduce using rule 18 (function_visibility)


State 10

    9 variable_type: INT •

    $default  reduce using rule 9 (variable_type)


State 11

   11 variable_type: CHAR •

    $default  reduce using rule 11 (variable_type)


State 12

   10 variable_type: DOUBLE •

    $default  reduce using rule 10 (variable_type)


State 13

   12 variable_type: BOOLEAN •

    $default  reduce using rule 12 (variable_type)


State 14

   13 variable_type: STRING •

    $default  reduce using rule 13 (variable_type)


State 15

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 22


State 16

    6 class_body: class_members • class_body

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9
    INT      shift, and go to state 10
    CHAR     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    STRING   shift, and go to state 14

    $default  reduce using rule 4 (class_body)

    class_body               go to state 23
    class_members            go to state 16
    variable_type            go to state 17
    functions                go to state 18
    function_visibility      go to state 19
    variable_initialization  go to state 20
    variable_assignment      go to state 21


State 17

   66 variable_initialization: variable_type • VAR_NAME
   67 variable_assignment: variable_type • VAR_NAME EQUAL_SIGN variable_value

    VAR_NAME  shift, and go to state 24


State 18

    5 class_body: functions • class_body

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9
    INT      shift, and go to state 10
    CHAR     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    STRING   shift, and go to state 14

    $default  reduce using rule 4 (class_body)

    class_body               go to state 25
    class_members            go to state 16
    variable_type            go to state 17
    functions                go to state 18
    function_visibility      go to state 19
    variable_initialization  go to state 20
    variable_assignment      go to state 21


State 19

   16 functions: function_visibility • VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   17          | function_visibility • variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VOID     shift, and go to state 26
    INT      shift, and go to state 10
    CHAR     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    STRING   shift, and go to state 14

    variable_type  go to state 27


State 20

    7 class_members: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 28


State 21

    8 class_members: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 29


State 22

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT •

    $default  reduce using rule 3 (class_identifier)


State 23

    6 class_body: class_members class_body •

    $default  reduce using rule 6 (class_body)


State 24

   66 variable_initialization: variable_type VAR_NAME •
   67 variable_assignment: variable_type VAR_NAME • EQUAL_SIGN variable_value

    EQUAL_SIGN  shift, and go to state 30

    $default  reduce using rule 66 (variable_initialization)


State 25

    5 class_body: functions class_body •

    $default  reduce using rule 5 (class_body)


State 26

   16 functions: function_visibility VOID • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 31


State 27

   17 functions: function_visibility variable_type • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 32


State 28

    7 class_members: variable_initialization SEMICOLON •

    $default  reduce using rule 7 (class_members)


State 29

    8 class_members: variable_assignment SEMICOLON •

    $default  reduce using rule 8 (class_members)


State 30

   67 variable_assignment: variable_type VAR_NAME EQUAL_SIGN • variable_value

    INT_VALUE      shift, and go to state 33
    CHAR_VALUE     shift, and go to state 34
    DOUBLE_VALUE   shift, and go to state 35
    BOOLEAN_VALUE  shift, and go to state 36
    STRING_VALUE   shift, and go to state 37

    variable_value  go to state 38


State 31

   16 functions: function_visibility VOID VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 39


State 32

   17 functions: function_visibility variable_type VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 40


State 33

   68 variable_value: INT_VALUE •

    $default  reduce using rule 68 (variable_value)


State 34

   69 variable_value: CHAR_VALUE •

    $default  reduce using rule 69 (variable_value)


State 35

   70 variable_value: DOUBLE_VALUE •

    $default  reduce using rule 70 (variable_value)


State 36

   71 variable_value: BOOLEAN_VALUE •

    $default  reduce using rule 71 (variable_value)


State 37

   72 variable_value: STRING_VALUE •

    $default  reduce using rule 72 (variable_value)


State 38

   67 variable_assignment: variable_type VAR_NAME EQUAL_SIGN variable_value •

    $default  reduce using rule 67 (variable_assignment)


State 39

   16 functions: function_visibility VOID VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 10
    CHAR     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    STRING   shift, and go to state 14

    $default  reduce using rule 20 (arguments)

    variable_type  go to state 41
    arguments      go to state 42
    parameters     go to state 43


State 40

   17 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 10
    CHAR     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    STRING   shift, and go to state 14

    $default  reduce using rule 20 (arguments)

    variable_type  go to state 41
    arguments      go to state 44
    parameters     go to state 43


State 41

   22 parameters: variable_type • VAR_NAME arguments_end

    VAR_NAME  shift, and go to state 45


State 42

   16 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 46


State 43

   21 arguments: parameters •

    $default  reduce using rule 21 (arguments)


State 44

   17 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 47


State 45

   22 parameters: variable_type VAR_NAME • arguments_end

    COMMA  shift, and go to state 48

    $default  reduce using rule 23 (arguments_end)

    arguments_end  go to state 49


State 46

   16 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 50


State 47

   17 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 51


State 48

   24 arguments_end: COMMA • parameters

    INT      shift, and go to state 10
    CHAR     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    STRING   shift, and go to state 14

    variable_type  go to state 41
    parameters     go to state 52


State 49

   22 parameters: variable_type VAR_NAME arguments_end •

    $default  reduce using rule 22 (parameters)


State 50

   16 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_void_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 53
    FOR         shift, and go to state 54
    DO          shift, and go to state 55
    SWITCH      shift, and go to state 56
    VAR_NAME    shift, and go to state 57
    INT         shift, and go to state 10
    CHAR        shift, and go to state 11
    DOUBLE      shift, and go to state 12
    BOOLEAN     shift, and go to state 13
    STRING      shift, and go to state 14

    $default  reduce using rule 29 (inside_brackets)

    variable_type            go to state 17
    class_instance           go to state 58
    member_access            go to state 59
    inside_void_function     go to state 60
    inside_brackets          go to state 61
    loops_n_condition        go to state 62
    for_statement            go to state 63
    do_while                 go to state 64
    variable_initialization  go to state 65
    variable_assignment      go to state 66
    switch                   go to state 67


State 51

   17 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_function CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 53
    FOR         shift, and go to state 54
    DO          shift, and go to state 55
    SWITCH      shift, and go to state 56
    VAR_NAME    shift, and go to state 57
    INT         shift, and go to state 10
    CHAR        shift, and go to state 11
    DOUBLE      shift, and go to state 12
    BOOLEAN     shift, and go to state 13
    STRING      shift, and go to state 14

    $default  reduce using rule 29 (inside_brackets)

    variable_type            go to state 17
    class_instance           go to state 58
    member_access            go to state 59
    inside_function          go to state 68
    inside_brackets          go to state 69
    loops_n_condition        go to state 62
    for_statement            go to state 63
    do_while                 go to state 64
    variable_initialization  go to state 65
    variable_assignment      go to state 66
    switch                   go to state 67


State 52

   24 arguments_end: COMMA parameters •

    $default  reduce using rule 24 (arguments_end)


State 53

   14 class_instance: CLASS_NAME • VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    VAR_NAME  shift, and go to state 70


State 54

   38 for_statement: FOR • BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 71


State 55

   57 do_while: DO • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_LEFT  shift, and go to state 72


State 56

   73 switch: SWITCH • BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 73


State 57

   15 member_access: VAR_NAME • DOT VAR_NAME

    DOT  shift, and go to state 74


State 58

   36 loops_n_condition: class_instance • SEMICOLON

    SEMICOLON  shift, and go to state 75


State 59

   37 loops_n_condition: member_access • SEMICOLON

    SEMICOLON  shift, and go to state 76


State 60

   16 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 77


State 61

   25 inside_void_function: inside_brackets •
   26                     | inside_brackets • RETURN SEMICOLON

    RETURN  shift, and go to state 78

    $default  reduce using rule 25 (inside_void_function)


State 62

   30 inside_brackets: loops_n_condition • inside_brackets

    CLASS_NAME  shift, and go to state 53
    FOR         shift, and go to state 54
    DO          shift, and go to state 55
    SWITCH      shift, and go to state 56
    VAR_NAME    shift, and go to state 57
    INT         shift, and go to state 10
    CHAR        shift, and go to state 11
    DOUBLE      shift, and go to state 12
    BOOLEAN     shift, and go to state 13
    STRING      shift, and go to state 14

    $default  reduce using rule 29 (inside_brackets)

    variable_type            go to state 17
    class_instance           go to state 58
    member_access            go to state 59
    inside_brackets          go to state 79
    loops_n_condition        go to state 62
    for_statement            go to state 63
    do_while                 go to state 64
    variable_initialization  go to state 65
    variable_assignment      go to state 66
    switch                   go to state 67


State 63

   31 loops_n_condition: for_statement •

    $default  reduce using rule 31 (loops_n_condition)


State 64

   33 loops_n_condition: do_while •

    $default  reduce using rule 33 (loops_n_condition)


State 65

   34 loops_n_condition: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 80


State 66

   35 loops_n_condition: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 81


State 67

   32 loops_n_condition: switch •

    $default  reduce using rule 32 (loops_n_condition)


State 68

   17 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 82


State 69

   27 inside_function: inside_brackets • RETURN VAR_NAME SEMICOLON
   28                | inside_brackets • RETURN variable_value SEMICOLON

    RETURN  shift, and go to state 83


State 70

   14 class_instance: CLASS_NAME VAR_NAME • EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    EQUAL_SIGN  shift, and go to state 84


State 71

   38 for_statement: FOR BRACKET_LEFT • for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    INT      shift, and go to state 10
    CHAR     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    STRING   shift, and go to state 14

    $default  reduce using rule 40 (for_variable)

    variable_type        go to state 85
    for_condition        go to state 86
    for_variable         go to state 87
    variable_assignment  go to state 88


State 72

   57 do_while: DO CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CLASS_NAME  shift, and go to state 53
    FOR         shift, and go to state 54
    DO          shift, and go to state 55
    SWITCH      shift, and go to state 56
    VAR_NAME    shift, and go to state 57
    INT         shift, and go to state 10
    CHAR        shift, and go to state 11
    DOUBLE      shift, and go to state 12
    BOOLEAN     shift, and go to state 13
    STRING      shift, and go to state 14

    $default  reduce using rule 29 (inside_brackets)

    variable_type            go to state 17
    class_instance           go to state 58
    member_access            go to state 59
    inside_brackets          go to state 89
    loops_n_condition        go to state 62
    for_statement            go to state 63
    do_while                 go to state 64
    variable_initialization  go to state 65
    variable_assignment      go to state 66
    switch                   go to state 67


State 73

   73 switch: SWITCH BRACKET_LEFT • VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 90


State 74

   15 member_access: VAR_NAME DOT • VAR_NAME

    VAR_NAME  shift, and go to state 91


State 75

   36 loops_n_condition: class_instance SEMICOLON •

    $default  reduce using rule 36 (loops_n_condition)


State 76

   37 loops_n_condition: member_access SEMICOLON •

    $default  reduce using rule 37 (loops_n_condition)


State 77

   16 functions: function_visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 16 (functions)


State 78

   26 inside_void_function: inside_brackets RETURN • SEMICOLON

    SEMICOLON  shift, and go to state 92


State 79

   30 inside_brackets: loops_n_condition inside_brackets •

    $default  reduce using rule 30 (inside_brackets)


State 80

   34 loops_n_condition: variable_initialization SEMICOLON •

    $default  reduce using rule 34 (loops_n_condition)


State 81

   35 loops_n_condition: variable_assignment SEMICOLON •

    $default  reduce using rule 35 (loops_n_condition)


State 82

   17 functions: function_visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 17 (functions)


State 83

   27 inside_function: inside_brackets RETURN • VAR_NAME SEMICOLON
   28                | inside_brackets RETURN • variable_value SEMICOLON

    VAR_NAME       shift, and go to state 93
    INT_VALUE      shift, and go to state 33
    CHAR_VALUE     shift, and go to state 34
    DOUBLE_VALUE   shift, and go to state 35
    BOOLEAN_VALUE  shift, and go to state 36
    STRING_VALUE   shift, and go to state 37

    variable_value  go to state 94


State 84

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN • NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    NEW  shift, and go to state 95


State 85

   67 variable_assignment: variable_type • VAR_NAME EQUAL_SIGN variable_value

    VAR_NAME  shift, and go to state 96


State 86

   38 for_statement: FOR BRACKET_LEFT for_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 97


State 87

   39 for_condition: for_variable • SEMICOLON for_comparison SEMICOLON for_step

    SEMICOLON  shift, and go to state 98


State 88

   41 for_variable: variable_assignment •

    $default  reduce using rule 41 (for_variable)


State 89

   57 do_while: DO CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_RIGHT  shift, and go to state 99


State 90

   73 switch: SWITCH BRACKET_LEFT VAR_NAME • BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 100


State 91

   15 member_access: VAR_NAME DOT VAR_NAME •

    $default  reduce using rule 15 (member_access)


State 92

   26 inside_void_function: inside_brackets RETURN SEMICOLON •

    $default  reduce using rule 26 (inside_void_function)


State 93

   27 inside_function: inside_brackets RETURN VAR_NAME • SEMICOLON

    SEMICOLON  shift, and go to state 101


State 94

   28 inside_function: inside_brackets RETURN variable_value • SEMICOLON

    SEMICOLON  shift, and go to state 102


State 95

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW • CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 103


State 96

   67 variable_assignment: variable_type VAR_NAME • EQUAL_SIGN variable_value

    EQUAL_SIGN  shift, and go to state 30


State 97

   38 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 104


State 98

   39 for_condition: for_variable SEMICOLON • for_comparison SEMICOLON for_step

    VAR_NAME  shift, and go to state 105

    $default  reduce using rule 42 (for_comparison)

    for_comparison  go to state 106


State 99

   57 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    WHILE  shift, and go to state 107


State 100

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT • CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 108


State 101

   27 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON •

    $default  reduce using rule 27 (inside_function)


State 102

   28 inside_function: inside_brackets RETURN variable_value SEMICOLON •

    $default  reduce using rule 28 (inside_function)


State 103

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME • BRACKET_LEFT BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 109


State 104

   38 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 53
    FOR         shift, and go to state 54
    DO          shift, and go to state 55
    SWITCH      shift, and go to state 56
    VAR_NAME    shift, and go to state 57
    INT         shift, and go to state 10
    CHAR        shift, and go to state 11
    DOUBLE      shift, and go to state 12
    BOOLEAN     shift, and go to state 13
    STRING      shift, and go to state 14

    $default  reduce using rule 29 (inside_brackets)

    variable_type            go to state 17
    class_instance           go to state 58
    member_access            go to state 59
    inside_brackets          go to state 110
    loops_n_condition        go to state 62
    for_statement            go to state 63
    do_while                 go to state 64
    variable_initialization  go to state 65
    variable_assignment      go to state 66
    switch                   go to state 67


State 105

   43 for_comparison: VAR_NAME • CONDITION_SYMBOL comparison_value bool_operator

    CONDITION_SYMBOL  shift, and go to state 111


State 106

   39 for_condition: for_variable SEMICOLON for_comparison • SEMICOLON for_step

    SEMICOLON  shift, and go to state 112


State 107

   57 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE • BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    BRACKET_LEFT  shift, and go to state 113


State 108

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT • case default CURLY_BRACKET_RIGHT

    CASE  shift, and go to state 114

    $default  reduce using rule 75 (case)

    case  go to state 115


State 109

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 116


State 110

   38 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 117


State 111

   43 for_comparison: VAR_NAME CONDITION_SYMBOL • comparison_value bool_operator

    VAR_NAME       shift, and go to state 118
    INT_VALUE      shift, and go to state 119
    CHAR_VALUE     shift, and go to state 120
    DOUBLE_VALUE   shift, and go to state 121
    BOOLEAN_VALUE  shift, and go to state 122

    comparison_value  go to state 123


State 112

   39 for_condition: for_variable SEMICOLON for_comparison SEMICOLON • for_step

    VAR_NAME  shift, and go to state 124

    $default  reduce using rule 51 (for_step)

    for_step  go to state 125


State 113

   57 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT • do_condition BRACKET_RIGHT SEMICOLON

    VAR_NAME       shift, and go to state 126
    INT_VALUE      shift, and go to state 127
    CHAR_VALUE     shift, and go to state 128
    DOUBLE_VALUE   shift, and go to state 129
    BOOLEAN_VALUE  shift, and go to state 130

    do_condition  go to state 131
    operand       go to state 132


State 114

   74 case: CASE • switch_value COLON switch_content case

    INT_VALUE   shift, and go to state 133
    CHAR_VALUE  shift, and go to state 134

    switch_value  go to state 135


State 115

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case • default CURLY_BRACKET_RIGHT

    DEFAULT  shift, and go to state 136

    $default  reduce using rule 81 (default)

    default  go to state 137


State 116

   14 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT •

    $default  reduce using rule 14 (class_instance)


State 117

   38 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT •

    $default  reduce using rule 38 (for_statement)


State 118

   48 comparison_value: VAR_NAME •

    $default  reduce using rule 48 (comparison_value)


State 119

   44 comparison_value: INT_VALUE •

    $default  reduce using rule 44 (comparison_value)


State 120

   46 comparison_value: CHAR_VALUE •

    $default  reduce using rule 46 (comparison_value)


State 121

   45 comparison_value: DOUBLE_VALUE •

    $default  reduce using rule 45 (comparison_value)


State 122

   47 comparison_value: BOOLEAN_VALUE •

    $default  reduce using rule 47 (comparison_value)


State 123

   43 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value • bool_operator

    BOOL_SYMBOL  shift, and go to state 138

    $default  reduce using rule 49 (bool_operator)

    bool_operator  go to state 139


State 124

   52 for_step: VAR_NAME • step

    INCREAMENT_DECREAMENT  shift, and go to state 140
    LOOP_STEP              shift, and go to state 141

    step  go to state 142


State 125

   39 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step •

    $default  reduce using rule 39 (for_condition)


State 126

   60 operand: VAR_NAME •
   65        | VAR_NAME •

    BRACKET_RIGHT     reduce using rule 60 (operand)
    BRACKET_RIGHT     [reduce using rule 65 (operand)]
    CONDITION_SYMBOL  reduce using rule 60 (operand)
    CONDITION_SYMBOL  [reduce using rule 65 (operand)]
    $default          reduce using rule 60 (operand)


State 127

   61 operand: INT_VALUE •

    $default  reduce using rule 61 (operand)


State 128

   63 operand: CHAR_VALUE •

    $default  reduce using rule 63 (operand)


State 129

   62 operand: DOUBLE_VALUE •

    $default  reduce using rule 62 (operand)


State 130

   59 do_condition: BOOLEAN_VALUE •
   64 operand: BOOLEAN_VALUE •

    CONDITION_SYMBOL  reduce using rule 64 (operand)
    $default          reduce using rule 59 (do_condition)


State 131

   57 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition • BRACKET_RIGHT SEMICOLON

    BRACKET_RIGHT  shift, and go to state 143


State 132

   58 do_condition: operand • CONDITION_SYMBOL operand

    CONDITION_SYMBOL  shift, and go to state 144


State 133

   76 switch_value: INT_VALUE •

    $default  reduce using rule 76 (switch_value)


State 134

   77 switch_value: CHAR_VALUE •

    $default  reduce using rule 77 (switch_value)


State 135

   74 case: CASE switch_value • COLON switch_content case

    COLON  shift, and go to state 145


State 136

   80 default: DEFAULT • COLON switch_content

    COLON  shift, and go to state 146


State 137

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 147


State 138

   50 bool_operator: BOOL_SYMBOL • for_comparison

    VAR_NAME  shift, and go to state 105

    $default  reduce using rule 42 (for_comparison)

    for_comparison  go to state 148


State 139

   43 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value bool_operator •

    $default  reduce using rule 43 (for_comparison)


State 140

   53 step: INCREAMENT_DECREAMENT •

    $default  reduce using rule 53 (step)


State 141

   54 step: LOOP_STEP • step_value

    INT_VALUE     shift, and go to state 149
    DOUBLE_VALUE  shift, and go to state 150

    step_value  go to state 151


State 142

   52 for_step: VAR_NAME step •

    $default  reduce using rule 52 (for_step)


State 143

   57 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT • SEMICOLON

    SEMICOLON  shift, and go to state 152


State 144

   58 do_condition: operand CONDITION_SYMBOL • operand

    VAR_NAME       shift, and go to state 126
    INT_VALUE      shift, and go to state 127
    CHAR_VALUE     shift, and go to state 128
    DOUBLE_VALUE   shift, and go to state 129
    BOOLEAN_VALUE  shift, and go to state 153

    operand  go to state 154


State 145

   74 case: CASE switch_value COLON • switch_content case

    BREAK  shift, and go to state 155

    $default  reduce using rule 78 (switch_content)

    switch_content  go to state 156


State 146

   80 default: DEFAULT COLON • switch_content

    BREAK  shift, and go to state 155

    $default  reduce using rule 78 (switch_content)

    switch_content  go to state 157


State 147

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT •

    $default  reduce using rule 73 (switch)


State 148

   50 bool_operator: BOOL_SYMBOL for_comparison •

    $default  reduce using rule 50 (bool_operator)


State 149

   55 step_value: INT_VALUE •

    $default  reduce using rule 55 (step_value)


State 150

   56 step_value: DOUBLE_VALUE •

    $default  reduce using rule 56 (step_value)


State 151

   54 step: LOOP_STEP step_value •

    $default  reduce using rule 54 (step)


State 152

   57 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON •

    $default  reduce using rule 57 (do_while)


State 153

   64 operand: BOOLEAN_VALUE •

    $default  reduce using rule 64 (operand)


State 154

   58 do_condition: operand CONDITION_SYMBOL operand •

    $default  reduce using rule 58 (do_condition)


State 155

   79 switch_content: BREAK •

    $default  reduce using rule 79 (switch_content)


State 156

   74 case: CASE switch_value COLON switch_content • case

    CASE  shift, and go to state 114

    $default  reduce using rule 75 (case)

    case  go to state 158


State 157

   80 default: DEFAULT COLON switch_content •

    $default  reduce using rule 80 (default)


State 158

   74 case: CASE switch_value COLON switch_content case •

    $default  reduce using rule 74 (case)
