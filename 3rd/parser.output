Terminals unused in grammar

    SINGLE_MARK


Grammar

    0 $accept: program $end

    1 program: ε
    2        | class_identifier

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    4 class_body: ε
    5           | functions class_body
    6           | class_members class_body

    7 class_members: variable_initialization SEMICOLON
    8              | variable_assignment SEMICOLON

    9 variable_initialization: visibility variable_type VAR_NAME

   10 visibility: ε
   11           | PUBLIC
   12           | PRIVATE

   13 variable_assignment: visibility variable_type VAR_NAME EQUAL_SIGN variable_value

   14 variable_value: INT_VALUE
   15               | CHAR_VALUE
   16               | DOUBLE_VALUE
   17               | BOOLEAN_VALUE
   18               | STRING_VALUE

   19 variable_type: INT
   20              | DOUBLE
   21              | CHAR
   22              | BOOLEAN
   23              | STRING

   24 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

   25 member_access: VAR_NAME DOT VAR_NAME

   26 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   27          | visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

   28 arguments: ε
   29          | parameters

   30 parameters: variable_type VAR_NAME arguments_end

   31 arguments_end: ε
   32              | COMMA parameters

   33 inside_void_function: inside_brackets
   34                     | inside_brackets RETURN SEMICOLON

   35 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON
   36                | inside_brackets RETURN variable_value SEMICOLON

   37 inside_brackets: ε
   38                | loops_n_condition inside_brackets

   39 loops_n_condition: for_statement
   40                  | switch
   41                  | do_while
   42                  | variable_initialization SEMICOLON
   43                  | variable_assignment SEMICOLON
   44                  | class_instance SEMICOLON
   45                  | member_access SEMICOLON

   46 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

   47 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step

   48 for_variable: ε
   49             | variable_assignment

   50 for_comparison: ε
   51               | VAR_NAME CONDITION_SYMBOL comparison_value bool_operator

   52 comparison_value: INT_VALUE
   53                 | DOUBLE_VALUE
   54                 | CHAR_VALUE
   55                 | BOOLEAN_VALUE
   56                 | VAR_NAME

   57 bool_operator: ε
   58              | BOOL_SYMBOL for_comparison

   59 for_step: ε
   60         | VAR_NAME step

   61 step: INCREAMENT_DECREAMENT
   62     | LOOP_STEP step_value

   63 step_value: INT_VALUE
   64           | DOUBLE_VALUE

   65 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

   66 do_condition: operand CONDITION_SYMBOL operand
   67             | BOOLEAN_VALUE

   68 operand: VAR_NAME
   69        | INT_VALUE
   70        | DOUBLE_VALUE
   71        | CHAR_VALUE
   72        | BOOLEAN_VALUE

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

   74 case: CASE switch_value COLON switch_content case
   75     | ε

   76 switch_value: INT_VALUE
   77             | CHAR_VALUE

   78 switch_content: ε
   79               | inside_brackets BREAK

   80 default: DEFAULT COLON switch_content
   81        | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CURLY_BRACKET_LEFT (258) 3 26 27 46 65 73
    CURLY_BRACKET_RIGHT (259) 3 26 27 46 65 73
    BRACKET_LEFT (260) 24 26 27 46 65 73
    BRACKET_RIGHT (261) 24 26 27 46 65 73
    EQUAL_SIGN (262) 13 24
    SEMICOLON (263) 7 8 34 35 36 42 43 44 45 47 65
    SINGLE_MARK (264)
    COLON (265) 74 80
    COMMA (266) 32
    DOT (267) 25
    PUBLIC <sval> (268) 3 11
    PRIVATE <sval> (269) 12
    CLASS (270) 3
    CLASS_NAME <sval> (271) 3 24
    NEW (272) 24
    FOR (273) 46
    DO (274) 65
    WHILE (275) 65
    CONDITION_SYMBOL (276) 51 66
    BOOL_SYMBOL (277) 58
    INCREAMENT_DECREAMENT (278) 61
    LOOP_STEP (279) 62
    SWITCH (280) 73
    CASE (281) 74
    DEFAULT (282) 80
    BREAK (283) 79
    RETURN (284) 34 35 36
    VAR_NAME <sval> (285) 9 13 24 25 26 27 30 35 51 56 60 68 73
    VOID <sval> (286) 26
    INT <sval> (287) 19
    CHAR <sval> (288) 21
    DOUBLE <sval> (289) 20
    BOOLEAN <sval> (290) 22
    STRING <sval> (291) 23
    INT_VALUE <ival> (292) 14 52 63 69 76
    CHAR_VALUE <cval> (293) 15 54 71 77
    DOUBLE_VALUE <dval> (294) 16 53 64 70
    BOOLEAN_VALUE <sval> (295) 17 55 67 72
    STRING_VALUE <sval> (296) 18


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1 2
        on right: 0
    class_identifier (44)
        on left: 3
        on right: 2
    class_body (45)
        on left: 4 5 6
        on right: 3 5 6
    class_members (46)
        on left: 7 8
        on right: 6
    variable_initialization (47)
        on left: 9
        on right: 7 42
    visibility <ival> (48)
        on left: 10 11 12
        on right: 9 13 26 27
    variable_assignment <sval> (49)
        on left: 13
        on right: 8 43 49
    variable_value (50)
        on left: 14 15 16 17 18
        on right: 13 36
    variable_type <sval> (51)
        on left: 19 20 21 22 23
        on right: 9 13 27 30
    class_instance (52)
        on left: 24
        on right: 44
    member_access (53)
        on left: 25
        on right: 45
    functions (54)
        on left: 26 27
        on right: 5
    arguments (55)
        on left: 28 29
        on right: 26 27
    parameters (56)
        on left: 30
        on right: 29 32
    arguments_end (57)
        on left: 31 32
        on right: 30
    inside_void_function (58)
        on left: 33 34
        on right: 26
    inside_function (59)
        on left: 35 36
        on right: 27
    inside_brackets (60)
        on left: 37 38
        on right: 33 34 35 36 38 46 65 79
    loops_n_condition (61)
        on left: 39 40 41 42 43 44 45
        on right: 38
    for_statement (62)
        on left: 46
        on right: 39
    for_condition (63)
        on left: 47
        on right: 46
    for_variable (64)
        on left: 48 49
        on right: 47
    for_comparison (65)
        on left: 50 51
        on right: 47 58
    comparison_value (66)
        on left: 52 53 54 55 56
        on right: 51
    bool_operator (67)
        on left: 57 58
        on right: 51
    for_step (68)
        on left: 59 60
        on right: 47
    step (69)
        on left: 61 62
        on right: 60
    step_value (70)
        on left: 63 64
        on right: 62
    do_while (71)
        on left: 65
        on right: 41
    do_condition (72)
        on left: 66 67
        on right: 65
    operand (73)
        on left: 68 69 70 71 72
        on right: 66
    switch (74)
        on left: 73
        on right: 40
    case (75)
        on left: 74 75
        on right: 73 74
    switch_value (76)
        on left: 76 77
        on right: 74
    switch_content (77)
        on left: 78 79
        on right: 74 80
    default (78)
        on left: 80 81
        on right: 73


State 0

    0 $accept: • program $end

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program           go to state 2
    class_identifier  go to state 3


State 1

    3 class_identifier: PUBLIC • CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    2 program: class_identifier •

    $default  reduce using rule 2 (program)


State 4

    3 class_identifier: PUBLIC CLASS • CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 6


State 5

    0 $accept: program $end •

    $default  accept


State 6

    3 class_identifier: PUBLIC CLASS CLASS_NAME • CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 7


State 7

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT • class_body CURLY_BRACKET_RIGHT

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 10 (visibility)

    class_body               go to state 10
    class_members            go to state 11
    variable_initialization  go to state 12
    visibility               go to state 13
    variable_assignment      go to state 14
    functions                go to state 15


State 8

   11 visibility: PUBLIC •

    $default  reduce using rule 11 (visibility)


State 9

   12 visibility: PRIVATE •

    $default  reduce using rule 12 (visibility)


State 10

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 16


State 11

    6 class_body: class_members • class_body

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 10 (visibility)

    class_body               go to state 17
    class_members            go to state 11
    variable_initialization  go to state 12
    visibility               go to state 13
    variable_assignment      go to state 14
    functions                go to state 15


State 12

    7 class_members: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 18


State 13

    9 variable_initialization: visibility • variable_type VAR_NAME
   13 variable_assignment: visibility • variable_type VAR_NAME EQUAL_SIGN variable_value
   26 functions: visibility • VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT
   27          | visibility • variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VOID     shift, and go to state 19
    INT      shift, and go to state 20
    CHAR     shift, and go to state 21
    DOUBLE   shift, and go to state 22
    BOOLEAN  shift, and go to state 23
    STRING   shift, and go to state 24

    variable_type  go to state 25


State 14

    8 class_members: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 26


State 15

    5 class_body: functions • class_body

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9

    CURLY_BRACKET_RIGHT  reduce using rule 4 (class_body)
    $default             reduce using rule 10 (visibility)

    class_body               go to state 27
    class_members            go to state 11
    variable_initialization  go to state 12
    visibility               go to state 13
    variable_assignment      go to state 14
    functions                go to state 15


State 16

    3 class_identifier: PUBLIC CLASS CLASS_NAME CURLY_BRACKET_LEFT class_body CURLY_BRACKET_RIGHT •

    $default  reduce using rule 3 (class_identifier)


State 17

    6 class_body: class_members class_body •

    $default  reduce using rule 6 (class_body)


State 18

    7 class_members: variable_initialization SEMICOLON •

    $default  reduce using rule 7 (class_members)


State 19

   26 functions: visibility VOID • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 28


State 20

   19 variable_type: INT •

    $default  reduce using rule 19 (variable_type)


State 21

   21 variable_type: CHAR •

    $default  reduce using rule 21 (variable_type)


State 22

   20 variable_type: DOUBLE •

    $default  reduce using rule 20 (variable_type)


State 23

   22 variable_type: BOOLEAN •

    $default  reduce using rule 22 (variable_type)


State 24

   23 variable_type: STRING •

    $default  reduce using rule 23 (variable_type)


State 25

    9 variable_initialization: visibility variable_type • VAR_NAME
   13 variable_assignment: visibility variable_type • VAR_NAME EQUAL_SIGN variable_value
   27 functions: visibility variable_type • VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 29


State 26

    8 class_members: variable_assignment SEMICOLON •

    $default  reduce using rule 8 (class_members)


State 27

    5 class_body: functions class_body •

    $default  reduce using rule 5 (class_body)


State 28

   26 functions: visibility VOID VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 30


State 29

    9 variable_initialization: visibility variable_type VAR_NAME •
   13 variable_assignment: visibility variable_type VAR_NAME • EQUAL_SIGN variable_value
   27 functions: visibility variable_type VAR_NAME • BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 31
    EQUAL_SIGN    shift, and go to state 32

    $default  reduce using rule 9 (variable_initialization)


State 30

   26 functions: visibility VOID VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 20
    CHAR     shift, and go to state 21
    DOUBLE   shift, and go to state 22
    BOOLEAN  shift, and go to state 23
    STRING   shift, and go to state 24

    $default  reduce using rule 28 (arguments)

    variable_type  go to state 33
    arguments      go to state 34
    parameters     go to state 35


State 31

   27 functions: visibility variable_type VAR_NAME BRACKET_LEFT • arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    INT      shift, and go to state 20
    CHAR     shift, and go to state 21
    DOUBLE   shift, and go to state 22
    BOOLEAN  shift, and go to state 23
    STRING   shift, and go to state 24

    $default  reduce using rule 28 (arguments)

    variable_type  go to state 33
    arguments      go to state 36
    parameters     go to state 35


State 32

   13 variable_assignment: visibility variable_type VAR_NAME EQUAL_SIGN • variable_value

    INT_VALUE      shift, and go to state 37
    CHAR_VALUE     shift, and go to state 38
    DOUBLE_VALUE   shift, and go to state 39
    BOOLEAN_VALUE  shift, and go to state 40
    STRING_VALUE   shift, and go to state 41

    variable_value  go to state 42


State 33

   30 parameters: variable_type • VAR_NAME arguments_end

    VAR_NAME  shift, and go to state 43


State 34

   26 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 44


State 35

   29 arguments: parameters •

    $default  reduce using rule 29 (arguments)


State 36

   27 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 45


State 37

   14 variable_value: INT_VALUE •

    $default  reduce using rule 14 (variable_value)


State 38

   15 variable_value: CHAR_VALUE •

    $default  reduce using rule 15 (variable_value)


State 39

   16 variable_value: DOUBLE_VALUE •

    $default  reduce using rule 16 (variable_value)


State 40

   17 variable_value: BOOLEAN_VALUE •

    $default  reduce using rule 17 (variable_value)


State 41

   18 variable_value: STRING_VALUE •

    $default  reduce using rule 18 (variable_value)


State 42

   13 variable_assignment: visibility variable_type VAR_NAME EQUAL_SIGN variable_value •

    $default  reduce using rule 13 (variable_assignment)


State 43

   30 parameters: variable_type VAR_NAME • arguments_end

    COMMA  shift, and go to state 46

    $default  reduce using rule 31 (arguments_end)

    arguments_end  go to state 47


State 44

   26 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 48


State 45

   27 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 49


State 46

   32 arguments_end: COMMA • parameters

    INT      shift, and go to state 20
    CHAR     shift, and go to state 21
    DOUBLE   shift, and go to state 22
    BOOLEAN  shift, and go to state 23
    STRING   shift, and go to state 24

    variable_type  go to state 33
    parameters     go to state 50


State 47

   30 parameters: variable_type VAR_NAME arguments_end •

    $default  reduce using rule 30 (parameters)


State 48

   26 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_void_function CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 8
    PRIVATE     shift, and go to state 9
    CLASS_NAME  shift, and go to state 51
    FOR         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    VAR_NAME    shift, and go to state 55

    CURLY_BRACKET_RIGHT  reduce using rule 37 (inside_brackets)
    RETURN               reduce using rule 37 (inside_brackets)
    $default             reduce using rule 10 (visibility)

    variable_initialization  go to state 56
    visibility               go to state 57
    variable_assignment      go to state 58
    class_instance           go to state 59
    member_access            go to state 60
    inside_void_function     go to state 61
    inside_brackets          go to state 62
    loops_n_condition        go to state 63
    for_statement            go to state 64
    do_while                 go to state 65
    switch                   go to state 66


State 49

   27 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_function CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 8
    PRIVATE     shift, and go to state 9
    CLASS_NAME  shift, and go to state 51
    FOR         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    VAR_NAME    shift, and go to state 55

    RETURN    reduce using rule 37 (inside_brackets)
    $default  reduce using rule 10 (visibility)

    variable_initialization  go to state 56
    visibility               go to state 57
    variable_assignment      go to state 58
    class_instance           go to state 59
    member_access            go to state 60
    inside_function          go to state 67
    inside_brackets          go to state 68
    loops_n_condition        go to state 63
    for_statement            go to state 64
    do_while                 go to state 65
    switch                   go to state 66


State 50

   32 arguments_end: COMMA parameters •

    $default  reduce using rule 32 (arguments_end)


State 51

   24 class_instance: CLASS_NAME • VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    VAR_NAME  shift, and go to state 69


State 52

   46 for_statement: FOR • BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 70


State 53

   65 do_while: DO • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_LEFT  shift, and go to state 71


State 54

   73 switch: SWITCH • BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 72


State 55

   25 member_access: VAR_NAME • DOT VAR_NAME

    DOT  shift, and go to state 73


State 56

   42 loops_n_condition: variable_initialization • SEMICOLON

    SEMICOLON  shift, and go to state 74


State 57

    9 variable_initialization: visibility • variable_type VAR_NAME
   13 variable_assignment: visibility • variable_type VAR_NAME EQUAL_SIGN variable_value

    INT      shift, and go to state 20
    CHAR     shift, and go to state 21
    DOUBLE   shift, and go to state 22
    BOOLEAN  shift, and go to state 23
    STRING   shift, and go to state 24

    variable_type  go to state 75


State 58

   43 loops_n_condition: variable_assignment • SEMICOLON

    SEMICOLON  shift, and go to state 76


State 59

   44 loops_n_condition: class_instance • SEMICOLON

    SEMICOLON  shift, and go to state 77


State 60

   45 loops_n_condition: member_access • SEMICOLON

    SEMICOLON  shift, and go to state 78


State 61

   26 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 79


State 62

   33 inside_void_function: inside_brackets •
   34                     | inside_brackets • RETURN SEMICOLON

    RETURN  shift, and go to state 80

    $default  reduce using rule 33 (inside_void_function)


State 63

   38 inside_brackets: loops_n_condition • inside_brackets

    PUBLIC      shift, and go to state 8
    PRIVATE     shift, and go to state 9
    CLASS_NAME  shift, and go to state 51
    FOR         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    VAR_NAME    shift, and go to state 55

    CURLY_BRACKET_RIGHT  reduce using rule 37 (inside_brackets)
    BREAK                reduce using rule 37 (inside_brackets)
    RETURN               reduce using rule 37 (inside_brackets)
    $default             reduce using rule 10 (visibility)

    variable_initialization  go to state 56
    visibility               go to state 57
    variable_assignment      go to state 58
    class_instance           go to state 59
    member_access            go to state 60
    inside_brackets          go to state 81
    loops_n_condition        go to state 63
    for_statement            go to state 64
    do_while                 go to state 65
    switch                   go to state 66


State 64

   39 loops_n_condition: for_statement •

    $default  reduce using rule 39 (loops_n_condition)


State 65

   41 loops_n_condition: do_while •

    $default  reduce using rule 41 (loops_n_condition)


State 66

   40 loops_n_condition: switch •

    $default  reduce using rule 40 (loops_n_condition)


State 67

   27 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 82


State 68

   35 inside_function: inside_brackets • RETURN VAR_NAME SEMICOLON
   36                | inside_brackets • RETURN variable_value SEMICOLON

    RETURN  shift, and go to state 83


State 69

   24 class_instance: CLASS_NAME VAR_NAME • EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    EQUAL_SIGN  shift, and go to state 84


State 70

   46 for_statement: FOR BRACKET_LEFT • for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    PUBLIC   shift, and go to state 8
    PRIVATE  shift, and go to state 9

    SEMICOLON  reduce using rule 48 (for_variable)
    $default   reduce using rule 10 (visibility)

    visibility           go to state 85
    variable_assignment  go to state 86
    for_condition        go to state 87
    for_variable         go to state 88


State 71

   65 do_while: DO CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    PUBLIC      shift, and go to state 8
    PRIVATE     shift, and go to state 9
    CLASS_NAME  shift, and go to state 51
    FOR         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    VAR_NAME    shift, and go to state 55

    CURLY_BRACKET_RIGHT  reduce using rule 37 (inside_brackets)
    $default             reduce using rule 10 (visibility)

    variable_initialization  go to state 56
    visibility               go to state 57
    variable_assignment      go to state 58
    class_instance           go to state 59
    member_access            go to state 60
    inside_brackets          go to state 89
    loops_n_condition        go to state 63
    for_statement            go to state 64
    do_while                 go to state 65
    switch                   go to state 66


State 72

   73 switch: SWITCH BRACKET_LEFT • VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    VAR_NAME  shift, and go to state 90


State 73

   25 member_access: VAR_NAME DOT • VAR_NAME

    VAR_NAME  shift, and go to state 91


State 74

   42 loops_n_condition: variable_initialization SEMICOLON •

    $default  reduce using rule 42 (loops_n_condition)


State 75

    9 variable_initialization: visibility variable_type • VAR_NAME
   13 variable_assignment: visibility variable_type • VAR_NAME EQUAL_SIGN variable_value

    VAR_NAME  shift, and go to state 92


State 76

   43 loops_n_condition: variable_assignment SEMICOLON •

    $default  reduce using rule 43 (loops_n_condition)


State 77

   44 loops_n_condition: class_instance SEMICOLON •

    $default  reduce using rule 44 (loops_n_condition)


State 78

   45 loops_n_condition: member_access SEMICOLON •

    $default  reduce using rule 45 (loops_n_condition)


State 79

   26 functions: visibility VOID VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_void_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 26 (functions)


State 80

   34 inside_void_function: inside_brackets RETURN • SEMICOLON

    SEMICOLON  shift, and go to state 93


State 81

   38 inside_brackets: loops_n_condition inside_brackets •

    $default  reduce using rule 38 (inside_brackets)


State 82

   27 functions: visibility variable_type VAR_NAME BRACKET_LEFT arguments BRACKET_RIGHT CURLY_BRACKET_LEFT inside_function CURLY_BRACKET_RIGHT •

    $default  reduce using rule 27 (functions)


State 83

   35 inside_function: inside_brackets RETURN • VAR_NAME SEMICOLON
   36                | inside_brackets RETURN • variable_value SEMICOLON

    VAR_NAME       shift, and go to state 94
    INT_VALUE      shift, and go to state 37
    CHAR_VALUE     shift, and go to state 38
    DOUBLE_VALUE   shift, and go to state 39
    BOOLEAN_VALUE  shift, and go to state 40
    STRING_VALUE   shift, and go to state 41

    variable_value  go to state 95


State 84

   24 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN • NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    NEW  shift, and go to state 96


State 85

   13 variable_assignment: visibility • variable_type VAR_NAME EQUAL_SIGN variable_value

    INT      shift, and go to state 20
    CHAR     shift, and go to state 21
    DOUBLE   shift, and go to state 22
    BOOLEAN  shift, and go to state 23
    STRING   shift, and go to state 24

    variable_type  go to state 97


State 86

   49 for_variable: variable_assignment •

    $default  reduce using rule 49 (for_variable)


State 87

   46 for_statement: FOR BRACKET_LEFT for_condition • BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 98


State 88

   47 for_condition: for_variable • SEMICOLON for_comparison SEMICOLON for_step

    SEMICOLON  shift, and go to state 99


State 89

   65 do_while: DO CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    CURLY_BRACKET_RIGHT  shift, and go to state 100


State 90

   73 switch: SWITCH BRACKET_LEFT VAR_NAME • BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 101


State 91

   25 member_access: VAR_NAME DOT VAR_NAME •

    $default  reduce using rule 25 (member_access)


State 92

    9 variable_initialization: visibility variable_type VAR_NAME •
   13 variable_assignment: visibility variable_type VAR_NAME • EQUAL_SIGN variable_value

    EQUAL_SIGN  shift, and go to state 32

    $default  reduce using rule 9 (variable_initialization)


State 93

   34 inside_void_function: inside_brackets RETURN SEMICOLON •

    $default  reduce using rule 34 (inside_void_function)


State 94

   35 inside_function: inside_brackets RETURN VAR_NAME • SEMICOLON

    SEMICOLON  shift, and go to state 102


State 95

   36 inside_function: inside_brackets RETURN variable_value • SEMICOLON

    SEMICOLON  shift, and go to state 103


State 96

   24 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW • CLASS_NAME BRACKET_LEFT BRACKET_RIGHT

    CLASS_NAME  shift, and go to state 104


State 97

   13 variable_assignment: visibility variable_type • VAR_NAME EQUAL_SIGN variable_value

    VAR_NAME  shift, and go to state 105


State 98

   46 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT • CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 106


State 99

   47 for_condition: for_variable SEMICOLON • for_comparison SEMICOLON for_step

    VAR_NAME  shift, and go to state 107

    $default  reduce using rule 50 (for_comparison)

    for_comparison  go to state 108


State 100

   65 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT • WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    WHILE  shift, and go to state 109


State 101

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT • CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT

    CURLY_BRACKET_LEFT  shift, and go to state 110


State 102

   35 inside_function: inside_brackets RETURN VAR_NAME SEMICOLON •

    $default  reduce using rule 35 (inside_function)


State 103

   36 inside_function: inside_brackets RETURN variable_value SEMICOLON •

    $default  reduce using rule 36 (inside_function)


State 104

   24 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME • BRACKET_LEFT BRACKET_RIGHT

    BRACKET_LEFT  shift, and go to state 111


State 105

   13 variable_assignment: visibility variable_type VAR_NAME • EQUAL_SIGN variable_value

    EQUAL_SIGN  shift, and go to state 32


State 106

   46 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT • inside_brackets CURLY_BRACKET_RIGHT

    PUBLIC      shift, and go to state 8
    PRIVATE     shift, and go to state 9
    CLASS_NAME  shift, and go to state 51
    FOR         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    VAR_NAME    shift, and go to state 55

    CURLY_BRACKET_RIGHT  reduce using rule 37 (inside_brackets)
    $default             reduce using rule 10 (visibility)

    variable_initialization  go to state 56
    visibility               go to state 57
    variable_assignment      go to state 58
    class_instance           go to state 59
    member_access            go to state 60
    inside_brackets          go to state 112
    loops_n_condition        go to state 63
    for_statement            go to state 64
    do_while                 go to state 65
    switch                   go to state 66


State 107

   51 for_comparison: VAR_NAME • CONDITION_SYMBOL comparison_value bool_operator

    CONDITION_SYMBOL  shift, and go to state 113


State 108

   47 for_condition: for_variable SEMICOLON for_comparison • SEMICOLON for_step

    SEMICOLON  shift, and go to state 114


State 109

   65 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE • BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON

    BRACKET_LEFT  shift, and go to state 115


State 110

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT • case default CURLY_BRACKET_RIGHT

    CASE  shift, and go to state 116

    $default  reduce using rule 75 (case)

    case  go to state 117


State 111

   24 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT • BRACKET_RIGHT

    BRACKET_RIGHT  shift, and go to state 118


State 112

   46 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 119


State 113

   51 for_comparison: VAR_NAME CONDITION_SYMBOL • comparison_value bool_operator

    VAR_NAME       shift, and go to state 120
    INT_VALUE      shift, and go to state 121
    CHAR_VALUE     shift, and go to state 122
    DOUBLE_VALUE   shift, and go to state 123
    BOOLEAN_VALUE  shift, and go to state 124

    comparison_value  go to state 125


State 114

   47 for_condition: for_variable SEMICOLON for_comparison SEMICOLON • for_step

    VAR_NAME  shift, and go to state 126

    $default  reduce using rule 59 (for_step)

    for_step  go to state 127


State 115

   65 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT • do_condition BRACKET_RIGHT SEMICOLON

    VAR_NAME       shift, and go to state 128
    INT_VALUE      shift, and go to state 129
    CHAR_VALUE     shift, and go to state 130
    DOUBLE_VALUE   shift, and go to state 131
    BOOLEAN_VALUE  shift, and go to state 132

    do_condition  go to state 133
    operand       go to state 134


State 116

   74 case: CASE • switch_value COLON switch_content case

    INT_VALUE   shift, and go to state 135
    CHAR_VALUE  shift, and go to state 136

    switch_value  go to state 137


State 117

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case • default CURLY_BRACKET_RIGHT

    DEFAULT  shift, and go to state 138

    $default  reduce using rule 81 (default)

    default  go to state 139


State 118

   24 class_instance: CLASS_NAME VAR_NAME EQUAL_SIGN NEW CLASS_NAME BRACKET_LEFT BRACKET_RIGHT •

    $default  reduce using rule 24 (class_instance)


State 119

   46 for_statement: FOR BRACKET_LEFT for_condition BRACKET_RIGHT CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT •

    $default  reduce using rule 46 (for_statement)


State 120

   56 comparison_value: VAR_NAME •

    $default  reduce using rule 56 (comparison_value)


State 121

   52 comparison_value: INT_VALUE •

    $default  reduce using rule 52 (comparison_value)


State 122

   54 comparison_value: CHAR_VALUE •

    $default  reduce using rule 54 (comparison_value)


State 123

   53 comparison_value: DOUBLE_VALUE •

    $default  reduce using rule 53 (comparison_value)


State 124

   55 comparison_value: BOOLEAN_VALUE •

    $default  reduce using rule 55 (comparison_value)


State 125

   51 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value • bool_operator

    BOOL_SYMBOL  shift, and go to state 140

    $default  reduce using rule 57 (bool_operator)

    bool_operator  go to state 141


State 126

   60 for_step: VAR_NAME • step

    INCREAMENT_DECREAMENT  shift, and go to state 142
    LOOP_STEP              shift, and go to state 143

    step  go to state 144


State 127

   47 for_condition: for_variable SEMICOLON for_comparison SEMICOLON for_step •

    $default  reduce using rule 47 (for_condition)


State 128

   68 operand: VAR_NAME •

    $default  reduce using rule 68 (operand)


State 129

   69 operand: INT_VALUE •

    $default  reduce using rule 69 (operand)


State 130

   71 operand: CHAR_VALUE •

    $default  reduce using rule 71 (operand)


State 131

   70 operand: DOUBLE_VALUE •

    $default  reduce using rule 70 (operand)


State 132

   67 do_condition: BOOLEAN_VALUE •
   72 operand: BOOLEAN_VALUE •

    CONDITION_SYMBOL  reduce using rule 72 (operand)
    $default          reduce using rule 67 (do_condition)


State 133

   65 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition • BRACKET_RIGHT SEMICOLON

    BRACKET_RIGHT  shift, and go to state 145


State 134

   66 do_condition: operand • CONDITION_SYMBOL operand

    CONDITION_SYMBOL  shift, and go to state 146


State 135

   76 switch_value: INT_VALUE •

    $default  reduce using rule 76 (switch_value)


State 136

   77 switch_value: CHAR_VALUE •

    $default  reduce using rule 77 (switch_value)


State 137

   74 case: CASE switch_value • COLON switch_content case

    COLON  shift, and go to state 147


State 138

   80 default: DEFAULT • COLON switch_content

    COLON  shift, and go to state 148


State 139

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default • CURLY_BRACKET_RIGHT

    CURLY_BRACKET_RIGHT  shift, and go to state 149


State 140

   58 bool_operator: BOOL_SYMBOL • for_comparison

    VAR_NAME  shift, and go to state 107

    $default  reduce using rule 50 (for_comparison)

    for_comparison  go to state 150


State 141

   51 for_comparison: VAR_NAME CONDITION_SYMBOL comparison_value bool_operator •

    $default  reduce using rule 51 (for_comparison)


State 142

   61 step: INCREAMENT_DECREAMENT •

    $default  reduce using rule 61 (step)


State 143

   62 step: LOOP_STEP • step_value

    INT_VALUE     shift, and go to state 151
    DOUBLE_VALUE  shift, and go to state 152

    step_value  go to state 153


State 144

   60 for_step: VAR_NAME step •

    $default  reduce using rule 60 (for_step)


State 145

   65 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT • SEMICOLON

    SEMICOLON  shift, and go to state 154


State 146

   66 do_condition: operand CONDITION_SYMBOL • operand

    VAR_NAME       shift, and go to state 128
    INT_VALUE      shift, and go to state 129
    CHAR_VALUE     shift, and go to state 130
    DOUBLE_VALUE   shift, and go to state 131
    BOOLEAN_VALUE  shift, and go to state 155

    operand  go to state 156


State 147

   74 case: CASE switch_value COLON • switch_content case

    PUBLIC      shift, and go to state 8
    PRIVATE     shift, and go to state 9
    CLASS_NAME  shift, and go to state 51
    FOR         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    VAR_NAME    shift, and go to state 55

    CURLY_BRACKET_RIGHT  reduce using rule 78 (switch_content)
    CASE                 reduce using rule 78 (switch_content)
    DEFAULT              reduce using rule 78 (switch_content)
    BREAK                reduce using rule 37 (inside_brackets)
    $default             reduce using rule 10 (visibility)

    variable_initialization  go to state 56
    visibility               go to state 57
    variable_assignment      go to state 58
    class_instance           go to state 59
    member_access            go to state 60
    inside_brackets          go to state 157
    loops_n_condition        go to state 63
    for_statement            go to state 64
    do_while                 go to state 65
    switch                   go to state 66
    switch_content           go to state 158


State 148

   80 default: DEFAULT COLON • switch_content

    PUBLIC      shift, and go to state 8
    PRIVATE     shift, and go to state 9
    CLASS_NAME  shift, and go to state 51
    FOR         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    VAR_NAME    shift, and go to state 55

    CURLY_BRACKET_RIGHT  reduce using rule 78 (switch_content)
    BREAK                reduce using rule 37 (inside_brackets)
    $default             reduce using rule 10 (visibility)

    variable_initialization  go to state 56
    visibility               go to state 57
    variable_assignment      go to state 58
    class_instance           go to state 59
    member_access            go to state 60
    inside_brackets          go to state 157
    loops_n_condition        go to state 63
    for_statement            go to state 64
    do_while                 go to state 65
    switch                   go to state 66
    switch_content           go to state 159


State 149

   73 switch: SWITCH BRACKET_LEFT VAR_NAME BRACKET_RIGHT CURLY_BRACKET_LEFT case default CURLY_BRACKET_RIGHT •

    $default  reduce using rule 73 (switch)


State 150

   58 bool_operator: BOOL_SYMBOL for_comparison •

    $default  reduce using rule 58 (bool_operator)


State 151

   63 step_value: INT_VALUE •

    $default  reduce using rule 63 (step_value)


State 152

   64 step_value: DOUBLE_VALUE •

    $default  reduce using rule 64 (step_value)


State 153

   62 step: LOOP_STEP step_value •

    $default  reduce using rule 62 (step)


State 154

   65 do_while: DO CURLY_BRACKET_LEFT inside_brackets CURLY_BRACKET_RIGHT WHILE BRACKET_LEFT do_condition BRACKET_RIGHT SEMICOLON •

    $default  reduce using rule 65 (do_while)


State 155

   72 operand: BOOLEAN_VALUE •

    $default  reduce using rule 72 (operand)


State 156

   66 do_condition: operand CONDITION_SYMBOL operand •

    $default  reduce using rule 66 (do_condition)


State 157

   79 switch_content: inside_brackets • BREAK

    BREAK  shift, and go to state 160


State 158

   74 case: CASE switch_value COLON switch_content • case

    CASE  shift, and go to state 116

    $default  reduce using rule 75 (case)

    case  go to state 161


State 159

   80 default: DEFAULT COLON switch_content •

    $default  reduce using rule 80 (default)


State 160

   79 switch_content: inside_brackets BREAK •

    $default  reduce using rule 79 (switch_content)


State 161

   74 case: CASE switch_value COLON switch_content case •

    $default  reduce using rule 74 (case)
